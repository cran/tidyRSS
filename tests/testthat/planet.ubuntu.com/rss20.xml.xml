<?xml version="1.0"?>
<rss version="2.0">

<channel>
	<title>Planet Ubuntu</title>
	<link>http://planet.ubuntu.com/</link>
	<language>en</language>
	<description>Planet Ubuntu - http://planet.ubuntu.com/</description>

<item>
	<title>Stephen Michael Kellat: Late February Miscellany</title>
	<guid isPermaLink="true">http://coyote.works//posts/LateMiscellany20200221/</guid>
	<link>http://coyote.works//posts/LateMiscellany20200221/</link>
	<description>&lt;p&gt;Sometimes I don’t have enough to write a single discrete blog
post. Those times result in a miscellany of brief items. In no
particular order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;My local member of the US House of Representatives held “open
office hours” today locally. For British readers this is akin to a
Member of Parliament holding a “surgery”. Strangely enough, I went
and was seen. I had a “Memorandum Of Conversation” prepared
relative to the points I needed to raise and his staff was
appreciative. It was footnoted and full of background details for
later staff review. I’m not sure I’ll see any action but out of my
group I had the simplest presentation and the only one with
concrete suggested courses of action included.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Feature Freeze and Debian Import Freeze are coming up later this
week per the &lt;a href=&quot;https://wiki.ubuntu.com/FocalFossa/ReleaseSchedule&quot;&gt;release
schedule for Focal Fossa&lt;/a&gt;. If you’re not sure what a Feature
Freeze happens to be, you should &lt;a href=&quot;https://wiki.ubuntu.com/FeatureFreeze&quot;&gt;read the definition&lt;/a&gt;.
This LTS release will come out &lt;strong&gt;after&lt;/strong&gt; Easter the
way the calendar falls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lent begins in much of the world with Ash Wednesday on February
26th. The cycles and seasons of the year continue to march ever
onward.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The e-mail newsletter is continuing to go out. The most recent
installment &lt;a href=&quot;http://archive.is/fRwfr&quot;&gt;discussed why folks
in the EU get 451 errors while trying to look at some US-based news
websites&lt;/a&gt;. The newsletter is &lt;a href=&quot;https://tinyletter.com/erielp&quot;&gt;free to subscribe to&lt;/a&gt;, of
course.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;My broadband has been having sudden fade-outs locally as has the
electricity service. Frankly I’m getting tired of listening to the
UPS units scream and hear breakers pop when the power fails.
Irritants like that are why I made the joke I did to my congressman
earlier today which he thankfully understood and laughed at.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The laptop I am currently using is getting old which is
resulting in compounding mechanical difficulties. To consider
re-purposing Raspberry Pi hardware for mobile usage with it running
Ubuntu appropriately is something I still have in mind. There is a
&lt;a href=&quot;https://magpi.raspberrypi.org/articles/the-best-raspberry-pi-laptop-kits&quot;&gt;
relevant magazine article&lt;/a&gt; that I need to re-read. I don’t think
&lt;a href=&quot;https://learn.adafruit.com/mini-raspberry-pi-handheld-notebook-palmtop/overview&quot;&gt;
the Adafruit DIY project&lt;/a&gt; has been updated for the Raspberry Pi
4, unfortunately.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After taking time to re-read &lt;a href=&quot;https://www.tug.org/TUGboat/Articles/tb29-3/tb93mansfield.pdf&quot;&gt;”How
to develop your own document class — our experience”&lt;/a&gt;, I need to
look at how to adapt a package from CTAN such as either &lt;a href=&quot;https://www.ctan.org/pkg/newspaper&quot;&gt;newspaper&lt;/a&gt; or &lt;a href=&quot;https://www.ctan.org/pkg/papertex&quot;&gt;papertex&lt;/a&gt;. Then again, it
would be odd if I said I was looking at trying to establish a print
newsletter or other small press item at the immediate moment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I know I wrote about the usage of Markdown in LaTeX not that
long ago but I should state that TUGBoat, the publication of the
TeX Users Group, &lt;a href=&quot;https://www.tug.org/TUGboat/tb40-1/tb124novotny-markdown.pdf&quot;&gt;had
a nice article about the package recently&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
	<pubDate>Sat, 22 Feb 2020 03:30:00 +0000</pubDate>
</item>
<item>
	<title>Raphaël Hertzog: Freexian’s report about Debian Long Term Support, January 2020</title>
	<guid isPermaLink="false">https://raphaelhertzog.com/?p=3868</guid>
	<link>https://raphaelhertzog.com/2020/02/21/freexians-report-about-debian-long-term-support-january-2020/</link>
	<description>&lt;p&gt;
 &lt;img alt=&quot;A Debian LTS logo&quot; class=&quot;alignright size-full wp-image-3226&quot; height=&quot;128&quot; src=&quot;https://raphaelhertzog.com/files/2015/03/Debian-LTS-2-small.png&quot; width=&quot;128&quot; /&gt;

 Like &lt;a href=&quot;https://raphaelhertzog.com/tag/Freexian+LTS/&quot;&gt;each month&lt;/a&gt;, here comes a report about the work of &lt;a href=&quot;http://www.freexian.com/services/debian-lts.html&quot;&gt;paid contributors&lt;/a&gt; to &lt;a href=&quot;https://wiki.debian.org/LTS&quot;&gt;Debian LTS&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
        Individual reports
&lt;/h3&gt;

In January, 252 work hours have been dispatched among 14 paid contributors. Their reports are available:
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://lists.debian.org/debian-lts/2020/02/msg00015.html&quot;&gt;Abhijith PA&lt;/a&gt; did 10.0h (out of 14h assigned), and gave back 4h to the pool.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.decadent.org.uk/ben/blog/debian-lts-work-january-2020.html&quot;&gt;Ben Hutchings&lt;/a&gt; did 20h (out of 20h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://linuxpenguins.xyz/brian/debian_lts/2020/01/25/Debian_LTS_report/&quot;&gt;Brian May&lt;/a&gt; did 10h (out of 10h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://chris-lamb.co.uk/posts/free-software-activities-in-january-2020#debian-lts&quot;&gt;Chris Lamb&lt;/a&gt; did 18h (out of 18h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://lists.debian.org/debian-lts/2020/02/msg00003.html&quot;&gt;Dylan Aïssi&lt;/a&gt; did 6.5h (out of 8h assigned), thus carrying over 1.5h to February.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://lists.debian.org/debian-lts/2020/02/msg00024.html&quot;&gt;Emilio Pozuelo Monfort&lt;/a&gt; did 8h (out of 23.75h assigned), thus carrying over 15.75h to February.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://lists.debian.org/debian-lts/2020/02/msg00020.html&quot;&gt;Hugo Lefeuvre&lt;/a&gt; did 5.5h (out of 12h assigned) and gave back 6.5h to the pool.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://gambaru.de/blog/2020/02/10/my-free-software-activities-in-january-2020/&quot;&gt;Markus Koschany&lt;/a&gt; did 15h (out of 23.75h assigned), thus carrying over 8.75h to February.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://sunweavers.net/blog/node/107&quot;&gt;Mike Gabriel&lt;/a&gt; did 20h (out of 20h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://inguza.com/report/debian-long-term-support-work-2020-january&quot;&gt;Ola Lundqvist&lt;/a&gt; did 11.5h (out of 8h assigned plus 11.5h from December), and gave back 3.5h, thus carrying over 4.5h to February.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://lists.debian.org/debian-lts/2020/02/msg00001.html&quot;&gt;Roberto C. Sánchez&lt;/a&gt; did 10.75h (out of 23.75h assigned), thus carrying over 13h to February.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://blog.beuc.net/posts/Debian_LTS_and_ELTS_-_January_2020/&quot;&gt;Sylvain Beucler&lt;/a&gt; did 23.75h (out of 23.75h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.alteholz.eu/2020/02/my-debian-activities-in-january-2020/&quot;&gt;Thorsten Alteholz&lt;/a&gt; did 23.75h (out of 23.75h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://utkarsh2102.tk/debian/2020/02/10/debian-activities-for-january-2020.html&quot;&gt;Utkarsh Gupta&lt;/a&gt; did 23.75h (out of 23.75h assigned).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
        Evolution of the situation
&lt;/h3&gt;

&lt;p&gt;
 	January started calm until at the end of the month some LTS contributors met, some for the first time
        ever, at the &lt;a href=&quot;https://wiki.debian.org/DebianEvents/be/2020/MiniDebCamp&quot;&gt;Mini-DebCamp&lt;/a&gt; preceeding
        &lt;a href=&quot;https://fosdem.org/2020&quot;&gt;FOSDEM&lt;/a&gt; in Brussels. While there were no formal events about LTS at 
        both events, such face2face meetings have proven to be very useful for future collaborations!
&lt;br /&gt;
	We currently have  59 LTS sponsors sponsoring 219h each month. Still, as always we are welcoming &lt;a href=&quot;https://www.freexian.com/services/debian-lts.html&quot;&gt;new LTS sponsors&lt;/a&gt;! 
&lt;br /&gt;

&lt;/p&gt;

&lt;p&gt;
        The &lt;a href=&quot;https://security-tracker.debian.org/tracker/status/release/oldoldstable&quot;&gt;security tracker&lt;/a&gt; currently lists 42 packages with a known CVE and the &lt;a href=&quot;https://salsa.debian.org/security-tracker-team/security-tracker/raw/master/data/dla-needed.txt&quot;&gt;dla-needed.txt file&lt;/a&gt; has 33 packages needing an update.
&lt;/p&gt;

&lt;h3&gt;
        Thanks to our sponsors
&lt;/h3&gt;

&lt;p&gt;New sponsors are in bold (none this month).
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;Platinum sponsors:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.toshiba.co.jp/worldwide/index.html&quot;&gt;TOSHIBA&lt;/a&gt; (for 53 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt; (for 43 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cip-project.org&quot;&gt;Civil Infrastructure Platform (CIP)&lt;/a&gt; (for 21 months)&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Gold sponsors:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.blablacar.fr&quot;&gt;Blablacar&lt;/a&gt; (for 68 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.roche.com/about/business/diagnostics.htm&quot;&gt;Roche Diagnostics International AG&lt;/a&gt; (for 64 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.linode.com&quot;&gt;Linode&lt;/a&gt; (for 58 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.babiel.com&quot;&gt;Babiel GmbH&lt;/a&gt; (for 47 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.plathome.com&quot;&gt;Plat’Home&lt;/a&gt; (for 46 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ox.ac.uk&quot;&gt;University of Oxford&lt;/a&gt; (for 3 months)&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Silver sponsors:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.positive-internet.com&quot;&gt;The Positive Internet Company&lt;/a&gt; (for 69 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.domainnameshop.com&quot;&gt;Domeneshop AS&lt;/a&gt; (for 68 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.nantesmetropole.fr/&quot;&gt;Nantes Métropole&lt;/a&gt; (for 62 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.dalenys.com&quot;&gt;Dalenys&lt;/a&gt; (for 58 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.univention.de&quot;&gt;Univention GmbH&lt;/a&gt; (for 54 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://portail.univ-st-etienne.fr/&quot;&gt;Université Jean Monnet de St Etienne&lt;/a&gt; (for 54 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ribboncommunications.com/&quot;&gt;Ribbon Communications, Inc.&lt;/a&gt; (for 48 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.exonet.nl&quot;&gt;Exonet B.V.&lt;/a&gt; (for 37 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.lrz.de&quot;&gt;Leibniz Rechenzentrum&lt;/a&gt; (for 31 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cineca.it&quot;&gt;CINECA&lt;/a&gt; (for 21 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.diplomatie.gouv.fr&quot;&gt;Ministère de l’Europe et des Affaires Étrangères&lt;/a&gt; (for 15 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cloudways.com&quot;&gt;Cloudways Ltd&lt;/a&gt; (for 4 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dinahosting.com&quot;&gt;Dinahosting SL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Bronze sponsors:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.seznam.cz&quot;&gt;Seznam.cz, a.s.&lt;/a&gt; (for 69 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.evolix.fr&quot;&gt;Evolix&lt;/a&gt; (for 68 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mytux.fr&quot;&gt;MyTux&lt;/a&gt; (for 68 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://linuxhotel.de&quot;&gt;Linuxhotel GmbH&lt;/a&gt; (for 66 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://intevation.de&quot;&gt;Intevation GmbH&lt;/a&gt; (for 65 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://daevel.fr&quot;&gt;Daevel SARL&lt;/a&gt; (for 64 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bitfolk.com&quot;&gt;Bitfolk LTD&lt;/a&gt; (for 63 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.megaspace.de&quot;&gt;Megaspace Internet Services GmbH&lt;/a&gt; (for 63 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.greenbone.net&quot;&gt;Greenbone Networks GmbH&lt;/a&gt; (for 62 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://numlog.fr&quot;&gt;NUMLOG&lt;/a&gt; (for 62 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wingo.ch/&quot;&gt;WinGo AG&lt;/a&gt; (for 61 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lheea.ec-nantes.fr&quot;&gt;Ecole Centrale de Nantes – LHEEA&lt;/a&gt; (for 57 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sig-io.nl&quot;&gt;Sig-I/O&lt;/a&gt; (for 55 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.entrouvert.com/&quot;&gt;Entr’ouvert&lt;/a&gt; (for 53 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://adfinis-sygroup.ch&quot;&gt;Adfinis SyGroup AG&lt;/a&gt; (for 50 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.tesorion.nl/&quot;&gt;Tesorion&lt;/a&gt; (for 45 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.allogarage.fr&quot;&gt;GNI MEDIA&lt;/a&gt; (for 44 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.legi.grenoble-inp.fr&quot;&gt;Laboratoire LEGI – UMR 5519 / CNRS&lt;/a&gt; (for 44 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bearstech.com&quot;&gt;Bearstech&lt;/a&gt; (for 36 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lihas.de&quot;&gt;LiHAS&lt;/a&gt; (for 36 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.people-doc.com&quot;&gt;People Doc&lt;/a&gt; (for 32 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.catalyst.net.nz&quot;&gt;Catalyst IT Ltd&lt;/a&gt; (for 30 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.supagro.fr&quot;&gt;Supagro&lt;/a&gt; (for 26 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://demarcq.net&quot;&gt;Demarcq SAS&lt;/a&gt; (for 24 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://trapx.com/&quot;&gt;TrapX Security&lt;/a&gt; (for 21 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.univ-grenoble-alpes.fr&quot;&gt;Université Grenoble Alpes&lt;/a&gt; (for 10 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.touchweb.fr&quot;&gt;TouchWeb SAS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;font-size: smaller;&quot;&gt;&lt;a href=&quot;https://raphaelhertzog.com/2020/02/21/freexians-report-about-debian-long-term-support-january-2020/#comments&quot;&gt;No comment&lt;/a&gt; | Liked this article? &lt;a href=&quot;http://raphaelhertzog.com/support-my-work/&quot;&gt;Click here&lt;/a&gt;. | My blog is &lt;a href=&quot;http://flattr.com/thing/26545/apt-get-install-debian-wizard&quot;&gt;Flattr-enabled&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Fri, 21 Feb 2020 17:00:08 +0000</pubDate>
</item>
<item>
	<title>Ubuntu Blog: Parallel installs for classic snaps</title>
	<guid isPermaLink="true">https://ubuntu.com/blog/parallel-installs-for-classic-snaps</guid>
	<link>https://ubuntu.com/blog/parallel-installs-for-classic-snaps</link>
	<description>&lt;p&gt;For a while now, snapd has supported the ability to install and use multiple instances of the same &lt;a href=&quot;https://snapcraft.io/blog/parallel-installs-test-and-run-multiple-instances-of-snaps&quot;&gt;snap in parallel&lt;/a&gt;. This allows users to test features in new software releases side by side with the stable, production versions. Similarly, users can distribute their work or perhaps use custom settings across several distinct, isolated profiles in their applications. The only limitation was that snaps had to be strictly confined. Recently, the parallel install capability has been extended to snaps using &lt;a href=&quot;https://snapcraft.io/docs/snap-confinement&quot;&gt;classic confinement&lt;/a&gt;, too.&lt;/p&gt;



&lt;h1&gt;Enable experimental feature &amp;amp; test functionality&lt;/h1&gt;



&lt;p&gt;This is still an experimental feature for early adopters and tinkerers – it will be enabled by default in a future stable release of snapd. At the moment, you need to toggle the following option on the command line:&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;sudo snap set system experimental.parallel-instances=true&lt;/pre&gt;



&lt;p&gt;Once it’s enabled, you can install snaps in parallel, using a unique identifier to distinguish between different instances (or versions). You can also use aliases to streamline your work. For instance:&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;sudo snap install --classic --unaliased go_12 --channel=1.12/stable&lt;br /&gt;sudo snap install --classic --unaliased go_13 --channel=1.13/stable&lt;br /&gt;sudo snap alias go_12 go-1.12&lt;br /&gt;sudo snap alias go_13 go-1.13&lt;/pre&gt;



&lt;p&gt;An important distinction is that previously, snaps used the same mount namespace as the host. Now, this is separate, with application code mounted on /snap/$SNAP_INSTANCE_NAME/, while the data is stored in /var/snap/$SNAP_INSTANCE_NAME/. You may still need to adjust some of your snaps, especially if they employ the client-server model, to make sure that they can function well if installed (and running) in parallel.&lt;/p&gt;



&lt;p&gt;You can test this feature with one of the classic snaps available in the Snap Store, like Android Studio, Sublime Text, Powershell, Blender, Microk8s, and others. Or you can even try with snapcraft!&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;snap list | grep snapcraft&lt;br /&gt;snapcraft_edge           3.9.2+git213.g1fdd243c      4119   edge       canonical*          classic&lt;br /&gt;snapcraft_stable         3.9.8                       3970   stable     canonical*          classic&lt;/pre&gt;



&lt;p&gt;If you are a snap developer, this is an excellent way to test new features without compromising on your production setup. You can have the stable version of snapcraft installed for everyday builds, and then use the edge build to try out new stuff. You can also always switch between channels, all of which provides you with the necessary flexibility for development work.&lt;/p&gt;



&lt;h1&gt;Summary&lt;/h1&gt;



&lt;p&gt;The parallel install for classic snaps should further expand the freedom in how people they manage their software. Developers can promote new versions and early builds with greater confidence, while users have the ability to try the upcoming features without touching their stable setup. Classic snaps present their own challenges, as they have system-level access, which makes the parallel install option even more enticing and practical.&lt;/p&gt;



&lt;p&gt;We welcome your thoughts and ideas. For any feedback or suggestions, please join our &lt;a href=&quot;https://forum.snapcraft.io/&quot;&gt;forum&lt;/a&gt; for a discussion.&lt;/p&gt;



&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@jamie452?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Jamie Street&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Thu, 20 Feb 2020 13:22:30 +0000</pubDate>
</item>
<item>
	<title>Sean Davis: SGT Puzzles Collection 0.2.5 Released</title>
	<guid isPermaLink="false">https://bluesabre.org/tag/xubuntu/rss/5e4dfc7624b04205cbfefa16</guid>
	<link>https://bluesabre.org/2020/02/20/sgt-puzzles-collection-0-2-5-released/</link>
	<description>&lt;h3 id=&quot;what-is-this&quot;&gt;What Is This?&lt;/h3&gt;&lt;img alt=&quot;SGT Puzzles Collection 0.2.5 Released&quot; src=&quot;https://bluesabre.org/content/images/2020/02/sgt-launcher-featured.png&quot; /&gt;&lt;p&gt;&lt;em&gt;SGT Puzzles Collection&lt;/em&gt;, or simply &lt;em&gt;sgt-launcher&lt;/em&gt;, is a game launcher and wrapper for &lt;a href=&quot;http://www.chiark.greenend.org.uk/~sgtatham/puzzles/&quot;&gt;&lt;em&gt;&lt;em&gt;&lt;em&gt;&lt;em&gt;Simon Tatham’s Portable Puzzle Collection&lt;/em&gt;&lt;/em&gt;&lt;/em&gt;&lt;/em&gt;&lt;/a&gt;, a popular collection of logic games by the &lt;a href=&quot;http://www.chiark.greenend.org.uk/~sgtatham/&quot;&gt;developer&lt;/a&gt; of &lt;em&gt;&lt;em&gt;&lt;em&gt;&lt;em&gt;PuTTY&lt;/em&gt;&lt;/em&gt;&lt;/em&gt;&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;Joining the Xubuntu package set way back in Xubuntu 17.10 &quot;Artful Aardvark&quot;, SGT Puzzles Collection has quietly provided Xubuntu users with a variety of distracting games for several releases. If you want to learn more about the project, check out my &lt;a href=&quot;https://bluesabre.org/2016/11/06/sgt-puzzles-collection-introduction/&quot;&gt;introductory blog post&lt;/a&gt;.&lt;/p&gt;&lt;h3 id=&quot;what-s-new&quot;&gt;What's New?&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Fixed issues with looping when launching a game (LP: &lt;a href=&quot;https://launchpad.net/bugs/1697107&quot;&gt;#1697107&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;Added &quot;Report a Bug...&quot; option to the menu which takes the user straight to the bug tracker for SGT Puzzles Collection&lt;/li&gt;&lt;li&gt;Added support for closing the application with Ctrl-C in the terminal&lt;/li&gt;&lt;li&gt;Fixed AppData validation and added some additional details&lt;/li&gt;&lt;li&gt;Switched the AppData and launcher to RDN-style (org.bluesabre.SgtLauncher) to follow FreeDesktop standards. Installations from source may now have duplicate launchers, just delete sgt-launcher.desktop&lt;/li&gt;&lt;li&gt;Updated Danish translation&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;downloads&quot;&gt;Downloads&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://launchpad.net/sgt-launcher/0.2/0.2.5/+download/sgt-launcher-0.2.5.tar.gz&quot;&gt;Source tarball&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ md5sum sgt-launcher-0.2.5.tar.gz
28e77a28faeb9ed6105cab09c90f1ea0

$ sha1sum sgt-launcher-0.2.5.tar.gz
59595b926950e3b76230b35ee540e883407e8132

$ sha256sum sgt-launcher-0.2.5.tar.gz
2aa00b35b3cb19c041246bfa9e892862f3bcb133843a1f2f3767e9f5be278fc7&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SGT Puzzles Collection 0.2.5 will be included in Xubuntu 20.04 &quot;Focal Fossa&quot;, available in April. Users testing the daily images should be able to test it &lt;a href=&quot;https://launchpad.net/ubuntu/+source/sgt-launcher/0.2.5-0ubuntu1&quot;&gt;any moment now&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Thu, 20 Feb 2020 04:38:32 +0000</pubDate>
        <enclosure url="https://launchpad.net/sgt-launcher/0.2/0.2.5/+download/sgt-launcher-0.2.5.tar.gz" length="" type="text/html"/>
</item>
<item>
	<title>Ubuntu Blog: MAAS doc example: MGH</title>
	<guid isPermaLink="true">https://ubuntu.com/blog/maas-doc-example-mgh</guid>
	<link>https://ubuntu.com/blog/maas-doc-example-mgh</link>
	<description>&lt;p&gt;Rather than assume that every reader of our &lt;a href=&quot;https://maas.io/docs&quot;&gt;MAAS documentation&lt;/a&gt; is a network expert looking for a quick fix, we’re planning to expand the available material somewhat. In the past, we’ve used random analogies, screenshots, and examples to keep the text interesting — and it’s worked well enough.  Going forward, though, it feels more practical and useful to create a single example thread that carries throughout blog posts and the documentation. &lt;/p&gt;



&lt;p&gt;This doesn’t mean that we’re going to adopt fable-like narratives or “day in the life” scenarios.  Far from it.  We do, though, want to backstop explanations and feature discussions with a single, coherent model.  Our goal is to help the various parts of the doc set fit together a little more neatly.  &lt;/p&gt;



&lt;p&gt;To that end, we’re introducing Metaphorical General Hospital (MGH), an example data centre that provides computing support for a 100-bed, suburban hospital that serves a community of around 5,000 residents.  The example doesn’t have to be complete or perfectly realistic.  It might not represent any &lt;em&gt;actual&lt;/em&gt; hospital.  It just needs to be sufficiently coherent to (1) tie the doc together, and (2) provide a better reference point for describing MAAS features.  &lt;/p&gt;



&lt;p&gt;That said, here is a general outline of the MGH model. This model describes the types of computing and network constructs needed to help illustrate the features of MAAS.  Don’t worry too much about what each bullet means; you can assign whatever meaning makes sense to you, based on the labels provided, and the model should still work just fine.&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;Patient management&lt;ul&gt;&lt;li&gt;Caregiver services&lt;br /&gt;– Provider services&lt;br /&gt;— Charts&lt;br /&gt;— Provider orders&lt;br /&gt;— Provider documentation&lt;br /&gt;– Nursing services&lt;br /&gt;— Nursing orders&lt;br /&gt;— Continuing education&lt;/li&gt;&lt;li&gt;Medication management&lt;br /&gt;– Nursing meds&lt;br /&gt;— Medication administration&lt;br /&gt;— Narcotics control&lt;br /&gt;– Prescriber controls&lt;br /&gt;— Pharmacy&lt;br /&gt;— Narcotics control&lt;br /&gt;— Medication interactions&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Accounting&lt;ul&gt;&lt;li&gt;Accounts payable&lt;br /&gt;– Staff compensation&lt;br /&gt;— Timeclock&lt;br /&gt;— Payroll&lt;br /&gt;– Supplies &amp;amp; services&lt;br /&gt;— Medical and surgical supplies&lt;br /&gt;— Office and general supplies&lt;/li&gt;&lt;li&gt;Accounts receivable&lt;br /&gt;– Business office&lt;br /&gt;— Patient intake&lt;br /&gt;— Insurance reconciliation&lt;br /&gt;– Collections&lt;br /&gt;— Patient collections&lt;br /&gt;— Insurance collections&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Facilities&lt;ul&gt;&lt;li&gt;Patient support&lt;br /&gt;– Housekeeping&lt;br /&gt;– Food service&lt;/li&gt;&lt;li&gt;Staff support&lt;br /&gt;– Instrumentation&lt;br /&gt;– Information technology&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;This isn’t intended to show all functions, or, really, to convey the actual functioning of a real hospital. Those functions are certainly much more complex, with a much deeper structure and a lot more controls. But it does give us a plausible model that can be used to describe — and illustrate — the features of MAAS.&lt;/p&gt;



&lt;p&gt;We’ll point back to this post in blogs to come.&lt;/p&gt;</description>
	<pubDate>Wed, 19 Feb 2020 20:20:11 +0000</pubDate>
</item>
<item>
	<title>Stuart Langridge: Android home screen widgets in HTML and JS</title>
	<guid isPermaLink="false">tag:www.kryogenix.org,2020-02-19:/days/2020/02/19/android-home-screen-widgets-in-html-and-js/</guid>
	<link>https://www.kryogenix.org/days/2020/02/19/android-home-screen-widgets-in-html-and-js/</link>
	<description>&lt;p&gt;I like having the news headlines on my phone’s home screen. (Well, on the screen to the right.) It helps me keep up with what’s going on in the world. But it’s hard to find a simple headline home screen widget which isn’t full of ads or extra frippery or images or tracking; I just want headlines, plain text, not unpleasantly formatted, and high-density. I don’t want to see three headlines; I’d rather see ten. I tried a whole bunch of news headline home screen widgets and they’re all terrible; not information-dense enough, or they are but they’re ugly, or they insist on putting pictures in, or they display a ton of other information I don’t want.&lt;/p&gt;
&lt;p&gt;It occurred to me that I don’t really need a &lt;em&gt;news&lt;/em&gt; reader per se; just an &lt;span class=&quot;caps&quot;&gt;RSS&lt;/span&gt; reader, which I then point at Google’s “all news” feed (which they move around from time to time but at time of writing in February 2020 is at &lt;a href=&quot;https://news.google.com/news/rss&quot;&gt;https://news.google.com/news/rss&lt;/a&gt;). However, &lt;span class=&quot;caps&quot;&gt;RSS&lt;/span&gt; reader widgets are &lt;em&gt;also&lt;/em&gt; all terrible.&lt;/p&gt;
&lt;p&gt;Finally, I thought: fine, I’ll just do it myself. But I really don’t want to write Java and set up Android Studio. So I installed &lt;a href=&quot;https://play.google.com/store/apps/details?id=de.dennis_kempf.webwidget&quot;&gt;Web Widget&lt;/a&gt; which just renders a web page to a home screen widget, and then wrote a simple web page and stuck it at the root of my phone’s storage. I can then point Web Widget at &lt;code&gt;file:///sdcard/noos.html&lt;/code&gt; and it all works, and I can customise it how I like. Every one’s a winner. Nice simple way to create widgets that do what I want. They can’t be animated or anything, but if you want something which displays some external data and is happy to be polled every now and again to update, it’s perfectly fine. Sadly, there’s no continuity of storage (&lt;code&gt;indexedDB&lt;/code&gt; exists but doesn’t persist and &lt;code&gt;localStorage&lt;/code&gt; doesn’t exist at all), but it’s good for what I needed.&lt;/p&gt;</description>
	<pubDate>Wed, 19 Feb 2020 19:42:00 +0000</pubDate>
</item>
<item>
	<title>Full Circle Magazine: Full Circle Weekly News #164</title>
	<guid isPermaLink="false">https://fullcirclemagazine.org/?post_type=podcast&amp;p=27851</guid>
	<link>https://fullcirclemagazine.org/podcast/full-circle-weekly-news-164/</link>
	<description>&lt;hr /&gt;
&lt;div&gt;&lt;b&gt;Zorin Announces Zorin Grid&lt;/b&gt;&lt;br /&gt;
&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://zoringroup.com/blog/2020/01/16/introducing-zorin-grid-manage-all-of-your-organizations-computers-as-easily-as-one/&amp;amp;source=gmail&amp;amp;ust=1582162584013000&amp;amp;usg=AFQjCNF8PPq5xq8PBb1KahuO3F1WCE72CQ&quot; href=&quot;https://zoringroup.com/blog/2020/01/16/introducing-zorin-grid-manage-all-of-your-organizations-computers-as-easily-as-one/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://zoringroup.com/blog/2020/01/16/introducing-zorin-grid-manage-all-of-your-organizations-computers-as-easily-as-one/&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;Xfce 4.16 Getting a Major UI Change&lt;/b&gt;&lt;br /&gt;
&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://simon.shimmerproject.org/2020/01/14/xfce-4-14-maintenance-and-4-15-updates/&amp;amp;source=gmail&amp;amp;ust=1582162584013000&amp;amp;usg=AFQjCNEossUIw55IW6_AmfdSZPEVYASNjA&quot; href=&quot;https://simon.shimmerproject.org/2020/01/14/xfce-4-14-maintenance-and-4-15-updates/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://simon.shimmerproject.org/2020/01/14/xfce-4-14-maintenance-and-4-15-updates/&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;Mozilla Lays Off About 70 Employees&lt;/b&gt;&lt;br /&gt;
&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://techcrunch.com/2020/01/15/mozilla-lays-off-70-as-it-waits-for-subscription-products-to-generate-revenue/&amp;amp;source=gmail&amp;amp;ust=1582162584013000&amp;amp;usg=AFQjCNFrhwFU5zYhRExP90M3HrGEA_KDvQ&quot; href=&quot;https://techcrunch.com/2020/01/15/mozilla-lays-off-70-as-it-waits-for-subscription-products-to-generate-revenue/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://techcrunch.com/2020/01/15/mozilla-lays-off-70-as-it-waits-for-subscription-products-to-generate-revenue/&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;Ubuntu Theme Development for 20.04&lt;/b&gt;&lt;br /&gt;
&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://ubuntu.com/blog/new-ubuntu-theme-in-development-for-20-04&amp;amp;source=gmail&amp;amp;ust=1582162584013000&amp;amp;usg=AFQjCNFMp2QhBBcc74ZQKynefU17dsKmYw&quot; href=&quot;https://ubuntu.com/blog/new-ubuntu-theme-in-development-for-20-04&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://ubuntu.com/blog/new-ubuntu-theme-in-development-for-20-04&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;Fedora CoreOS Out of Preview&lt;/b&gt;&lt;br /&gt;
&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://fedoramagazine.org/fedora-coreos-out-of-preview/&amp;amp;source=gmail&amp;amp;ust=1582162584013000&amp;amp;usg=AFQjCNFffJDwjzbrU1anWXTVl87Nb8RRzg&quot; href=&quot;https://fedoramagazine.org/fedora-coreos-out-of-preview/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://fedoramagazine.org/fedora-coreos-out-of-preview/&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;PinePhone Braveheart Edition Ships&lt;/b&gt;&lt;br /&gt;
&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://www.pine64.org/2020/01/15/pinephones-start-shipping-all-you-want-to-know/&amp;amp;source=gmail&amp;amp;ust=1582162584013000&amp;amp;usg=AFQjCNEWVXWinBGkNKx-Jo2ygCuzsu9mJw&quot; href=&quot;https://www.pine64.org/2020/01/15/pinephones-start-shipping-all-you-want-to-know/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.pine64.org/2020/01/15/pinephones-start-shipping-all-you-want-to-know/&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;Linus Torvalds Releases Linux Kernel 5.5 rc7&lt;/b&gt;&lt;br /&gt;
&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://lkml.org/lkml/2020/1/19/237&amp;amp;source=gmail&amp;amp;ust=1582162584013000&amp;amp;usg=AFQjCNFSV6spFpjJDQW3ccvvC_dUsIPbPA&quot; href=&quot;https://lkml.org/lkml/2020/1/19/237&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://lkml.org/lkml/2020/1/19/237&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;GNU Guile 3.0.0 Released&lt;/b&gt;&lt;br /&gt;
&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://www.gnu.org/software/guile/news/gnu-guile-300-released.html&amp;amp;source=gmail&amp;amp;ust=1582162584013000&amp;amp;usg=AFQjCNHwgv3NB0AOfi7vT9ZO-AWianTktw&quot; href=&quot;https://www.gnu.org/software/guile/news/gnu-guile-300-released.html&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.gnu.org/software/guile/news/gnu-guile-300-released.html&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;Linux Lite 4.8 Released&lt;/b&gt;&lt;br /&gt;
&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://www.linuxliteos.com/forums/release-announcements/linux-lite-4-8-final-released/&amp;amp;source=gmail&amp;amp;ust=1582162584013000&amp;amp;usg=AFQjCNFbJpe1USwKNjMJuVuIXrGK6DVsAA&quot; href=&quot;https://www.linuxliteos.com/forums/release-announcements/linux-lite-4-8-final-released/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.linuxliteos.com/forums/release-announcements/linux-lite-4-8-final-released/&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;CentOS 8.1 Released&lt;/b&gt;&lt;br /&gt;
&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://wiki.centos.org/Manuals/ReleaseNotes/CentOS8.1911&amp;amp;source=gmail&amp;amp;ust=1582162584013000&amp;amp;usg=AFQjCNHfcfbKepxaK269z3K0qkEudo_Mew&quot; href=&quot;https://wiki.centos.org/Manuals/ReleaseNotes/CentOS8.1911&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://wiki.centos.org/Manuals/ReleaseNotes/CentOS8.1911&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;Mir 1.7 Released&lt;/b&gt;&lt;br /&gt;
&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://discourse.ubuntu.com/t/mir-1-7-0-release/14048&amp;amp;source=gmail&amp;amp;ust=1582162584014000&amp;amp;usg=AFQjCNG9XBfI8rcK0TMHjne40xC3SW84Rw&quot; href=&quot;https://discourse.ubuntu.com/t/mir-1-7-0-release/14048&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://discourse.ubuntu.com/t/mir-1-7-0-release/14048&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div dir=&quot;ltr&quot;&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div&gt;&lt;b&gt;Credits:&lt;/b&gt;&lt;br /&gt;
Ubuntu “Complete” sound: Canonical&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Theme Music:&lt;/b&gt; From The Dust – Stardust&lt;br /&gt;
&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://soundcloud.com/ftdmusic&amp;amp;source=gmail&amp;amp;ust=1582162584014000&amp;amp;usg=AFQjCNE_QJNoNVqOi5E5P54KtTGXhdw8LA&quot; href=&quot;https://soundcloud.com/ftdmusic&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://soundcloud.com/ftdmusic&lt;/a&gt;&lt;br /&gt;
&lt;a data-saferedirecturl=&quot;https://www.google.com/url?q=https://creativecommons.org/licenses/by/4.0/&amp;amp;source=gmail&amp;amp;ust=1582162584014000&amp;amp;usg=AFQjCNGlDxKZlvaHmkyMwvISNriXzzu00w&quot; href=&quot;https://creativecommons.org/licenses/by/4.0/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://creativecommons.org/licenses/by/4.0/&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
	<pubDate>Wed, 19 Feb 2020 18:53:54 +0000</pubDate>
        <enclosure url="http://dl.fullcirclemagazine.org/podcast/Full%20Circle%20Weekly%20News%20164.mp3" length="0" type=""/>
</item>
<item>
	<title>Kubuntu General News: Plasma 5.18.1 for Kubuntu 19.10 available in Backports PPA</title>
	<guid isPermaLink="false">https://kubuntu.org/?p=4352</guid>
	<link>https://kubuntu.org/news/plasma-5-18-1-for-kubuntu-19-10-available-in-backports-ppa/</link>
	<description>&lt;p&gt;We are pleased to announce that Plasma 5.18.1, is now available in our &lt;a href=&quot;https://launchpad.net/~kubuntu-ppa/+archive/ubuntu/backports?field.series_filter=eoan&quot;&gt;backports PPA&lt;/a&gt; for Kubuntu 19.10. This is the 1st bugfix release of the 5.18 LTS Plasma series.&lt;/p&gt;



&lt;p&gt;The release announcement detailing the new features and improvements in Plasma 5.18 LTS can be &lt;a href=&quot;https://kde.org/announcements/plasma-5.18.1&quot;&gt;found here&lt;/a&gt;.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-4354&quot; src=&quot;https://kubuntu.org/wp-content/uploads/2020/02/d53d/518p1_backport.png&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;&lt;strong&gt;To upgrade:&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;Add the following repository to your software sources list:&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;ppa:kubuntu-ppa/backports&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;or if it is already added, the updates should become available via your preferred update method.&lt;/p&gt;



&lt;p&gt;The PPA can be added manually in the Konsole terminal with the command:&lt;/p&gt;



&lt;p&gt;&lt;em&gt;sudo add-apt-repository ppa:kubuntu-ppa/backports&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;and packages then updated with&lt;/p&gt;



&lt;p&gt;&lt;em&gt;sudo apt update&lt;/em&gt;&lt;br /&gt;&lt;em&gt;sudo apt full-upgrade&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;&lt;em&gt;Please note that more bugfix releases are scheduled by KDE for Plasma 5.18, so while we feel these backports will be beneficial to enthusiastic adopters, users wanting to use a Plasma release with more rounds of stabilisation/bugfixes ‘baked in’ may find it advisable to stay with Plasma 5.16 as included in the original 19.10 (Eoan) release.&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;The Kubuntu Backports PPA for 19.10 also currently contains newer versions of KDE Frameworks, Applications, and other KDE software.&lt;/p&gt;



&lt;p&gt;Issues with Plasma itself can be reported on the KDE bugtracker [1]. In the case of packaging or other issues, please provide feedback on our mailing list [2], IRC [3], and/or file a bug against our PPA packages [4].&lt;/p&gt;



&lt;p&gt;&lt;em&gt;1. KDE bugtracker: https://bugs.kde.org&lt;/em&gt;&lt;br /&gt;&lt;em&gt;2. Kubuntu-devel mailing list: https://lists.ubuntu.com/mailman/listinfo/kubuntu-devel&lt;br /&gt;3. Kubuntu IRC channels: #kubuntu &amp;amp; #kubuntu-devel on irc.freenode.net&lt;br /&gt;4. Kubuntu ppa bugs: https://bugs.launchpad.net/kubuntu-ppa&lt;/em&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 19 Feb 2020 11:14:49 +0000</pubDate>
</item>
<item>
	<title>Kees Cook: security things in Linux v5.4</title>
	<guid isPermaLink="false">https://outflux.net/blog/?p=1390</guid>
	<link>https://outflux.net/blog/archives/2020/02/18/security-things-in-linux-v5-4/</link>
	<description>&lt;p&gt;Previously: &lt;a href=&quot;https://outflux.net/blog/archives/2019/11/14/security-things-in-linux-v5-3/&quot;&gt;v5.3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Linux kernel &lt;a href=&quot;https://lore.kernel.org/lkml/CAHk-=wjmzaD=BZ1hjUYu+RTnSGDLfCRwCdg99GeQpCjEwo9uzw@mail.gmail.com/&quot;&gt;v5.4 was released&lt;/a&gt; in late November. The holidays got the best of me, but better late than never! ;) Here are some security-related things I found interesting:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;waitid()&lt;/code&gt; gains &lt;code&gt;P_PIDFD&lt;/code&gt;&lt;/strong&gt;&lt;br /&gt;
Christian Brauner has continued his &lt;a href=&quot;https://outflux.net/blog/archives/2019/07/17/security-things-in-linux-v5-2/&quot;&gt;&lt;code&gt;pidfd&lt;/code&gt; work&lt;/a&gt; by &lt;a href=&quot;https://git.kernel.org/linus/3695eae5fee0605f316fbaad0b9e3de791d7dfaf&quot;&gt;adding a critical mode to &lt;code&gt;waitid()&lt;/code&gt;: &lt;code&gt;P_PIDFD&lt;/code&gt;&lt;/a&gt;. This makes it possible to reap child processes via a &lt;code&gt;pidfd&lt;/code&gt;, and completes the interfaces needed for the bulk of programs performing process lifecycle management. (i.e. a &lt;code&gt;pidfd&lt;/code&gt; can come from &lt;code&gt;/proc&lt;/code&gt; or &lt;code&gt;clone()&lt;/code&gt;, and can be waited on with &lt;code&gt;waitid()&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;kernel lockdown&lt;/strong&gt;&lt;br /&gt;
After something on the order of &lt;a href=&quot;https://lwn.net/Articles/514985/&quot;&gt;8 years&lt;/a&gt;, Linux can now &lt;a href=&quot;https://git.kernel.org/linus/000d388ed3bbed745f366ce71b2bb7c2ee70f449&quot;&gt;draw a bright line&lt;/a&gt; between “ring 0” (kernel memory) and “uid 0” (highest privilege level in userspace). The “kernel lockdown” feature, which has been an out-of-tree patch series in most Linux distros for almost as many years, attempts to enumerate all the &lt;em&gt;intentional&lt;/em&gt; ways (i.e. interfaces not flaws) userspace might be able to read or modify kernel memory (or execute in kernel space), and disable them. While Matthew Garrett made the internal details fine-grained controllable, the basic lockdown LSM can be set to either disabled, “integrity” (kernel memory can be read but not written), or “confidentiality” (no kernel memory reads or writes). Beyond closing the many holes between userspace and the kernel, if new interfaces are added to the kernel that might violate kernel integrity or confidentiality, now there is a place to put the access control to make everyone happy and there doesn’t need to be a rehashing of the age old fight between “but root has full kernel access” vs “not in some system configurations”.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;tagged memory relaxed syscall ABI&lt;/strong&gt;&lt;br /&gt;
Andrey Konovalov (with Catalin Marinas and others) introduced a way to enable a &lt;a href=&quot;https://git.kernel.org/linus/63f0c60379650d82250f22e4cf4137ef3dc4f43d&quot;&gt;“relaxed” tagged memory syscall ABI&lt;/a&gt; in the kernel. This means programs running on hardware that supports &lt;a href=&quot;https://www.linuxplumbersconf.org/event/4/contributions/571/attachments/399/642/MTE_LPC.pdf&quot;&gt;memory tags&lt;/a&gt; (or “versioning”, or “coloring”) in the upper (non-VMA) bits of a pointer address can use these addresses with the kernel without things going crazy. This is effectively teaching the kernel to ignore these high bits in places where they make no sense (i.e. mathematical comparisons) and keeping them in place where they have meaning (i.e. pointer dereferences).&lt;/p&gt;
&lt;p&gt;As an example, if a userspace memory allocator had returned the address 0x0&lt;strong&gt;f&lt;/strong&gt;00000010000000 (VMA address 0x10000000, with, say, a “high bits” tag of 0x0f), and a program used this range during a syscall that ultimately called &lt;code&gt;copy_from_user()&lt;/code&gt; on it, the initial range check would fail if the tag bits were left in place: “that’s not a userspace address; it is greater than &lt;code&gt;TASK_SIZE&lt;/code&gt; (0x0000800000000000)!”, so they are stripped for that check. During the actual copy into kernel memory, the tag is left in place so that when the hardware dereferences the pointer, the pointer tag can be checked against the expected tag assigned to referenced memory region. If there is a mismatch, the hardware will trigger the memory tagging protection.&lt;/p&gt;
&lt;p&gt;Right now programs running on Sparc M7 CPUs with ADI (Application Data Integrity) can use this for hardware tagged memory, ARMv8 CPUs can use TBI (Top Byte Ignore) for software memory tagging, and eventually there will be ARMv8.5-A CPUs with MTE (Memory Tagging Extension).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;boot entropy improvement&lt;/strong&gt;&lt;br /&gt;
Thomas Gleixner got fed up with poor boot-time entropy and &lt;a href=&quot;https://lore.kernel.org/lkml/alpine.DEB.2.21.1909290010500.2636@nanos.tec.linutronix.de/&quot;&gt;trolled&lt;/a&gt; Linus into coming up with reasonable way to &lt;a href=&quot;https://git.kernel.org/linus/50ee7529ec4500c88f8664560770a7a1b65db72b&quot;&gt;add entropy on modern CPUs&lt;/a&gt;, taking advantage of timing noise, cycle counter jitter, and perhaps even the variability of speculative execution. This means that there shouldn’t be mysterious multi-second (or multi-minute!) &lt;a href=&quot;https://lwn.net/Articles/800509/&quot;&gt;hangs at boot&lt;/a&gt; when some systems don’t have enough entropy to service &lt;code&gt;getrandom()&lt;/code&gt; syscalls from &lt;code&gt;systemd&lt;/code&gt; or the like.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;userspace writes to swap files blocked&lt;/strong&gt;&lt;br /&gt;
From the department of “how did this go unnoticed for so long?”, Darrick J. Wong fixed the kernel to not allow writes from userspace to active swap files. Without this, it was possible for a user (usually root) with write access to a swap file to modify its contents, thereby changing memory contents of a process once it got paged back in. While root normally could just use &lt;code&gt;CAP_PTRACE&lt;/code&gt; to modify a running process directly, this was a loophole that allowed lesser-privileged users (e.g. anyone in the “disk” group) without the needed capabilities to still bypass ptrace restrictions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;limit &lt;code&gt;strscpy()&lt;/code&gt; sizes to &lt;code&gt;INT_MAX&lt;/code&gt;&lt;/strong&gt;&lt;br /&gt;
Generally speaking, if a size variable ends up larger than &lt;code&gt;INT_MAX&lt;/code&gt;, some calculation somewhere has overflowed. And even if not, it’s probably going to hit code somewhere nearby that won’t deal well with the result. As already done in the VFS core, and &lt;code&gt;vsprintf()&lt;/code&gt;, I added a check to &lt;code&gt;strscpy()&lt;/code&gt; to &lt;a href=&quot;https://git.kernel.org/linus/9a156466147b61504f4cbe97ea503e67c21e117a&quot;&gt;reject sizes larger than &lt;code&gt;INT_MAX&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ld.gold&lt;/code&gt; support removed&lt;/strong&gt;&lt;br /&gt;
Thomas Gleixner &lt;a href=&quot;https://git.kernel.org/linus/75959d44f9dc8e44410667009724e4e238515502&quot;&gt;removed support for the gold linker&lt;/a&gt;. While this isn’t providing a direct security benefit, &lt;code&gt;ld.gold&lt;/code&gt; has been a constant source of weird bugs. Specifically where I’ve noticed, it had been pain while developing KASLR, and has more recently been causing problems while stabilizing building the kernel with Clang. Having this linker support removed makes things much easier going forward. There are enough weird bugs to fix in Clang and &lt;code&gt;ld.lld&lt;/code&gt;. ;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Intel TSX disabled&lt;/strong&gt;&lt;br /&gt;
Given the use of Intel’s Transactional Synchronization Extensions (TSX) CPU feature by attackers to exploit speculation flaws, Pawan Gupta &lt;a href=&quot;https://git.kernel.org/linus/95c5824f75f3ba4c9e8e5a4b1a623c95390ac266&quot;&gt;disabled the feature by default&lt;/a&gt; on CPUs that support disabling TSX.&lt;/p&gt;
&lt;p&gt;That’s all I have for this version. Let me know if I missed anything. :) Next up is Linux v5.5!&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;© 2020, &lt;a href=&quot;https://outflux.net/blog/&quot;&gt;Kees Cook&lt;/a&gt;. This work is licensed under a &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/3.0/us/&quot; rel=&quot;license&quot;&gt;Creative Commons Attribution-ShareAlike 3.0 License&lt;/a&gt;.&lt;br /&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by-sa/3.0/us/&quot; rel=&quot;license&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; src=&quot;https://outflux.net/illustrations/cc-88x31.png&quot; style=&quot;border-width: 0;&quot; /&gt;&lt;/a&gt; &lt;/p&gt;</description>
	<pubDate>Wed, 19 Feb 2020 00:37:02 +0000</pubDate>
</item>
<item>
	<title>Stephen Michael Kellat: Trying A Minimum Working Example</title>
	<guid isPermaLink="true">http://coyote.works//posts/TexDown20200218/</guid>
	<link>http://coyote.works//posts/TexDown20200218/</link>
	<description>&lt;p&gt;When you make assertions in a channel like the &lt;a href=&quot;https://ubuntupodcast.org/&quot;&gt;Ubuntu Podcast&lt;/a&gt;’s Telegram &lt;a href=&quot;https://telegram.me/joinchat/AVKyxj5X3dPTT98ME3U06Q&quot;&gt;chatter
channel&lt;/a&gt; they sometimes have to be backed up. Recently I made
reference to how you could utilize Markdown within a LaTeX
document. I should take a moment to discuss a way to use LuaLaTeX
to make your Markdown documents look nice. We’re going to build a
“Minimum Working Example” to illustrate things.&lt;/p&gt;
&lt;p&gt;First, I will refer to a package on the Comprehensive TeX
Archive Network simply named &lt;a href=&quot;https://www.ctan.org/pkg/markdown&quot;&gt;markdown&lt;/a&gt;. That handles
processing Markdown input. In its documentation you find that you
can actually input a separate Markdown-formatted file into the
macros provided which will convert them into appropriate LaTeX code
and add that programmatically into your document. LaTeX is a
Turing-complete programming language after all.&lt;/p&gt;
&lt;p&gt;Using the basic default &lt;a href=&quot;https://ctan.org/pkg/article&quot;&gt;article class&lt;/a&gt; and bearing in
mind that I am based in the United States of America, we can have
something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\documentclass[12pt,letter]{article}
\usepackage{hyperref}
\usepackage{xurl}
\usepackage{markdown}
\usepackage{fontspec}
\setmainfont{Liberation Serif}

\begin{document}
\markdownInput{file.md}
\end{document}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Taking that example line by line we mostly have a preamble and a
very short document. First we declare the document’s class as
“article” and pass the global options of wanting 12 point type and
since I am in the USA I want to use Letter paper. Next we load the
hypertext support package &lt;a href=&quot;https://ctan.org/pkg/hyperref&quot;&gt;hyperref&lt;/a&gt;. We then load the
smaller support package &lt;a href=&quot;https://ctan.org/pkg/xurl&quot;&gt;xurl&lt;/a&gt; which allows for URLs to break
at any alphanumeric character in text. Our main player &lt;a href=&quot;https://www.ctan.org/pkg/markdown&quot;&gt;markdown&lt;/a&gt; then gets loaded.
Since we’re using LuaLaTex to compile the document we then load the
&lt;a href=&quot;https://ctan.org/pkg/fontspec&quot;&gt;fontspec&lt;/a&gt; package to
allow using any OpenType fonts. Liberation Serif is a font that
ships in the basic install for any Ubuntu flavour so we’ll choose
that. While we could have done something obscure like use &lt;a href=&quot;https://public-sans.digital.gov/&quot;&gt;Public Sans&lt;/a&gt; we’ll stick to
basics today.&lt;/p&gt;
&lt;p&gt;You can save that file locally as &lt;code&gt;mwe.tex&lt;/code&gt;. Now, we
need our Markdown file. We’ll keep it simple with this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;We have a **great** help system at [AskUbuntu](https://askubuntu.com/).  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Save that single line as &lt;code&gt;file.md&lt;/code&gt;. You’ll want to
have both files in the same directory. From there you can then
appropriately invoke LuaLaTeX with shell escape enabled and you’ll
get a file with the line typeset and the link showing as a
footnote. The link in the footnote will be clickable.&lt;/p&gt;
&lt;p&gt;This is a very minimal example. You can modify what is
essentially a driver file for LaTeX to process through your
Markdown creations to make them look nice. Pandoc does something
similar but this allows a bit closer ability to fiddle with
settings. This can be included in automation chains to make pretty
print output fairly readily with contemporary web stylings.&lt;/p&gt;
&lt;p&gt;For further introduction to LaTeX, the guide that really helped
me is “A short introduction to LaTeX2e” mainted by Tobias Oetiker
which you can find in your appropriate language &lt;a href=&quot;https://www.ctan.org/pkg/lshort&quot;&gt;on the Comprehensive TeX Archive
Network&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Good Luck &amp;amp; Good Hunting.&lt;/p&gt;</description>
	<pubDate>Tue, 18 Feb 2020 16:30:00 +0000</pubDate>
</item>
<item>
	<title>Stuart Langridge: On the Birmingham tech scene</title>
	<guid isPermaLink="false">tag:www.kryogenix.org,2020-02-17:/days/2020/02/17/on-the-birmingham-tech-scene/</guid>
	<link>https://www.kryogenix.org/days/2020/02/17/on-the-birmingham-tech-scene/</link>
	<description>&lt;p&gt;A certain amount of kerfuffle over the last couple of days in the half of the Birmingham tech scene that I tend to inhabit, over &lt;a href=&quot;https://www.business-live.co.uk/technology/birmingham-tech-week-founder-determine-17721491&quot;&gt;an article in Business Live&lt;/a&gt; about Birmingham Tech Week, a new organisation in the city which ran &lt;a href=&quot;https://birminghamtechweek.com/btw-events/&quot;&gt;a pretty successful set of events&lt;/a&gt; at the back end of last year.&lt;sup id=&quot;sf-on-the-birmingham-tech-scene-1-back&quot;&gt;&lt;a class=&quot;simple-footnote&quot; href=&quot;http://feeds.feedburner.com/kryogenix#sf-on-the-birmingham-tech-scene-1&quot; title=&quot;That link describes the 2019 Birmingham tech week at time of writing in February 2020. I do not know whether they’ll keep the 2019 schedule around (and I hope they do and don’t just overwrite it).&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;I think what got people’s backs up was the following from &lt;span class=&quot;caps&quot;&gt;BTW&lt;/span&gt; organiser &lt;a href=&quot;https://twitter.com/yiannismaos/&quot;&gt;Yiannis Maos&lt;/a&gt;, quoted in the article:&lt;/p&gt;
&lt;blockquote&gt;I saw an opportunity borne out of the frustration that Birmingham didn’t really have a tech scene, or at least not one that collaborated very much.&lt;/blockquote&gt;

&lt;p&gt;You see, it doesn’t appear that the Tech Week team did much in the way of actually trying to find out whether there &lt;em&gt;was&lt;/em&gt; a tech scene before declaring that there probably wasn’t one. If they had then they’d have probably discovered the &lt;a href=&quot;https://calendar.birmingham.io&quot;&gt;Birmingham.io calendar&lt;/a&gt; which contains all the stuff that’s going on, and can be &lt;a href=&quot;https://calendar.google.com/calendar/embed?showTitle=0&amp;amp;mode=AGENDA&amp;amp;ctz=Europe/London&amp;amp;src=movdt8poi0t3gfedfd80u1kcak@group.calendar.google.com&amp;amp;ctz=Europe/London&quot;&gt;subscribed to via Google&lt;/a&gt;. They’d probably have spoken to the existing language-specific meetups in the city before possibly doing their own instead of rather than in conjunction with. They’d have probably discovered the Brum tech Slack which has 800-odd people in it, or&lt;sup id=&quot;sf-on-the-birmingham-tech-scene-2-back&quot;&gt;&lt;a class=&quot;simple-footnote&quot; href=&quot;http://feeds.feedburner.com/kryogenix#sf-on-the-birmingham-tech-scene-2&quot; title=&quot;to quote Jim&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;a href=&quot;https://twitter.com/CovHack&quot;&gt;CovHack&lt;/a&gt; or &lt;a href=&quot;https://twitter.com/HackTheMidlands&quot;&gt;HackTheMidlands&lt;/a&gt; or &lt;a href=&quot;https://twitter.com/FusionMeetup&quot;&gt;FusionMeetup&lt;/a&gt; or &lt;a href=&quot;https://twitter.com/devopsdays&quot;&gt;devopsdays&lt;/a&gt; or &lt;a href=&quot;https://twitter.com/CodeYourFuture_&quot;&gt;CodeYourFuture_&lt;/a&gt; or &lt;a href=&quot;https://twitter.com/yougotthisconf&quot;&gt;yougotthisconf&lt;/a&gt; or &lt;a href=&quot;https://twitter.com/techwednesday&quot;&gt;Tech Wednesday&lt;/a&gt; or &lt;a href=&quot;https://twitter.com/djangogirlsbrum&quot;&gt;Django Girls&lt;/a&gt; or &lt;a href=&quot;https://twitter.com/owaspbirmingham&quot;&gt;&lt;span class=&quot;caps&quot;&gt;OWASP&lt;/span&gt;&lt;/a&gt; or &lt;a href=&quot;https://twitter.com/opencodeclub&quot;&gt;Open Code&lt;/a&gt; or any one of a ton of other things that are going on every week.&lt;/p&gt;
&lt;p&gt;Birmingham, as anyone who’s decided to be here knows, is a bit special. A person involved in tech in Birmingham is pretty likely to be able to get a similar job in London, and yet they haven’t done so. Why is that? Because Brum’s different. Things are less frantic, here, is why. We’re all in this together. London may have kings and queens: we’re the city of a &lt;em&gt;thousand&lt;/em&gt; different trades, all on the same level, all working hand in hand. All collaborating. It’s a grass roots thing, you see. Nobody’s in charge. The calendar mentioned above is &lt;a href=&quot;https://github.com/BirminghamIO/calendar.birmingham.io/&quot;&gt;open source&lt;/a&gt; exactly so that there’s not one person in charge of it and anyone else can pick it up and run with it if we disappear, so the work that’s already gone into it isn’t wasted.&lt;/p&gt;
&lt;p&gt;Yiannis goes on to say “I guess we weren’t really banging the drum about some of the successes Birmingham had seen in regards to tech.” And this is correct. Or, more accurately, I don’t personally know whether it’s correct, but I entirely believe it. I’m personally mostly interested in the tech scene in the city being good for people in the city, not about exhibiting it to others… but that doesn’t mean that that shouldn’t be done. &lt;a href=&quot;https://siliconcanal.co.uk/&quot;&gt;Silicon Canal&lt;/a&gt; already do some of that, but having more of it can’t be bad. We all want more stuff to happen, there just doesn’t need to be one thing which attempts to subsume any of the others. Birmingham Tech Week’s a great idea. I’d love to see it happen again, and it’s great that Yiannis has taken a lead on this; five thousand people showing up can’t be wrong.&lt;/p&gt;
&lt;p&gt;And, to be clear, this is not an attempt to rag on them. I don’t know Yiannis myself, but I’ve been told by people whose opinions I value and who &lt;em&gt;do&lt;/em&gt; know him that he’s not intending to be a kingmaker; that what he’s looking to do is to elevate what’s already going on, and add more to it. That’s fantastic. They’ve contacted people I know and trust to ask for opinions and thoughts. I spoke to them when they set up their own events listing and asked people to contribute to theirs specifically and I said, hey, you know there already is one of those, right? If you use that (as &lt;a href=&quot;https://siliconcanal.co.uk/events/&quot;&gt;Silicon Canal do&lt;/a&gt;) and ask people to contribute to that, then we all win, because everyone uses it as the single source and we don’t have fifteen incomplete calendars. And they said, hey, we didn’t know that, soz, but we’ll certainly do that from now on, and indeed they have done so, &lt;a href=&quot;https://twitter.com/BirminghamTech/status/1227538112961708032&quot;&gt;recommending to event organisers&lt;/a&gt; that they add their stuff to the existing calendar, and that’s brilliant. That’s collaboration.&lt;/p&gt;
&lt;p&gt;I think of the tech scene in my city like a night out dancing. You go out for the evening to have a dance, to have a laugh. Show up on your own or with a partner or with a group, and then all get out there on the floor together and throw some shapes; be there for one minute or the whole night, nobody minds. And nobody’s directing it. Nobody &lt;em&gt;wins&lt;/em&gt; a dance. If someone tries to &lt;em&gt;tell&lt;/em&gt; everyone how to dance and when to dance and where to dance… then it stops being fun.&lt;/p&gt;
&lt;p&gt;And so there’s a certain amount of resistance, on my side of the fence, to kingmakers. To people who look at the scene, all working together happily, and then say: &lt;em&gt;you people need organising for your own good, because there needs to be someone in charge here. There needs to be &lt;strong&gt;hierarchy&lt;/strong&gt;, otherwise how will journalists know who to ask for opinions?&lt;/em&gt; It’s difficult to understand an organisation which doesn’t have any organisation. &lt;a href=&quot;https://en.wikipedia.org/wiki/W._L._Gore_and_Associates#Culture&quot;&gt;&lt;span class=&quot;caps&quot;&gt;W. L.&lt;/span&gt; Gore&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Patagonia_(clothing)&quot;&gt;Patagonia&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Valve_Corporation&quot;&gt;Valve&lt;/a&gt; are companies that work a similar way, without direct hierarchy, in a way that the management theorist Frédéric Laloux calls a &lt;a href=&quot;https://en.wikipedia.org/wiki/Teal_organisation&quot;&gt;“teal organisation”&lt;/a&gt; and others call &lt;a href=&quot;https://en.wikipedia.org/wiki/Open_allocation&quot;&gt;“open allocation”&lt;/a&gt;, and they baffle people the world over too; half the managers and consultants in the world look at them and say, but that can’t work, if you don’t have bosses, nobody will do anything. But it works for them. And it seems to me to be a peculiarly Brum approach to things. If we were in this for the fame and the glory we’d have gone down to London where everyone’s terribly serious and in a rush all the time. Everyone works with everyone else; BrumPHP talks about BrumJS, Fusion talks about School of Code; one meetup directs people to others that they’ll find interesting; if the devopsdays team want a speaker about JavaScript they’ll ping BrumJS to ask about who’d be good. That’s collaboration. Everyone does their bit, and tries to elevate everyone else at the same time.&lt;/p&gt;
&lt;p&gt;So I really hope that the newspaper article was a misquote; that the journalist involved could have looked more into what’s going on in the city and then written something about all of that, too. It’s certainly easy to just report on one thing that’s going on, but exactly what makes the Birmingham tech scene different from others is that it’s rich and deep and there &lt;em&gt;isn’t&lt;/em&gt; one convenient person who knows all of it. I’d love to see Birmingham journalism talking more about the Birmingham scene. Let’s hope there’s more of that.&lt;/p&gt;&lt;ol class=&quot;simple-footnotes&quot;&gt;&lt;li id=&quot;sf-on-the-birmingham-tech-scene-1&quot;&gt;That link describes the 2019 Birmingham tech week at time of writing in February 2020. I do not know whether they’ll keep the 2019 schedule around (and I hope they do and don’t just overwrite it). &lt;a class=&quot;simple-footnote-back&quot; href=&quot;http://feeds.feedburner.com/kryogenix#sf-on-the-birmingham-tech-scene-1-back&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id=&quot;sf-on-the-birmingham-tech-scene-2&quot;&gt;to quote &lt;a href=&quot;https://twitter.com/SecondeJ/status/1229331926168764416&quot;&gt;Jim&lt;/a&gt; &lt;a class=&quot;simple-footnote-back&quot; href=&quot;http://feeds.feedburner.com/kryogenix#sf-on-the-birmingham-tech-scene-2-back&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description>
	<pubDate>Mon, 17 Feb 2020 22:44:00 +0000</pubDate>
</item>
<item>
	<title>The Fridge: Ubuntu Weekly Newsletter Issue 618</title>
	<guid isPermaLink="false">http://fridge.ubuntu.com/?p=8857</guid>
	<link>http://fridge.ubuntu.com/2020/02/17/ubuntu-weekly-newsletter-issue-618/</link>
	<description>&lt;figure class=&quot;wp-block-image&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://fridge.ubuntu.com/wp-content/uploads/2020/02/c9d7/header.png&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;Welcome to the Ubuntu Weekly Newsletter, &lt;strong&gt;Issue 618 for the week of February 9 – 15, 2020&lt;/strong&gt;. The full version of this issue is available &lt;a href=&quot;https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue618&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;In this issue we cover:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue618#Ubuntu_18.04.4_LTS_released&quot;&gt;Ubuntu 18.04.4 LTS released&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue618#Welcome_New_Members_and_Developers&quot;&gt;Welcome New Members and Developers&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue618#Ubuntu_Stats&quot;&gt;Ubuntu Stats&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue618#Hot_in_Support&quot;&gt;Hot in Support&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue618#LoCo_Events&quot;&gt;LoCo Events&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue618#xfce4-whiskermenu-plugin_2.4.2_released&quot;&gt;xfce4-whiskermenu-plugin 2.4.2 released&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue618#Canonical_News&quot;&gt;Canonical News&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue618#In_the_Blogosphere&quot;&gt;In the Blogosphere&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue618#Featured_Audio_and_Video&quot;&gt;Featured Audio and Video&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue618#Meeting_Reports&quot;&gt;Meeting Reports&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue618#Upcoming_Meetings_and_Events&quot;&gt;Upcoming Meetings and Events&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue618#Updates_and_Security_for_16.04.2C_18.04_and_19.10&quot;&gt;Updates and Security for 16.04, 18.04 and 19.10&lt;/a&gt;&lt;/li&gt;&lt;li&gt;And much more!&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;&lt;strong&gt;The Ubuntu Weekly Newsletter is brought to you by:&lt;/strong&gt;&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;Krytarik Raido&lt;/li&gt;&lt;li&gt;Bashing-om&lt;/li&gt;&lt;li&gt;Chris Guiver&lt;/li&gt;&lt;li&gt;Wild Man&lt;/li&gt;&lt;li&gt;And many others&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;If you have a story idea for the Weekly Newsletter, join the &lt;a href=&quot;https://lists.ubuntu.com/mailman/listinfo/Ubuntu-news-team&quot;&gt;Ubuntu News Team mailing list&lt;/a&gt; and submit it. Ideas can also be added to the &lt;a href=&quot;https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Ideas&quot;&gt;wiki&lt;/a&gt;!&lt;/p&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;alignleft&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://fridge.ubuntu.com/wp-content/uploads/2015/05/ab28/CCL.png&quot; /&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;Except where otherwise noted, this issue of the Ubuntu Weekly Newsletter is licensed under a &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/&quot;&gt;Creative Commons Attribution ShareAlike 3.0 License&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Mon, 17 Feb 2020 21:53:39 +0000</pubDate>
</item>
<item>
	<title>Bryan Quigley: 3 Malaysia MPEG-2 Patents left</title>
	<guid isPermaLink="true">https://bryanquigley.com/posts/politics/3-Malaysia-MPEG-2-Patents-left.html</guid>
	<link>https://bryanquigley.com/posts/politics/3-Malaysia-MPEG-2-Patents-left.html</link>
	<description>&lt;div&gt;&lt;p&gt;With February 13th passing it would &lt;a class=&quot;reference external&quot; href=&quot;https://www.mpegla.com/programs/mpeg-2/patent-list/&quot;&gt;appear&lt;/a&gt; there are only 3 Malaysia patents left:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;MY 128994 (possible expiration of 30 Mar 2022)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MY 141626-A (possible expiration of 31 May 2025)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MY-163465-A (possible expiration of 15 Sep 2032)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;These two just expired:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;p&gt;MY 118734-A - Exp. Jan 31, 2020&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PH 1-1995-50216 - Exp. Feb 13, 2020&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;I am very much not a patent lawyer, but my reading indicates all the 3 remaining are really all the same expired US Patent &lt;a class=&quot;reference external&quot; href=&quot;https://patents.google.com/patent/US5565923A/en&quot;&gt;US5565923A&lt;/a&gt; with varying Grant dates causing to expire far in the future.&lt;/p&gt;
&lt;p&gt;I've started a detailed &lt;a class=&quot;reference external&quot; href=&quot;https://bryanquigley.com/pages/mpeg2-patent-tracker.html&quot;&gt;tracker&lt;/a&gt;  for those who want more details.&lt;/p&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Podcast Ubuntu Portugal: Ep 77 – Passwords, pela trigésima oitava vez!</title>
	<guid isPermaLink="false">https://podcastubuntuportugal.org/?p=1690</guid>
	<link>https://podcastubuntuportugal.org/e77/</link>
	<description>&lt;p&gt;Episódio 77 – Passwords, pela trigésima oitava vez! O Diogo chegou da FOSDEM, o Tiago continua a tentar optimizar a gestão das  suas passwords, e a terra continua a girar à volta do Sol… Já sabem: oiçam, comentem e partilhem!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://keepassxc.org&lt;/li&gt;
&lt;li&gt;https://addons.mozilla.org/en-US/firefox/addon/keepassxc-browser/&lt;/li&gt;
&lt;li&gt;https://www.f-droid.org/en/packages/com.kunzisoft.keepass.libre/&lt;/li&gt;
&lt;li&gt;https://pool.xmr.pt/&lt;/li&gt;
&lt;li&gt;https://snapcraft.io/cvescan&lt;/li&gt;
&lt;li&gt;https://pixels.camp/&lt;/li&gt;
&lt;li&gt;https://fosdem.org&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Apoios&lt;/h3&gt;
&lt;p&gt;Este episódio foi produzido e editado por Alexandre Carrapiço (Thunderclaws Studios – captação, produção, edição, mistura e masterização de som) contacto: thunderclawstudiosPT–arroba–gmail.com.&lt;/p&gt;
&lt;p&gt;Podem apoiar o podcast usando os links de afiliados do Humble Bundle, porque ao usarem esses links para fazer uma compra, uma parte do valor que pagam reverte a favor do Podcast Ubuntu Portugal.&lt;br /&gt;
E podem obter tudo isso com 15 dólares ou diferentes partes dependendo de pagarem 1, ou 8.&lt;br /&gt;
Achamos que isto vale bem mais do que 15 dólares, pelo que se puderem paguem mais um pouco mais visto que têm a opção de pagar o quanto quiserem.&lt;/p&gt;
&lt;p&gt;Se estiverem interessados em outros bundles não listados nas notas usem o link https://www.humblebundle.com/?partner=PUP e vão estar também a apoiar-nos.&lt;/p&gt;
&lt;h3&gt;Atribuição e licenças&lt;/h3&gt;
&lt;p&gt;A música do genérico é: “Won’t see it comin’ (Feat Aequality &amp;amp; N’sorte d’autruche)”, por Alpha Hydrae e está licenciada nos termos da [CC0 1.0 Universal License](https://creativecommons.org/publicdomain/zero/1.0/).&lt;/p&gt;
&lt;p&gt;Este episódio e a imagem utilizada estão licenciados nos termos da licença: &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot;&gt;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&lt;/a&gt;, &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode&quot;&gt;cujo texto integral pode ser lido aqui&lt;/a&gt;. Estamos abertos a licenciar para permitir outros tipos de utilização, &lt;a href=&quot;https://podcastubuntuportugal.org/category/planet/feed/contacto&quot;&gt;contactem-nos&lt;/a&gt; para validação e autorização.&lt;/p&gt;</description>
	<pubDate>Thu, 13 Feb 2020 22:45:06 +0000</pubDate>
        <enclosure url="https://media.blubrry.com/ubuntupt/podcastubuntuportugal.org/episodios/Podcast_Ubuntu_Portugal-Ep77.mp3" length="54086973" type="audio/mpeg"/>
</item>
<item>
	<title>Jonathan Carter: Initial experiments with the Loongson Pi 2K</title>
	<guid isPermaLink="false">https://jonathancarter.org/?p=10249</guid>
	<link>https://jonathancarter.org/2020/02/13/initial-experiments-with-the-loongson-pi-2k/</link>
	<description>&lt;p&gt;Recently, &lt;a href=&quot;http://www.loongson.cn/index.html&quot;&gt;Loongson&lt;/a&gt; made some Pi 2K boards available to Debian developers and Aron Xu was kind enough to &lt;a href=&quot;https://jonathancarter.org/2020/02/07/random-bits-from-fosdem-2020/&quot;&gt;bring me one to FOSDEM&lt;/a&gt; earlier this month. It’s a MIPS64 based board with 2GB RAM, 2 gigabit ethernet cards, an m.2 (SATA) disk slot and a whole bunch more i/o. More details about the board itself &lt;a href=&quot;https://wiki.debian.org/MIPS/LoongsonPi&quot;&gt;is available on the Debian wiki&lt;/a&gt;, here is a quick board tour from there:&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10267&quot; src=&quot;https://jonathancarter.org/files/images/loongson_board.jpg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;On my previous blog post I still had the protective wrapping on the acrylic case. Here it is all peeled off and polished after Holger pointed that out to me on IRC. I’ll admit I kind of liked the earthy feel that the protective covers had, but this is nice too.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10270&quot; src=&quot;https://jonathancarter.org/files/images/loongson_in_case.jpg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;The reason why I wanted this board is that I don’t have access to any MIPS64 hardware whatsoever, and it can be really useful for getting &lt;a href=&quot;http://calamares.io/&quot;&gt;Calamares&lt;/a&gt; to run properly on MIPS64 on Debian. Calamares itself &lt;a href=&quot;https://buildd.debian.org/status/package.php?p=calamares&quot;&gt;builds fine on this platform&lt;/a&gt;, but calamares-settings-debian will only work on amd64 and i386 right now (where it will either install grub-efi or grub-pc depending in which mode you booted, otherwise it will crash during installation). I already have lots of plans for the Bullseye release cycle (and even &lt;a href=&quot;https://jonathancarter.org/2019/10/17/calamares-plans-for-debian-11/&quot;&gt;for Calamares specifically&lt;/a&gt;), so I’m not sure if I’ll get there but I’d like to get support for mips64 and arm64 into calamares-settings-debian for the bullseye release. I think it’s mostly just a case of detecting the platforms properly and installing/configuring the right bootloaders. Hopefully it’s that simple.&lt;/p&gt;



&lt;p&gt;In the meantime, I decided to get to know this machine a bit better. I’m curious how it could be useful to me otherwise. All its expansion ports definitely seems interesting. First I plugged it into my power meter to check what power consumption looks like. According to this, it typically uses between 7.5W and 9W and about 8.5W on average.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10273&quot; src=&quot;https://jonathancarter.org/files/images/loongson-8.4w.jpeg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;I initially tried it out on an old Sun monitor that I salvaged from a recycling heap. It wasn’t working anymore but my anonymous friend replaced its power supply and its CFL backlight with an LED backlight, now it’s a really nice 4:3 monitor for my vintage computers. On a side-note, if you’re into electronics, &lt;a href=&quot;https://www.youtube.com/channel/UCwyLxifYtKtnHi5TRDaD03A&quot;&gt;follow his YouTube channel where you can see him repair things&lt;/a&gt;. Unfortunately the board doesn’t like this screen by default (just black screen when xorg started), I didn’t check if it was just a xorg configuration issue or a hardware limitiation, but I just moved it to an old 720P TV that I usually use for my mini collection and it displayed fine there. I thought I’d just mention it in case someone tries this board and wonders why they just see a black screen after it boots.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10282&quot; src=&quot;https://jonathancarter.org/files/images/loongson-sun.jpeg&quot; /&gt;&lt;/figure&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10283&quot; src=&quot;https://jonathancarter.org/files/images/loongson-720tv.jpeg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;I was curious whether these Ethernet ports could realistically do anything more than 100mbps (sometimes they go on a bus that maxes out way before gigabit does), so I install iperf3 and gave it a shot. This went through 2 switches that has some existing traffic on it, but the ~85MB/s I got on my first test completely satisfied me that these ports are plenty fast enough.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10277&quot; src=&quot;https://jonathancarter.org/files/images/loongson-netspeed.jpeg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;Since I first saw the board, I was curious about the PCIe slot. I attached an older NVidia (that still runs fine with the free Nouveau driver), also attached some external power to the card and booted it all up…&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10279&quot; src=&quot;https://jonathancarter.org/files/images/loongson-nvidia.jpeg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;The card powers on and the fan enthusiastically spins up, but sadly the card is not detected on the Loongson board. I think you need some PC BIOS equivelent stuff to poke the card at the right places so that it boots up properly.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10280&quot; src=&quot;https://jonathancarter.org/files/images/loongson-lspci.jpeg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;Disk performance is great, as can be expected with the SSD it has on board. It’s significantly better than the extremely slow flash you typically get on development boards.&lt;/p&gt;



&lt;p&gt;I was starting to get curious about whether Calamares would run on this. So I went ahead and installed it along with calamares-settings-debian. I wasn’t even sure it would start up, but lo and behold, it did. This is quite possibly the first time Calamares has ever started up on a MIPS64 machine. It started up in Chinese since I haven’t changed the language settings yet in Xfce.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10287&quot; src=&quot;https://jonathancarter.org/files/images/calamares-mips64.jpeg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;I was curious whether Calamares would start up on the framebuffer. Linux framebuffer support can be really flaky on platforms with weird/incomplete Linux drivers. I ran ‘calamares -platform linuxfb’ from a virtual terminal and it just worked.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10288&quot; src=&quot;https://jonathancarter.org/files/images/loongson-calamares-fb.jpeg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;This is all very promising and makes me a lot more eager to get it all working properly and get a nice image generated that you can use Calamares to install Debian on a MIPS64 board. Unfortunately, at least for now, this board still needs its own kernel so it would need it’s own unique installation image. Hopefully all the special bits will make it into the mainline Linux kernel before too long. Graphic performance wasn’t good, but I noticed that they do &lt;a href=&quot;https://github.com/loongson-community&quot;&gt;have some drivers on GitHub&lt;/a&gt; that I haven’t tried yet, but that’s an experiment for another evening.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Updates:&lt;/strong&gt;&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Price: &lt;/strong&gt;A few people asked about the price, so I asked Aron if he can share some pricing information. I got this one for free, it’s an unreleased demo model. At least two models might be released that’s based on this, a smaller board with fewer pinouts for about €100, and the current demo version is about $200 (CNY 1399), so the final version might cost somewhere in that ballpark too. These aren’t any kind of final prices, and I don’t represent Loongson in any capacity, but at least this should give you some idea of what it would cost.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;More boards:&lt;/strong&gt; Not all Debian Developers who requested their board have received them, Aron said that more boards should become available by March/April.&lt;/li&gt;&lt;/ul&gt;
&lt;img alt=&quot;&quot; height=&quot;0&quot; src=&quot;https://analytics.bluemosh.com/piwik.php?idsite=2&amp;amp;rec=1&amp;amp;url=https%3A%2F%2Fjonathancarter.org%2F2020%2F02%2F13%2Finitial-experiments-with-the-loongson-pi-2k%2F&amp;amp;action_name=Initial+experiments+with+the+Loongson+Pi+2K&amp;amp;urlref=https%3A%2F%2Fjonathancarter.org%2Ffeed%2F&quot; style=&quot;border: 0; width: 0; height: 0;&quot; width=&quot;0&quot; /&gt;</description>
	<pubDate>Thu, 13 Feb 2020 20:29:16 +0000</pubDate>
</item>
<item>
	<title>The Fridge: Ubuntu 18.04.4 LTS released</title>
	<guid isPermaLink="false">http://fridge.ubuntu.com/?p=8849</guid>
	<link>http://fridge.ubuntu.com/2020/02/12/ubuntu-18-04-4-lts-released/</link>
	<description>&lt;p&gt;The Ubuntu team is pleased to announce the release of Ubuntu 18.04.4 LTS (Long-Term Support) for its Desktop, Server, and Cloud products, as well as other flavours of Ubuntu with long-term support.&lt;/p&gt;



&lt;p&gt;Like previous LTS series, 18.04.4 includes hardware enablement stacks for use on newer hardware.  This support is offered on all architectures and is installed by default when using one of the desktop images.&lt;/p&gt;



&lt;p&gt;Ubuntu Server defaults to installing the GA kernel; however you may select the HWE kernel from the installer bootloader.&lt;/p&gt;



&lt;p&gt;As usual, this point release includes many updates, and updated installation media has been provided so that fewer updates will need to be downloaded after installation.  These include security updates and corrections for other high-impact bugs, with a focus on maintaining stability and compatibility with Ubuntu 18.04 LTS.&lt;/p&gt;



&lt;p&gt;Kubuntu 18.04.4 LTS, Ubuntu Budgie 18.04.4 LTS, Ubuntu MATE 18.04.4 LTS, Lubuntu 18.04.4 LTS, Ubuntu Kylin 18.04.4 LTS, and Xubuntu 18.04.4 LTS are also now available. More details can be found in their individual release notes:&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;&lt;a href=&quot;https://wiki.ubuntu.com/BionicBeaver/ReleaseNotes#Official_flavours&quot;&gt;https://wiki.ubuntu.com/BionicBeaver/ReleaseNotes#Official_flavours&lt;/a&gt;&lt;/pre&gt;



&lt;p&gt;Maintenance updates will be provided for 5 years for Ubuntu Desktop, Ubuntu Server, Ubuntu Cloud, and Ubuntu Base.  All the remaining flavours will be supported for 3 years.&lt;/p&gt;



&lt;h3&gt;
To get Ubuntu 18.04.4&lt;p&gt;&lt;/p&gt;
&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;



&lt;p&gt;In order to download Ubuntu 18.04.4, visit:&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;&lt;a href=&quot;https://ubuntu.com/download&quot;&gt;https://ubuntu.com/download&lt;/a&gt;&lt;/pre&gt;



&lt;p&gt;Users of Ubuntu 16.04 will be offered an automatic upgrade to 18.04.4 via Update Manager.  For further information about upgrading, see:&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;&lt;a href=&quot;https://help.ubuntu.com/community/BionicUpgrades&quot;&gt;https://help.ubuntu.com/community/BionicUpgrades&lt;/a&gt;&lt;/pre&gt;



&lt;p&gt;As always, upgrades to the latest version of Ubuntu are entirely free of charge.&lt;/p&gt;



&lt;p&gt;We recommend that all users read the 18.04.4 release notes, which document caveats and workarounds for known issues, as well as more in-depth notes on the release itself.  They are available at:&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;&lt;a href=&quot;https://wiki.ubuntu.com/BionicBeaver/ReleaseNotes&quot;&gt;https://wiki.ubuntu.com/BionicBeaver/ReleaseNotes&lt;/a&gt;&lt;/pre&gt;



&lt;p&gt;If you have a question, or if you think you may have found a bug but aren’t sure, you can try asking in any of the following places:&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;#ubuntu on irc.freenode.net&lt;br /&gt;&lt;a href=&quot;https://lists.ubuntu.com/mailman/listinfo/ubuntu-users&quot;&gt;https://lists.ubuntu.com/mailman/listinfo/ubuntu-users&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;https://ubuntuforums.org&quot;&gt;https://ubuntuforums.org&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://askubuntu.com&quot;&gt;https://askubuntu.com&lt;/a&gt;&lt;/pre&gt;



&lt;h3&gt;
Help Shape Ubuntu&lt;p&gt;&lt;/p&gt;
&lt;/h3&gt;



&lt;p&gt;If you would like to help shape Ubuntu, take a look at the list of ways you can participate at:&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;&lt;a href=&quot;https://ubuntu.com/community/get-involved&quot;&gt;https://ubuntu.com/community/get-involved&lt;/a&gt;&lt;/pre&gt;



&lt;h3&gt;
About Ubuntu&lt;p&gt;&lt;/p&gt;
&lt;/h3&gt;



&lt;p&gt;Ubuntu is a full-featured Linux distribution for desktops, laptops, clouds and servers, with a fast and easy installation and regular releases.  A tightly-integrated selection of excellent applications is included, and an incredible variety of add-on software is just a few clicks away.&lt;/p&gt;



&lt;p&gt;Professional services including support are available from Canonical and hundreds of other companies around the world.  For more information about support, visit:&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;&lt;a href=&quot;http://www.ubuntu.com/support&quot;&gt;http://www.ubuntu.com/support&lt;/a&gt;&lt;/pre&gt;



&lt;h3&gt;
More Information&lt;p&gt;&lt;/p&gt;
&lt;/h3&gt;



&lt;p&gt;You can learn more about Ubuntu and about this release on our website listed below:&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;&lt;a href=&quot;http://www.ubuntu.com/&quot;&gt;http://www.ubuntu.com/&lt;/a&gt;&lt;/pre&gt;



&lt;p&gt;To sign up for future Ubuntu announcements, please subscribe to Ubuntu’s very low volume announcement list at:&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;&lt;a href=&quot;http://lists.ubuntu.com/mailman/listinfo/ubuntu-announce&quot;&gt;http://lists.ubuntu.com/mailman/listinfo/ubuntu-announce&lt;/a&gt;&lt;/pre&gt;



&lt;p&gt;&lt;em&gt;Originally posted to the &lt;/em&gt;&lt;a href=&quot;https://lists.ubuntu.com/archives/ubuntu-announce/2020-February/000254.html&quot;&gt;&lt;em&gt;ubuntu-announce mailing list&lt;/em&gt;&lt;/a&gt;&lt;em&gt; on Wed Feb 12 18:06:17 UTC 2020 by Łukasz ‘sil2100’ Zemczak, on behalf of the Ubuntu Release Team&lt;/em&gt;&lt;/p&gt;</description>
	<pubDate>Thu, 13 Feb 2020 02:07:14 +0000</pubDate>
</item>
<item>
	<title>Lubuntu Blog: Lubuntu 18.04.4 Released!</title>
	<guid isPermaLink="false">https://lubuntu.me/?p=3468</guid>
	<link>https://lubuntu.me/bionic-4-released/</link>
	<description>Thanks to all the hard work from our contributors, we are pleased to announce that Lubuntu 18.04.4 LTS has been released! What is Lubuntu? Lubuntu is an official Ubuntu flavor which uses the Lightweight X11 Desktop Environment (LXDE). The project’s goal is to provide a lightweight yet functional Linux distribution based on a rock solid […]</description>
	<pubDate>Wed, 12 Feb 2020 21:42:57 +0000</pubDate>
</item>
<item>
	<title>Omer Akram: Network-based IPC using WAMP protocol</title>
	<guid isPermaLink="false">http://om26er.com/?p=68</guid>
	<link>https://om26er.com/2020/02/10/network-based-ipc-using-wamp-protocol/</link>
	<description>&lt;p&gt;Most Linux based distributions come pre-installed with DBus, which is a language-independent way of IPC on such systems. DBus is great and have been extensively used for a long-time. It, however is written largely to be used on a single client computer, where apps running locally are able to talk to each other. It could be used over TCP, however it may not be suitable for reasons I state below.&lt;/p&gt;



&lt;p&gt;In modern times and especially with the advent of smartphones, many new app communication paradigms have appeared. With IoT being the new cool kid in town, its becoming more and more a “required” when different apps running in a premise have to “talk” to each other. DBus daemon can be accessed over TCP, however a client running in a web browser cannot talk to it because browsers no longer provide direct access to the TCP socket, so writing a DBus client library won’t be possible. For Android and iOS, talking to a DBus daemon running on a PC would need new implementations.&lt;/p&gt;



&lt;p&gt;Much of the above effort could be reduced if we used a more general purpose protocol, that supports PubSub and RPCs, is secure (supports end to end encryption), cross-platform and have an ever increasing client libraries ecosystem. WAMP protocol is one such protocol, it can be run over WebSocket, allowing “free” browser support. It also runs over RawSocket (custom framing atop TCP). In principle, WAMP could run on any bi-directional and reliable transport hence the future prospects of the protocol look quite good.&lt;/p&gt;



&lt;p&gt;To that effort I have been working on a pet project for the last couple of months, called &lt;a href=&quot;https://github.com/deskconn/deskconnd/&quot;&gt;DeskConn&lt;/a&gt;. It uses &lt;a href=&quot;http://crossbar.io/&quot;&gt;Crossbar&lt;/a&gt; as WAMP router (equivalent: DBus daemon) and couple with it an authentication scheme and service discovery using &lt;a href=&quot;https://github.com/jstasiak/python-zeroconf&quot;&gt;python zerconf&lt;/a&gt;, allowing for the daemon running on the desktop/RPi to be discover-able by Clients on the local network (WiFi, LAN or other interfaces).&lt;/p&gt;



&lt;p&gt;With the network layer figured, writing applications on top that is pretty straightforward and can be done with very little code. I’ll come up with some example code in different programming languages in a later blogpost. For the curious, the umbrella &lt;code&gt;deskconn&lt;/code&gt; project has quite a few sub-projects to be run on different environment &lt;a href=&quot;https://github.com/deskconn/&quot; rel=&quot;nofollow&quot;&gt;https://github.com/deskconn/&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Note: I am a Core developer at Crossbar.io GmbH, the company that funds the development of Crossbar (the router) and a few WAMP client library implementations in Java, Python, JS/Node and C++, under the &lt;a href=&quot;https://crossbar.io/autobahn/&quot;&gt;Autobahn project&lt;/a&gt;.  I am the maintainer of autobahn-java and autobahn-js. DeskConn is a personal project that I have been working on in my free time.&lt;/p&gt;



&lt;p&gt;A more wider list of implementations mostly done by the community could be seen here &lt;a href=&quot;https://crossbar.io/about/Supported-Languages&quot; rel=&quot;nofollow&quot;&gt;https://crossbar.io/about/Supported-Languages&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Mon, 10 Feb 2020 17:31:56 +0000</pubDate>
</item>
<item>
	<title>Omer Akram: My first-ever FOSDEM; it was awesome</title>
	<guid isPermaLink="false">http://om26er.com/?p=53</guid>
	<link>https://om26er.com/2020/02/08/my-first-ever-fosdem/</link>
	<description>&lt;p&gt;I came back from FOSDEM on Tuesday but got busy with my day time job at Crossbar.io. Finally, today when I got to write something, I found my blogspot based web page to be really uncomfortable to navigate and manage, so I spent the last few hours trying to move my blog over to wordpress. I also had to update the planet ubuntu bzr repository for my new blog to show up on Planet Ubuntu.&lt;/p&gt;



&lt;p&gt;Having been part of the Ubuntu community, I have had the chance to travel to different software events, mostly Ubuntu specific. While at Canonical, my travel was for Ubuntu Developer Summit and for internal Canonical sprints. Post-Canonical layoff in 2017, I didn’t really travel much for conferences, though last year, while visiting Crossbar.io GmbH’s HQ in Erlagen, Germany, I used that opportunity to plan my trip as such that it coincides with UbuCon Europe in Sintra. That was a great event and I got to meet really great people, the social part of that event was on par or even better than the talks/workshops.&lt;/p&gt;



&lt;p&gt;So when FOSDEM’s date was announced, I was yet again excited to travel to a community event and since its known as the biggest FOSS conference in Europe and the fact that lots of super-intelligent people from the wider open-source community attend it every year, I knew I had to be there. To that regard I applied for the Ubuntu community donation fund and guess what I got the nod. Rest is just details.&lt;/p&gt;



&lt;div class=&quot;wp-block-jetpack-markdown&quot;&gt;&lt;h2&gt;Talks were great&lt;/h2&gt;
&lt;p&gt;I attended lots of great talks (lighting as well) and one of the great and a &quot;must watch&quot; talk was from James Bottomley of IBM titled &quot;The Selfish Contributor Explained&quot;, according to him that to unleash the true potential of an employee, companies should make an effort to figure out what interests their employee and if a developer is working on something they enjoy, they will likely go out of their way to make things work better.&lt;/p&gt;
&lt;p&gt;From future’s perspective and something that affects us all is how the web will transform in the coming years; for that Daniel Stenberg (curl creator) gave an informative talk about HTTP/3 and the problems that it solves. Of course much of the &quot;heavy lifting&quot; was done by the new underlying transport QUIC (thanks Google for the earlier work)&lt;/p&gt;
&lt;/div&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-57&quot; data-attachment-id=&quot;57&quot; data-comments-opened=&quot;1&quot; data-image-description=&quot;&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;photo_2020-02-08_02-46-24&quot; data-large-file=&quot;https://om26ercom.files.wordpress.com/2020/02/photo_2020-02-08_02-46-24.jpg?w=1024&quot; data-medium-file=&quot;https://om26ercom.files.wordpress.com/2020/02/photo_2020-02-08_02-46-24.jpg?w=300&quot; data-orig-file=&quot;https://om26ercom.files.wordpress.com/2020/02/photo_2020-02-08_02-46-24.jpg&quot; data-orig-size=&quot;1280,960&quot; data-permalink=&quot;https://om26er.com/photo_2020-02-08_02-46-24/&quot; src=&quot;https://om26ercom.files.wordpress.com/2020/02/photo_2020-02-08_02-46-24.jpg?w=1024&quot; /&gt;Behold HTTP/3 is coming&lt;/figure&gt;



&lt;div class=&quot;wp-block-jetpack-markdown&quot;&gt;&lt;h2&gt;I gave a talk&lt;/h2&gt;
&lt;p&gt;DeskConn is a project that I have been working on in my free time for a bit and I wanted to introduce that to a wider audience, hence I gave a brief talk on what could potentially be done with it. DeskConn project enables network based IPC, allowing for different apps, written in different languages to be able to communicate with each other and since the technology is based around WebSocket/WAMP/Zeroconf, a client could be running in any programming language that has a WAMP library.&lt;/p&gt;
&lt;p&gt;For simplicity sake: Its a technology that could enable creation of projects like KDE Connect but something that runs on all platforms like Windows, macOS and Linux.&lt;/p&gt;
&lt;/div&gt;



&lt;figure class=&quot;wp-block-video&quot;&gt;&lt;video controls=&quot;controls&quot; src=&quot;https://video.fosdem.org/2020/H.2215/deskconnd_crossplatform_ipc.mp4&quot;&gt;&lt;/video&gt;My talk about the DeskConn project&lt;/figure&gt;



&lt;div class=&quot;wp-block-jetpack-markdown&quot;&gt;&lt;h2&gt;Met old colleagues and friends&lt;/h2&gt;
&lt;p&gt;FOSDEM gave me the opportunity to meet lots of great people that I truly admire in the Ubuntu community, people I hadn’t seen or talked to for more than 3 years.&lt;/p&gt;
&lt;p&gt;I met quite a few people from the Ubuntu desktop team and it was refreshing to know how hard they are working on making Ubuntu 20.04 a success. Olivier Tilloy and I had a short discussion about browser maintenance that he does to ensure we have the latest and greatest versions of our two favorite browsers (Firefox and Chromium). Jibel told me about the ZFS installation feature work that He and Didier have been doing; I hope we’ll be able to use that technology in &quot;production&quot; soon.&lt;/p&gt;
&lt;/div&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-59&quot; data-attachment-id=&quot;59&quot; data-comments-opened=&quot;1&quot; data-image-description=&quot;&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;photo_2020-02-08_03-09-06&quot; data-large-file=&quot;https://om26ercom.files.wordpress.com/2020/02/photo_2020-02-08_03-09-06.jpg?w=1024&quot; data-medium-file=&quot;https://om26ercom.files.wordpress.com/2020/02/photo_2020-02-08_03-09-06.jpg?w=300&quot; data-orig-file=&quot;https://om26ercom.files.wordpress.com/2020/02/photo_2020-02-08_03-09-06.jpg&quot; data-orig-size=&quot;1280,960&quot; data-permalink=&quot;https://om26er.com/photo_2020-02-08_03-09-06/&quot; src=&quot;https://om26ercom.files.wordpress.com/2020/02/photo_2020-02-08_03-09-06.jpg?w=1024&quot; /&gt;from left to right: Martin Pitt (from RedHat), Ian Lane and Jean-Baptiste Lallement and I&lt;/figure&gt;



&lt;div class=&quot;wp-block-jetpack-markdown&quot;&gt;&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;My first FOSDEM was a great learning experience, navigating around the ULB is also a challenge of sorts but it was all worth it. I’d definitely go back to a FOSDEM given the chance, maybe next year &lt;img alt=&quot;😉&quot; class=&quot;wp-smiley&quot; src=&quot;https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/1f609.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;p&gt;&lt;/p&gt;</description>
	<pubDate>Fri, 07 Feb 2020 22:24:22 +0000</pubDate>
        <enclosure url="http://video.fosdem.org/2020/H.2215/deskconnd_crossplatform_ipc.mp4" length="81969458" type="video/mp4"/>
</item>
<item>
	<title>Jonathan Carter: Random bits from FOSDEM 2020</title>
	<guid isPermaLink="false">https://jonathancarter.org/?p=10125</guid>
	<link>https://jonathancarter.org/2020/02/07/random-bits-from-fosdem-2020/</link>
	<description>&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10130&quot; src=&quot;https://jonathancarter.org/files/images/fosdem_waffle.jpg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;On 1-2 February I attended FOSDEM. This is only the second time I’ve attended this annual event in Brussels, and it’s just about as crazy as it was last year with over 8000 attendees and 835 talk/BoF/etc sessions.&lt;/p&gt;



&lt;p&gt;I did all the typical FOSDEM stuff. Visiting booths, attend a few talks and BOFs, catch up with a few people, meet some new ones I’ve only known on IRC, signed a few GPG keys and consumed a whole lot of club mate, fries, chocolate and waffles.&lt;/p&gt;



&lt;p&gt;Below follows some random bits that I happen to remember or took photos of. They are in no order of particular importance. I wish I got some photos with some of the cool people I so seldomly see, if I ever attend an event like this, I’ll pay some more attention to this.&lt;/p&gt;



&lt;p class=&quot;has-medium-font-size&quot;&gt;&lt;strong&gt;Axiom Free hardware camera&lt;/strong&gt;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;a href=&quot;https://www.apertus.org/axiom&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10179&quot; src=&quot;https://jonathancarter.org/files/images/AXIOM-Beta-Compact-Overview-03.png&quot; /&gt;&lt;/a&gt;Axiom Beta camer profile, from &lt;a href=&quot;https://www.apertus.org/axiom&quot;&gt;the Apertus website&lt;/a&gt;&lt;/figure&gt;



&lt;p&gt;I attended a talk about the &lt;a href=&quot;https://en.wikipedia.org/wiki/AXIOM_(camera)&quot;&gt;Axiom free video camera&lt;/a&gt; along with a few members of the DebConf video team. It’s completely free hardware, professional grade and overall very impressive. Here’s a &lt;a href=&quot;https://www.youtube.com/watch?v=GExhtfgB-3c&quot;&gt;YouTube link to some sample footage&lt;/a&gt; taken with an earlier model of the camera which they displayed at FOSDEM.&lt;/p&gt;



&lt;p&gt;All the nice things above come at a cost, kits currently range from around £4000 to £6000. And then you have to assemble it yourself on a component level. It’s not likely that we’ll ever use the main Axiom camera for DebConf, it’s really better suited for projects that are creating film-grade content or for academic purposes where you might want to capture something very specific at a high colour depth or frame rate (it can do up to 300fps).&lt;/p&gt;



&lt;p&gt;Fortunately, there’s a project by some talented developers to create a &lt;a href=&quot;https://wiki.apertus.org/index.php/AXIOM_Micro&quot;&gt;smaller version of the camera (the Axiom Micro)&lt;/a&gt; which may be a lot more appropriate for DebConf. We have a lot of problems with the current hardware stack, like needing to source a whole bunch of local PCs and shipping a whole lot of hardware to new and interesting countries every year all with their own unique logistical problems. Using free camera hardware could go a long way in helping reduce the sheer amount of hardware needed for videoing a DebConf without having to lose any functionality. It’s probably quite a bit of time before this could even yet be considered as a viable option, but it’s nice to get a sneak peek of what might be possible in the not-so-distant future.&lt;/p&gt;



&lt;p class=&quot;has-medium-font-size&quot;&gt;&lt;strong&gt;Godot Game Engine&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;It’s been about 20 years since I wrote my last game, and I’ve been toying around with the idea of writing a new and very niche adventure game for the last two years. In the last few months, I’ve been shopping around for game engines. I came very close to just settling on making it a Flask app and playable in a web browser. That might give me some excuse to play with &lt;a href=&quot;http://brython.info/&quot;&gt;Brython&lt;/a&gt; too, which is a Python interpreter that runs in JavaScript.&lt;/p&gt;



&lt;p&gt;In recent months, I’ve been reading more and more about Godot, (at FOSDEM I learned that upstream pronounces this as “guh-dough”, but they’re fine with you pronouncing it anyway you want).&lt;/p&gt;



&lt;p&gt;What I like about it:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;Very flexible game engine for both 2D and 3D graphics&lt;/li&gt;&lt;li&gt;Fully free software with no gotchas&lt;/li&gt;&lt;li&gt;Widely cross platform (compile for Windows, Linux, macOS, Android, webassembly and more)&lt;/li&gt;&lt;li&gt;Nice built-in scripting language called gdscript (syntax similar to Python) (You can also programming in a lot of existing languages like C++, Rust, C#, Python, etc)&lt;/li&gt;&lt;li&gt;It has a fully integrated development environment in which you can create your games&lt;/li&gt;&lt;li&gt;Its IDE and runtime engines are already packaged in Debian and even in stable (Debian 10) already&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;I could go on, but at this point I’m personally sold on these core points already. Here is a &lt;a href=&quot;https://www.youtube.com/watch?v=l7BrpcboJno&quot;&gt;nice video comparing some of its pros and cons&lt;/a&gt;, it’s biggest downside is that it’s 3D performance isn’t that great compared to the other major 3D gaming engines, but a lot of work is going into ironing out a few kinks in that area.&lt;/p&gt;



&lt;p&gt;I liked visiting their booth and finding out more about the system, unfortunately I seemed to have lost my photo of their booth, but fortunately I bought this really cool t-shirt, I hope to find some time to properly dive into Godot soon.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10183&quot; src=&quot;https://jonathancarter.org/files/images/godot.jpeg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;On the last day of FOSDEM, &lt;a href=&quot;https://godotengine.org/article/godot-engine-was-awarded-epic-megagrant&quot;&gt;news broke that they received an EPIC megagrant &lt;/a&gt;that they applied for. That’s quite some news since they are in some ways a competitor to EPIC’s &lt;a href=&quot;https://www.unrealengine.com/en-US/&quot;&gt;own game engine&lt;/a&gt;, but I think they did the right thing and it makes sense for them to have a good relationship with an open source engine such as Godot. Anyway, read more about &lt;a href=&quot;https://godotengine.org/&quot;&gt;Godot on their website&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Librem 5 BoF&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;When the crowdsourcing kicked off for the &lt;a href=&quot;https://puri.sm/products/librem-5/&quot;&gt;Librem 5&lt;/a&gt; (a fully free phone created by &lt;a href=&quot;https://puri.sm/&quot;&gt;Purism&lt;/a&gt;), it didn’t take me long to decide that I’ll order one. This was quite some time ago and it seems that I may actually receive my long-awaited device in late March / early April. There was a Librem 5 BoF at FOSDEM, so of course I went.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10157&quot; src=&quot;https://jonathancarter.org/files/images/librem5_bog.jpg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;It was nice to finally hold one of these devices and see what it’s really like. Many on-line reviews complained that it’s bulky. It is indeed bulky compared to a sleek modern phone, but it’s not nearly as thick as something like the Nokia N800/N900, which was probably the closest thing to this phone that existed before. It’s really pleasant to hold and will fit comfortably in cargo pants. Unfortunately it did feel a bit warm (not quite hot, but warm enough that it would distract me if it got that warm in my pocket). They hope to improve power management drastically by the end of the year. One of the biggest challenges is that all the major components are discrete, separate chips. This is done by design and makes the phone more modular, but it does make power saving a bigger challenge since coordinating timing and wake-ups between these discrete chips takes a lot more finesse than if they were integrated in a single chip.&lt;/p&gt;



&lt;p&gt;I asked about their roadmap and whether they’ll start working on the next version of the phone now that this phone is pretty much done on a hardware level. Fortunately for owners of this model, their focus will remain on the current Librem 5 and to optimize it, so we shouldn’t expect any new models or major development on a new generation of Librem 5 hardware for the next 2 years or so.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10167&quot; src=&quot;https://jonathancarter.org/files/images/librem5_phone.jpg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;I just played with the device for about two minutes. The Gnome apps are fast and responsive and just feel natural on this form factor. I’m looking forward again to having a pocket computer that can run Debian. I hope they improve the terminal app a bit, I felt that it lacked some buttons.  On Android I use &lt;a href=&quot;https://juicessh.com/&quot;&gt;JuiceSSH&lt;/a&gt; which makes it really easy to navigate typical terminal apps like mc, htop and irssi.&lt;/p&gt;



&lt;p&gt;I asked whether they’re thinking of creating any accessories for this phone, since a keyboard-case would be nice. They said that they’re certainly looking into it and will be releasing some limited accessories for the phone, but couldn’t yet elaborate on exactly what that would be yet.&lt;/p&gt;



&lt;p class=&quot;has-medium-font-size&quot;&gt;&lt;strong&gt;Loongson development board&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;Loongson made some &lt;a href=&quot;https://wiki.debian.org/MIPS/LoongsonPi&quot;&gt;Loongson 2K Pi boards&lt;/a&gt; available to Debian Developers. I requested one and thanks to the two DDs who co-ordinated to bring it in from China I got my one at FOSDEM. It’s a MIPS64 based CPU with a Vivante GC1000 Series GPU. I got the board with a 16GB SSD, a nifty mountboard and a 5V/3A power adaptor. It’s got dual gigabit ethernet ports, space for a wifi card, lots of GPIO pins and even a PCIe slot.&lt;/p&gt;



&lt;p&gt;I’ve never tried a proper Debian system on a MIPS platform before. Unfortunately you need a special kernel to boot this, but that will hopefully change in the future. A standard Debian mips64el userland should run fine on it, I’ll try it out over the weekend. I couldn’t help myself from assembling the kit before finishing this blog post. Even if it ends up not being very useful for Debian development, I’ll certainly be able to find a use for it with all the extensibility it has. I’ll do an update blog post and/or video about it when I’ve played with it a bit.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10174&quot; src=&quot;https://jonathancarter.org/files/images/signal-attachment-2020-02-06-215837.jpeg&quot; /&gt;&lt;/figure&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10175&quot; src=&quot;https://jonathancarter.org/files/images/signal-attachment-2020-02-06-215424.jpeg&quot; /&gt;&lt;/figure&gt;



&lt;p class=&quot;has-medium-font-size&quot;&gt;&lt;strong&gt;Gentoo prefixes&lt;/strong&gt;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10188&quot; src=&quot;https://jonathancarter.org/files/images/gentoo_prefixes.jpeg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;At the Gentoo stand, I learned about &lt;a href=&quot;https://wiki.gentoo.org/wiki/Project:Prefix&quot;&gt;Gentoo prefixes&lt;/a&gt;. This allows you to set up a directory on an existing Linux (or in some cases, even on other) systems where you can emerge from Gentoo ports. You can then just add this prefix to your path to easily run applications from it. This is especially useful for people who don’t have root access on their computer but might need access to some additional software. Or maybe they want a newer (or older) version that’s available on their system release.&lt;/p&gt;



&lt;p&gt;I’m kind of surprised that there’s been less talk about enabling some kind of user-mode APT in Debian where you can get something similar to a Gentoo prefix, but where you can install package from archives just for your user. I guess the interest is currently too low and the amount of work too much. When I find some time to properly play with Gentoo prefixes I’ll look into how much work it is to just package its scripts for Debian, someone might find it useful.&lt;/p&gt;



&lt;p class=&quot;has-medium-font-size&quot;&gt;&lt;strong&gt;Perl6  / Raku&lt;/strong&gt;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10155&quot; src=&quot;https://jonathancarter.org/files/images/raku-books.jpg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;At the Perl booth I bought a book on getting started with Perl6 (Raku). It’s a thin book and was just €5 so I thought I might as well give it a shot. I made it through a quarter of the book by the end of FOSDEM and it seems I have since misplaced the book. I found quite a few aspects of the language interesting, but it seems that it’s still way to easy to write modern Perl/Raku that would be later considered hard to read. I’ll at least finish up the book if it emerges again.&lt;/p&gt;



&lt;p class=&quot;has-medium-font-size&quot;&gt;&lt;strong&gt;ReactOS running on real hardware&lt;/strong&gt;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10137&quot; src=&quot;https://jonathancarter.org/files/images/fosdem_reactos.jpg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;I met some actual &lt;a href=&quot;https://www.reactos.org/&quot;&gt;ReactOS&lt;/a&gt; developers after being interested in the system for a long time. I usually try out new releases in a virtual machine whenever they make a new release to track its progress. I’ve tried it on some physical machines too, but real hardware support is still very sketchy for ReactOS. It turns out that old Dell laptops can actually run ReactOS, the developers say this is pretty much their reference machine and they’re cheap to buy online. Unfortunately the graphics still only run in vesa mode on this hardware so there’s no hardware acceleration. I got ReactOS installed on an old netbook once but when I installed the Intel graphics drivers for Windows it would just blue screen. I asked them why graphics drivers are so difficult, they said that graphics drivers tend to be written in odd ways because it pokes the system in all kind of weird places where it shouldn’t or where you wouldn’t expect it to.&lt;/p&gt;



&lt;p class=&quot;has-medium-font-size&quot;&gt;&lt;strong&gt;Pinebook at KDE Booth&lt;/strong&gt;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10134&quot; src=&quot;https://jonathancarter.org/files/images/pinebook_fosdem.jpg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;At the KDE booth I saw a &lt;a href=&quot;https://www.pine64.org/pinebook/&quot;&gt;Pinebook&lt;/a&gt; for the first time. I was quite surprised at both how good the build quality is (you could almost mistake it for Dell Latitude variant) and how fast KDE runs on it. It made me want one, but I’m trying to avoid the temptation of buying more hardware that I probably won’t even use all that much.&lt;/p&gt;



&lt;p&gt;I also ended up circling the KDE booth a lot on Sunday in search of &lt;a href=&quot;https://euroquis.nl/&quot;&gt;Adriaan de Groot&lt;/a&gt;, the lead maintainer behind Calamares. &lt;a href=&quot;https://euroquis.nl/kde/2020/02/04/fosdem.html&quot;&gt;He was looking for me too&lt;/a&gt; but FOSDEM is just too darn big.&lt;/p&gt;



&lt;p class=&quot;has-medium-font-size&quot;&gt;&lt;strong&gt;Debian&lt;/strong&gt;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10161&quot; src=&quot;https://jonathancarter.org/files/images/debian_fosdem.jpg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;The Debian booth was busy as always, I tried to get a good shot of it but it was not easy.&lt;/p&gt;



&lt;p class=&quot;has-medium-font-size&quot;&gt;&lt;strong&gt;Debian-Edu&lt;/strong&gt;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large is-resized&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10146&quot; height=&quot;337&quot; src=&quot;https://jonathancarter.org/files/images/debian-edu-fosdem1.jpg&quot; width=&quot;600&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;I came across these young people doing a great job of running a Debian-Edu booth, patiently explaining what Debian-Edu is to people who come by to visit the booth. I have no idea who they are and asked Holger if he knows them, he says they seem to know who he is but he doesn’t know them. They got very engaged in conversations with booth visitors so I decided not to bother them too much at that point and come back to chat later, but FOSDEM gets really busy so I didn’t get the chance.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10147&quot; src=&quot;https://jonathancarter.org/files/images/debian-edu2.jpg&quot; /&gt;Debian-Edu pamphlets&lt;/figure&gt;



&lt;p class=&quot;has-medium-font-size&quot;&gt;&lt;strong&gt;LPI Booth&lt;/strong&gt;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10142&quot; src=&quot;https://jonathancarter.org/files/images/maddog_fosdem.jpg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;I meant to say hi to Jon “maddog” Hall too, but syncing our available free time proved to be tough. I saw him here explaining when he got this t-shirt and why it was significant, I couldn’t really hear so well from the back since the hall was quite noisy at that point. I’ll ask him about that when I talk to him again on our next video interview.&lt;/p&gt;



&lt;p class=&quot;has-medium-font-size&quot;&gt;&lt;strong&gt;Haiku&lt;/strong&gt;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10150&quot; src=&quot;https://jonathancarter.org/files/images/fosdem-haiku.jpg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;Back in the 90’s I had high hopes for BeOS (which was soon bought by Palm Inc as it rose in populatrity), now reborn as a free software operating system known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Haiku_(operating_system)&quot;&gt;Haiku&lt;/a&gt;. I got a Haiku CD that I’ll try on an old laptop that should run it well on.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Nuspell&lt;/strong&gt;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10153&quot; src=&quot;https://jonathancarter.org/files/images/nuspell_help_fosdem.jpg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;The &lt;a href=&quot;https://nuspell.github.io/&quot;&gt;Nuspell&lt;/a&gt; developers ran a booth and was at the MiniDebCamp before FOSDEM too. They are writing a standalone spell checker that can be integrated into other applications so that this work doesn’t have to be re-invented for every app. They are looking for people to help write bindings for Python, Golang and Java. I’m just passing on the message, if you want to help, &lt;a href=&quot;https://nuspell.github.io/&quot;&gt;get in touch with them&lt;/a&gt;.&lt;/p&gt;



&lt;p class=&quot;has-medium-font-size&quot;&gt;&lt;strong&gt;More random stuff&lt;/strong&gt;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10163&quot; src=&quot;https://jonathancarter.org/files/images/msdos-js.jpg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;I noticed this “JavaScript on MS-DOS?” t-shirt which caught my attention. After some quick searching (didn’t try the QR code) I found this &lt;a href=&quot;https://blog.adafruit.com/2019/02/11/dojs-a-new-javascript-interpreter-for-ms-dos-javascript-msdos-retrocomputing-vintagecomputing/&quot;&gt;Adafruit blog entry&lt;/a&gt; which led me to it’s &lt;a href=&quot;https://github.com/SuperIlu/DOjS&quot;&gt;GitHub repository&lt;/a&gt;. I like to play with old computers and I’m kind of curious how this will run on an actual DOS machine (something that I even have!).&lt;/p&gt;



&lt;p&gt; Unrelated, but I also came across &lt;a href=&quot;https://js-dos.com/&quot;&gt;JS-DOS 6.22&lt;/a&gt;, a DOS emulator written in JavaScript. So I guess you could run JavaScript in a DOS emulator running on JavaScript. &lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10169&quot; src=&quot;https://jonathancarter.org/files/images/automotive_linux.jpg&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;I didn’t have time to ask any questions at the Automotive Grade Linux booth, but they had an extensive setup that seemed to emulate the electronics on a Suzuki dashboard.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10213&quot; src=&quot;https://jonathancarter.org/files/images/gmail.jpg&quot; /&gt;“GMail is eating email” poster spotted at FOSDEM.&lt;/figure&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10215&quot; src=&quot;https://jonathancarter.org/files/images/0ad.jpeg&quot; /&gt;The &lt;a href=&quot;https://play0ad.com/&quot;&gt;0AD game&lt;/a&gt; running on various devices.&lt;/figure&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10218&quot; src=&quot;https://jonathancarter.org/files/images/gnome.jpeg&quot; /&gt;GNOME Demos and t-shirts&lt;/figure&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10220&quot; src=&quot;https://jonathancarter.org/files/images/bsd.jpeg&quot; /&gt;Who uses FreeBSD?&lt;/figure&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10222&quot; src=&quot;https://jonathancarter.org/files/images/vlc.jpeg&quot; /&gt;VLC developers are somewhat easy to spot.&lt;br /&gt;&lt;/figure&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-10224&quot; src=&quot;https://jonathancarter.org/files/images/mandrivarelease.jpeg&quot; /&gt;Oh what a co-incidence! A distro release during FOSDEM!&lt;/figure&gt;



&lt;p class=&quot;has-medium-font-size&quot;&gt;&lt;strong&gt;FOSDEM Videos&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;My photos above mostly only cover a part of the K building during the FOSDEM event, a large amount of videos will soon be released covering the talks of the event. &lt;a href=&quot;https://fosdem.org/2020/&quot;&gt;Status of videos is available on this year’s FOSDEM page&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;UPDATE: Videos are now live at &lt;a href=&quot;https://fosdem.org/2020/schedule/events/&quot;&gt;https://fosdem.org/2020/schedule/events/&lt;/a&gt;&lt;/p&gt;
&lt;img alt=&quot;&quot; height=&quot;0&quot; src=&quot;https://analytics.bluemosh.com/piwik.php?idsite=2&amp;amp;rec=1&amp;amp;url=https%3A%2F%2Fjonathancarter.org%2F2020%2F02%2F07%2Frandom-bits-from-fosdem-2020%2F&amp;amp;action_name=Random+bits+from+FOSDEM+2020&amp;amp;urlref=https%3A%2F%2Fjonathancarter.org%2Ffeed%2F&quot; style=&quot;border: 0; width: 0; height: 0;&quot; width=&quot;0&quot; /&gt;</description>
	<pubDate>Fri, 07 Feb 2020 12:42:01 +0000</pubDate>
</item>
<item>
	<title>Podcast Ubuntu Portugal: Ep 76 – O PUP foi, outra vez, à FOSDEM!</title>
	<guid isPermaLink="false">https://podcastubuntuportugal.org/?p=1686</guid>
	<link>https://podcastubuntuportugal.org/e76/</link>
	<description>&lt;p&gt;Episódio 76 – O PUP foi, outra vez, à FOSDEM! Não podíamos deixar de marcar presença na FOSDEM, o segundo melhor evento ligado ao software livre, logo a seguir à Ubucon Europe em Sintra… Já sabem: oiçam, comentem e partilhem!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://fosdem.org&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Apoios&lt;/h3&gt;
&lt;p&gt;Este episódio foi produzido e editado por Alexandre Carrapiço (Thunderclaws Studios – captação, produção, edição, mistura e masterização de som) contacto: thunderclawstudiosPT–arroba–gmail.com.&lt;/p&gt;
&lt;p&gt;Podem apoiar o podcast usando os links de afiliados do Humble Bundle, porque ao usarem esses links para fazer uma compra, uma parte do valor que pagam reverte a favor do Podcast Ubuntu Portugal.&lt;br /&gt;
E podem obter tudo isso com 15 dólares ou diferentes partes dependendo de pagarem 1, ou 8.&lt;br /&gt;
Achamos que isto vale bem mais do que 15 dólares, pelo que se puderem paguem mais um pouco mais visto que têm a opção de pagar o quanto quiserem.&lt;/p&gt;
&lt;p&gt;Se estiverem interessados em outros bundles não listados nas notas usem o link https://www.humblebundle.com/?partner=PUP e vão estar também a apoiar-nos.&lt;/p&gt;
&lt;h3&gt;Atribuição e licenças&lt;/h3&gt;
&lt;p&gt;A música do genérico é: “Won’t see it comin’ (Feat Aequality &amp;amp; N’sorte d’autruche)”, por Alpha Hydrae e está licenciada nos termos da [CC0 1.0 Universal License](https://creativecommons.org/publicdomain/zero/1.0/).&lt;/p&gt;
&lt;p&gt;Este episódio e a imagem utilizada estão licenciados nos termos da licença: &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot;&gt;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&lt;/a&gt;, &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode&quot;&gt;cujo texto integral pode ser lido aqui&lt;/a&gt;. Estamos abertos a licenciar para permitir outros tipos de utilização, &lt;a href=&quot;https://podcastubuntuportugal.org/category/planet/feed/contacto&quot;&gt;contactem-nos&lt;/a&gt; para validação e autorização.&lt;/p&gt;</description>
	<pubDate>Thu, 06 Feb 2020 22:45:19 +0000</pubDate>
        <enclosure url="https://media.blubrry.com/ubuntupt/podcastubuntuportugal.org/episodios/Podcast_Ubuntu_Portugal-Ep76.mp3" length="45279283" type="audio/mpeg"/>
</item>
<item>
	<title>Jonathan Riddell: KUserFeedback 1.0.0</title>
	<guid isPermaLink="false">https://jriddell.org/?p=1139</guid>
	<link>https://jriddell.org/2020/02/05/kuserfeedback-1-0-0/</link>
	<description>&lt;p&gt;KUserFeedback is a framework for collecting user feedback for applications  via telemetry and surveys.&lt;/p&gt;
&lt;p&gt;The library comes with an accompanying control and result UI tool.&lt;/p&gt;
&lt;p&gt;https://download.kde.org/stable/kuserfeedback/&lt;/p&gt;
&lt;p&gt;Signed by &lt;a href=&quot;https://sks-keyservers.net/pks/lookup?op=vindex&amp;amp;search=0xEC94D18F7F05997E&quot;&gt;Jonathan Riddell &amp;lt;jr@jriddell.org&amp;gt; 2D1D5B0588357787DE9EE225EC94D18F7F05997E&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-large&quot; height=&quot;459&quot; src=&quot;https://jriddell.org/wp-content/uploads/2020/01/kuserfeedback-768x459.png&quot; width=&quot;768&quot; /&gt;&lt;/p&gt;
&lt;p&gt;KUserFeedback as it will be used in Plasma 5.18 LTS&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;</description>
	<pubDate>Wed, 05 Feb 2020 14:21:00 +0000</pubDate>
</item>
<item>
	<title>Simos Xenitellis: How to view the files of your LXD container from the host</title>
	<guid isPermaLink="false">https://blog.simos.info/?p=4439</guid>
	<link>https://blog.simos.info/how-to-view-the-files-of-your-lxd-container-from-the-host/</link>
	<description>&lt;p&gt;You are creating LXD containers and you enter a container (&lt;code&gt;lxc shell&lt;/code&gt;, &lt;code&gt;lxc exec&lt;/code&gt; or &lt;code&gt;lxc console&lt;/code&gt;) in order to view or modify the files of that container. But can you access the filesystem of the container &lt;strong&gt;&lt;em&gt;from the host&lt;/em&gt;&lt;/strong&gt;?&lt;/p&gt;



&lt;p&gt;If you use the LXD snap package, LXD mounts the filesystem of the container in a subdirectory under &lt;code&gt;/var/snap/lxd/common/lxd/storage-pools/lxd/containers/&lt;/code&gt;. If you run the following, you will see a list of your containers. Each container can be found in a subdirectory, named after each container name. &lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;$ sudo -i
# ls -l /var/snap/lxd/common/lxd/storage-pools/lxd/containers/&lt;/code&gt;&lt;/pre&gt;



&lt;h3&gt;But the container directories are empty&lt;/h3&gt;



&lt;p&gt;Most likely (if you do not use a &lt;code&gt;dir&lt;/code&gt; storage pool) the container subdirectories are empty. The container is running but the subdirectory is empty?&lt;/p&gt;



&lt;p&gt;This happens due to how &lt;a href=&quot;https://en.wikipedia.org/wiki/Linux_namespaces&quot;&gt;Linux &lt;em&gt;namespaces&lt;/em&gt;&lt;/a&gt; work, and LXD uses them. You would need to &lt;strong&gt;&lt;em&gt;enter&lt;/em&gt;&lt;/strong&gt; the &lt;strong&gt;n&lt;/strong&gt;ame&lt;strong&gt;s&lt;/strong&gt;pace of the LXD service in order to view the container files from the host. Here is how it’s done. With &lt;code&gt;-t&lt;/code&gt; we specify the target, the process ID of the LXD service. With &lt;code&gt;-m&lt;/code&gt; we specify that we want to enter the &lt;strong&gt;&lt;em&gt;mount namespace&lt;/em&gt;&lt;/strong&gt; of this process. &lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;$ &lt;strong&gt;sudo nsenter -t $(cat /var/snap/lxd/common/lxd.pid) -m&lt;/strong&gt;
[sudo] password for myusername:
# &lt;/pre&gt;



&lt;p&gt;On other terminal, let’s launch a container. You will be investigating this container.&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;$ &lt;strong&gt;lxc launch ubuntu:18.04 mycontainer&lt;/strong&gt;
Creating mycontainer
Starting mycontainer
$ &lt;/pre&gt;



&lt;p&gt;Now, let’s look at the files of this container. There’s a &lt;code&gt;backup.yaml&lt;/code&gt;, which is similar to the output of the command &lt;code&gt;lxc config show mycontainer --expanded&lt;/code&gt; but has additional keys for &lt;em&gt;pool&lt;/em&gt;, &lt;em&gt;volume&lt;/em&gt;, &lt;em&gt;snapshots&lt;/em&gt;. This file is important if you lose your LXD database. The &lt;code&gt;metadata.yaml&lt;/code&gt; together with the &lt;code&gt;templates/&lt;/code&gt; directory is the description of how the container was parametarized. In an Ubuntu container, the defaults are used, except for the networking at &lt;code&gt;templates/cloud-init-network.tpl&lt;/code&gt; where it setups a minimal default configuration for &lt;code&gt;eth0&lt;/code&gt; to obtain a DHCP lease from the network. And last is &lt;code&gt;rootfs/&lt;/code&gt;, which is the location of the filesystem of the container. &lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;# &lt;strong&gt;cd /var/snap/lxd/common/lxd/storage-pools/lxd/containers/&lt;/strong&gt;
# &lt;strong&gt;ls -l mycontainer/&lt;/strong&gt;
total 6
-r--------  1 root    root    2952 Feb  3 17:07 backup.yaml
-rw-r--r--  1 root    root    1050 Jan 29 23:55 metadata.yaml
drwxr-xr-x 22 1000000 1000000   22 Jan 29 23:19 rootfs
drwxr-xr-x  2 root    root       7 Jan 29 23:55 templates&lt;/pre&gt;



&lt;p&gt;The &lt;code&gt;rootfs/&lt;/code&gt;directory has UID/GID of 100000/100000. The files inside the root filesystem of the container have IDs that are shifted by 100000 from the typical range 0-65534. That is, the files inside the container will have ID that range from 100000 to 165534. The &lt;em&gt;root&lt;/em&gt; account in the container will have real UID 100000 but will appear as 0 in the container. Here is the list of the root directory of the container, according to the host. &lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;# &lt;strong&gt;ls -l /var/snap/lxd/common/lxd/storage-pools/lxd/containers/mycontainer/rootfs/&lt;/strong&gt;
total 41
drwxr-xr-x  2 1000000 1000000 172 Jan 29 23:17 bin
drwxr-xr-x  2 1000000 1000000   2 Jan 29 23:19 boot
drwxr-xr-x  4 1000000 1000000  15 Jan 29 23:17 dev
drwxr-xr-x 88 1000000 1000000 176 Feb  3 17:07 etc
drwxr-xr-x  3 1000000 1000000   3 Feb  3 17:07 home
drwxr-xr-x 20 1000000 1000000  23 Jan 29 23:16 lib
drwxr-xr-x  2 1000000 1000000   3 Jan 29 23:15 lib64
drwxr-xr-x  2 1000000 1000000   2 Jan 29 23:15 media
drwxr-xr-x  2 1000000 1000000   2 Jan 29 23:15 mnt
drwxr-xr-x  2 1000000 1000000   2 Jan 29 23:15 opt
drwxr-xr-x  2 1000000 1000000   2 Apr 24  2018 proc
drwx------  3 1000000 1000000   5 Feb  3 17:07 root
drwxr-xr-x  4 1000000 1000000   4 Jan 29 23:19 run
drwxr-xr-x  2 1000000 1000000 221 Jan 29 23:17 sbin
drwxr-xr-x  2 1000000 1000000   3 Feb  3 17:07 snap
drwxr-xr-x  2 1000000 1000000   2 Jan 29 23:15 srv
drwxr-xr-x  2 1000000 1000000   2 Apr 24  2018 sys
drwxrwxrwt  8 1000000 1000000   8 Feb  3 17:08 tmp
drwxr-xr-x 10 1000000 1000000  10 Jan 29 23:15 usr
drwxr-xr-x 13 1000000 1000000  15 Jan 29 23:17 var&lt;/pre&gt;



&lt;p&gt;If we create a file in the container’s rootfs &lt;strong&gt;&lt;em&gt;from the host&lt;/em&gt;&lt;/strong&gt;, how will it look from within the container? Let’s try.&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;root@mycomputer:/var/snap/lxd/common/lxd/storage-pools/lxd/containers/mycontainer/rootfs# &lt;strong&gt;touch mytest.txt&lt;/strong&gt;&lt;/pre&gt;



&lt;p&gt;Then, from the container we run the following. The file with invalid UID and GID per container, appears to have UID &lt;code&gt;nobody&lt;/code&gt; and GID &lt;code&gt;nogroup&lt;/code&gt;. That is, if you notice in a container too many files owned by &lt;code&gt;nobody&lt;/code&gt;, then there is a chance that something went bad with the IDs and requires investigation. &lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;$ &lt;strong&gt;lxc shell mycontainer&lt;/strong&gt;
mesg: ttyname failed: No such device
root@mycontainer:~# &lt;strong&gt;ls -l /mytest.txt &lt;/strong&gt;
-rw-r--r-- 1 nobody nogroup 0 Feb  3 15:32 /mytest.txt
root@mycontainer:~# &lt;/pre&gt;



&lt;h2&gt;Troubleshooting&lt;/h2&gt;



&lt;h3&gt;Error: I did &lt;code&gt;nsenter&lt;/code&gt; but still cannot see any files?&lt;/h3&gt;



&lt;p&gt;If you rebooted your LXD computer and the container has been set not to autostart after boot, then LXD optimizes here and does not mount the container’s rootfs. You can either start the container (so LXD performs the mount for you), or mount manually. &lt;/p&gt;



&lt;p&gt;To mount manually a container called &lt;code&gt;mycontainer2&lt;/code&gt;, you would run the following&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;# &lt;strong&gt;mount -t zfs lxd/containers/mycontainer2 /var/snap/lxd/common/lxd/storage-pools/lxd/containers/mycontainer2&lt;/strong&gt; 
# &lt;/pre&gt;



&lt;h2&gt;Conclusion&lt;/h2&gt;



&lt;p&gt;We have seen how to enter the &lt;code&gt;mount namespace&lt;/code&gt; of the LXD service, have a look at the files of the containers, and also manually perform this &lt;em&gt;mount&lt;/em&gt;, if needed.&lt;/p&gt;
&lt;div class=&quot;saboxplugin-wrap&quot;&gt;&lt;div class=&quot;saboxplugin-gravatar&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;avatar avatar-100 photo&quot; height=&quot;100&quot; src=&quot;https://secure.gravatar.com/avatar/5c04c6b5f513d926ea9d77782a3843a1?s=100&amp;amp;d=wavatar&amp;amp;r=g&quot; width=&quot;100&quot; /&gt;&lt;/div&gt;&lt;div class=&quot;saboxplugin-authorname&quot;&gt;&lt;a class=&quot;vcard author&quot; href=&quot;https://blog.simos.info/author/simos/&quot; rel=&quot;author&quot;&gt;&lt;span class=&quot;fn&quot;&gt;Simos Xenitellis&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;saboxplugin-desc&quot;&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;saboxplugin-web &quot;&gt;&lt;a href=&quot;https://blog.simos.info/&quot; target=&quot;_self&quot;&gt;blog.simos.info/&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 03 Feb 2020 15:54:56 +0000</pubDate>
</item>
<item>
	<title>Ubuntu Studio: Ubuntu Studio 20.04 LTS Wallpaper Contest</title>
	<guid isPermaLink="false">http://ubuntustudio.org/?p=1843</guid>
	<link>http://ubuntustudio.org/2020/02/ubuntu-studio-20-04-lts-wallpaper-contest/</link>
	<description>As we begin getting closer to the next release date of Ubuntu Studio 20.04 LTS, now is a great time to show what the best of the Ubuntu Studio Community has to offer! We know that many of our users are graphic artists and photographers and we would like to... &lt;a class=&quot;moretag&quot; href=&quot;http://ubuntustudio.org/2020/02/ubuntu-studio-20-04-lts-wallpaper-contest/&quot;&gt;Continue reading&lt;/a&gt;</description>
	<pubDate>Sat, 01 Feb 2020 20:45:58 +0000</pubDate>
</item>
<item>
	<title>Full Circle Magazine: Full Circle Magazine #153</title>
	<guid isPermaLink="false">https://fullcirclemagazine.org/?p=27836</guid>
	<link>https://fullcirclemagazine.org/2020/01/31/full-circle-magazine-153/</link>
	<description>&lt;p&gt;&lt;a href=&quot;https://fullcirclemagazine.org/issue-153/&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter size-medium wp-image-27837&quot; data-attachment-id=&quot;27837&quot; data-comments-opened=&quot;1&quot; data-image-description=&quot;&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;Created with GIMP&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;Created with GIMP&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;&quot; data-large-file=&quot;https://i2.wp.com/fullcirclemagazine.org/wp-content/uploads/2020/01/FCM153-cover.jpg?fit=640%2C452&amp;amp;ssl=1&quot; data-medium-file=&quot;https://i2.wp.com/fullcirclemagazine.org/wp-content/uploads/2020/01/FCM153-cover.jpg?fit=300%2C212&amp;amp;ssl=1&quot; data-orig-file=&quot;https://i2.wp.com/fullcirclemagazine.org/wp-content/uploads/2020/01/FCM153-cover.jpg?fit=1398%2C987&amp;amp;ssl=1&quot; data-orig-size=&quot;1398,987&quot; data-permalink=&quot;https://fullcirclemagazine.org/2020/01/31/full-circle-magazine-153/created-with-gimp-15/&quot; data-recalc-dims=&quot;1&quot; height=&quot;212&quot; src=&quot;https://i2.wp.com/fullcirclemagazine.org/wp-content/uploads/2020/01/FCM153-cover.jpg?resize=300%2C212&amp;amp;ssl=1&quot; width=&quot;300&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This month:&lt;br /&gt;
* Command &amp;amp; Conquer&lt;br /&gt;
* How-To : Python, Test Linux in VirtualBox, and Darktable&lt;br /&gt;
* Graphics : Inkscape&lt;br /&gt;
* Graphics : Krita for Old Photos&lt;br /&gt;
* Linux Loopback: Project Trident and other BSD options&lt;br /&gt;
* Everyday Ubuntu&lt;br /&gt;
* Interview : FuryBSD Developer&lt;br /&gt;
* Review : mtPaint&lt;br /&gt;
* Ubuntu Games : Stygian&lt;br /&gt;
plus: News, My Opinion, The Daily Waddle, Q&amp;amp;A, and more.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;&lt;strong&gt;Get it while it’s hot!&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fullcirclemagazine.org/issue-153/&quot;&gt;https://fullcirclemagazine.org/issue-153/&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Fri, 31 Jan 2020 20:40:36 +0000</pubDate>
</item>
<item>
	<title>Sergio Schvezov: Setup LXD with Ubuntu's ZFS on root</title>
	<guid isPermaLink="true">http://blog.sergiusens.org/posts/setup-lxd-with-ubuntu-20.04-with-zfs-on-root/</guid>
	<link>http://blog.sergiusens.org/posts/setup-lxd-with-ubuntu-20.04-with-zfs-on-root/</link>
	<description>I want to have a head start to make sure Ubuntu 20.04 works flawlessly by the time it releases. I am however making some bold moves, like setting up ZFS on Root during install which is currently marked as EXPERIMENTAL. TODO zfs on root screenshot   After the installation is done, we can check that the installer creates two pools: $ zpool list NAME SIZE ALLOC FREE CKPOINT EXPANDSZ FRAG CAP DEDUP HEALTH ALTROOT bpool 1,88G 178M 1,70G - - 0% 9% 1.</description>
	<pubDate>Wed, 29 Jan 2020 16:29:02 +0000</pubDate>
</item>
<item>
	<title>Elizabeth K. Joseph: Our upcoming Webinar on Security with Ubuntu and IBM Z</title>
	<guid isPermaLink="false">http://princessleia.com/journal/?p=15174</guid>
	<link>https://princessleia.com/journal/2020/01/webinar-security-with-ubuntu-and-ibm-z/</link>
	<description>&lt;p&gt;My first interaction with the Ubuntu community was in March of 2005 when I put Ubuntu on an old Dell laptop and signed up for the Ubuntu Forums. This was just a few years into my tech career and I was mostly a Linux hobbyist, with a handful of junior systems administrator jobs on the side to do things like racking servers and installing Debian (with CDs!). Many of you with me on this journey have seen my role grow in the Ubuntu community with Debian packaging, local involvement with events and non-profits, participation in the Ubuntu Developer Summits, membership in the Ubuntu Community Council, and work on several Ubuntu books, from technical consultation to becoming an author on &lt;a href=&quot;http://www.informit.com/store/official-ubuntu-book-9780134513423&quot;&gt;The Official Ubuntu Book&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These days I’ve taken my 15+ years of Linux Systems Administration and open source experience down a slightly different path: Working on Linux on the mainframe (IBM Z). The mainframe wasn’t on my radar a year ago, but as I got familiar with the technical aspects, the modernization efforts to incorporate DevOps principles, and the burgeoning open source efforts, I became fascinated with the platform.&lt;/p&gt;
&lt;p&gt;As a result, I joined IBM last year to share my discoveries with the broader systems administration and developer communities. Ubuntu itself got on board with this mainframe journey with official support for the architecture (s390x) in Ubuntu 16.04, and today there’s a whole blog that gets into the technical details of features specific to Ubuntu on the mainframe: &lt;a href=&quot;http://ubuntu-on-big-iron.blogspot.com/&quot;&gt;Ubuntu on Big Iron&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I’m excited to share that I’ll be joining the author of the &lt;em&gt;Ubuntu on Big Iron&lt;/em&gt; blog, Frank Heimes, live on February 6th for a webinar titled &lt;a href=&quot;https://www.brighttalk.com/webcast/6793/383692&quot;&gt;How to protect your data, applications, cryptography and OS – 100% of the time&lt;/a&gt;. I’ll be doing an introduction to the IBM Z architecture (including cool hardware pictures!) and general security topics around Linux on Z and LinuxONE.&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;a href=&quot;https://princessleia.com/images/journalpics/012020/ubuntu_on_z_chart_for_webinar.png&quot;&gt;&lt;img src=&quot;https://princessleia.com/images/journalpics/012020/ubuntu_on_z_chart_for_webinar_sm.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;I’ll then hand the reins over to Frank to get into the details of the work Canonical has done to take advantage of hardware cryptography functions and secure everything from network ports to the software itself with automatic security updates.&lt;/p&gt;
&lt;p&gt;What I find most interesting about all of this work is how much open source is woven in. You’re not using proprietary tooling on the Linux level for things like encryption. As you’ll see from the webinar, on a low level Linux on Z uses dm-crypt and in-kernel crypto algorithms. At the user level, TLS/SSL is all implemented with OpenSSL and libcrypto. Even the libica crypto library is open source.&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;https://princessleia.com/images/journalpics/012020/ubuntu-ibm-webinar.jpg&quot; /&gt;&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;https://princessleia.com/images/journalpics/012020/frank_lyz_feb_6_webinar.jpg&quot; /&gt;&lt;/div&gt;
&lt;p&gt;You can sign up for the webinar here, and you’ll have the option to watch it live or on-demand replays: &lt;a href=&quot;https://www.brighttalk.com/webcast/6793/383692&quot;&gt;How to protect your data, applications, cryptography and OS – 100% of the time&lt;/a&gt; and read the blog post from the Ubuntu blog &lt;a href=&quot;https://ubuntu.com/blog/how-to-protect-your-data-applications-cryptography-and-os-100-of-the-time&quot;&gt;here&lt;/a&gt;. We’re aiming to make this technical and fun, so I hope you’ll join us!&lt;/p&gt;</description>
	<pubDate>Tue, 28 Jan 2020 18:26:22 +0000</pubDate>
</item>
<item>
	<title>Matthias Klumpp: A big AppStream status update</title>
	<guid isPermaLink="false">https://blog.tenstral.net/?p=1885</guid>
	<link>https://blog.tenstral.net/2020/01/a-big-appstream-status-update.html</link>
	<description>&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-1891&quot; src=&quot;https://blog.tenstral.net/wp-content/uploads/2020/01/appstream-logo.png&quot; style=&quot;width: 136px; float: right;&quot; /&gt;It has been a while since the last AppStream-related post (or any post for that matter) on this blog, but of course development didn’t stand still all this time. Quite the opposite – it was just me writing less about it, which actually is a problem as some of the new features are much less visible. People don’t seem to re-read the specification constantly for some reason &lt;img alt=&quot;😉&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f609.png&quot; style=&quot;height: 1em;&quot; /&gt;. As a consequence, we have pretty good adoption of features I blogged about (like fonts support), but much of the new stuff is still not widely used. Also, I had to make a promise to several people to blog about the new changes more often, and I am definitely planning to do so. So, expect posts about AppStream stuff a bit more often now.&lt;/p&gt;



&lt;p&gt;What actually was AppStream again? The &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/&quot;&gt;AppStream Freedesktop Specification&lt;/a&gt; describes two XML metadata formats to describe software components: One for software developers to describe their software, and one for distributors and software repositories to describe (possibly curated) collections of software. The format written by upstream projects is called &lt;em&gt;Metainfo&lt;/em&gt; and encompasses any data installed in &lt;code&gt;/usr/share/metainfo/&lt;/code&gt;, while the distribution format is just called &lt;em&gt;Collection Metadata&lt;/em&gt;. A &lt;a href=&quot;https://github.com/ximion/appstream&quot;&gt;reference implementation&lt;/a&gt; of the format and related features written in C/GLib exists as well as Qt bindings for it, so the data can be easily accessed by projects which need it.&lt;/p&gt;



&lt;p&gt;The software metadata contains a &lt;strong&gt;unique ID&lt;/strong&gt; for the respective software so it can be identified across software repositories. For example the VLC Mediaplayer is known with the ID &lt;code&gt;org.videolan.vlc&lt;/code&gt; in every software repository, no matter whether it’s the package archives of Debian, Fedora, Ubuntu or a Flatpak repository. The metadata also contains translatable names, summaries, descriptions, release information etc. as well as a type for the software. In general, any information about a software component that is in some form relevant to displaying it in software centers is or can be present in AppStream. The newest revisions of the specification also provide a lot of technical data for systems to make the right choices on behalf of the user, e.g. &lt;a href=&quot;https://fwupd.org/&quot;&gt;Fwupd&lt;/a&gt; uses AppStream data to describe compatible devices for a certain firmware, or the mediatype information in AppStream metadata can be used to install applications for an unknown filetype easier. Information AppStream does not contain is data the software bundling systems are responsible for. So mechanistic data how to build a software component or how exactly to install it is out of scope.&lt;/p&gt;



&lt;p&gt;So, now let’s finally get to the new AppStream features since last time I talked about it – which was almost two years ago, so quite a lot of stuff has accumulated!&lt;/p&gt;



&lt;h2&gt;Specification Changes/Additions&lt;/h2&gt;



&lt;h3&gt;Web Application component type&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.11.7)&lt;/em&gt; A new component type &lt;code&gt;web-application&lt;/code&gt; has been introduced to describe web applications. A web application can for example be GMail, YouTube, Twitter, etc. launched by the browser in a special mode with less chrome. Fundamentally though it is a simple web link. Therefore, web apps need a &lt;code&gt;launchable&lt;/code&gt; tag of type &lt;code&gt;url&lt;/code&gt; to specify an URL used to launch them. Refer to the &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/sect-Metadata-WebApplication.html&quot;&gt;specification&lt;/a&gt; for details. Here is a (shortened) example metainfo file for the &lt;a href=&quot;https://about.riot.im/&quot;&gt;Riot Matrix client&lt;/a&gt; web app:&lt;/p&gt;


&lt;pre class=&quot;brush: xml; gutter: false; title: ; notranslate&quot;&gt;&amp;lt;component type=&quot;web-application&quot;&amp;gt;
  &amp;lt;id&amp;gt;im.riot.webapp&amp;lt;/id&amp;gt;
  &amp;lt;metadata_license&amp;gt;FSFAP&amp;lt;/metadata_license&amp;gt;
  &amp;lt;project_license&amp;gt;Apache-2.0&amp;lt;/project_license&amp;gt;
  &amp;lt;name&amp;gt;Riot.im&amp;lt;/name&amp;gt;
  &amp;lt;summary&amp;gt;A glossy Matrix collaboration client for the web&amp;lt;/summary&amp;gt;
  &amp;lt;description&amp;gt;
    &amp;lt;p&amp;gt;Communicate with your team[...]&amp;lt;/p&amp;gt;
  &amp;lt;/description&amp;gt;
  &amp;lt;icon type=&quot;stock&quot;&amp;gt;im.riot.webapp&amp;lt;/icon&amp;gt;
  &amp;lt;categories&amp;gt;
    &amp;lt;category&amp;gt;Network&amp;lt;/category&amp;gt;
    &amp;lt;category&amp;gt;Chat&amp;lt;/category&amp;gt;
    &amp;lt;category&amp;gt;VideoConference&amp;lt;/category&amp;gt;
  &amp;lt;/categories&amp;gt;
  &amp;lt;url type=&quot;homepage&quot;&amp;gt;https://riot.im/&amp;lt;/url&amp;gt;
  &amp;lt;launchable type=&quot;url&quot;&amp;gt;https://riot.im/app&amp;lt;/launchable&amp;gt;
&amp;lt;/component&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;Repository component type&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.1)&lt;/em&gt; The &lt;code&gt;repository&lt;/code&gt; component type describes a repository of downloadable content (usually other software) to be added to the system. Once a component of this type is installed, the user has access to the new content. In case the repository contains proprietary software, this component type pairs well with the agreements section.&lt;/p&gt;



&lt;p&gt;This component type can be used to provide easy installation of e.g. trusted Debian or Fedora repositories, but also can be used for other downloadable content. Refer to the &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/sect-Metadata-Repository.html&quot;&gt;specification entry&lt;/a&gt; for more information.&lt;/p&gt;



&lt;h3&gt;Operating System component type&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.5)&lt;/em&gt; It makes sense for the operating system itself to be represented in the AppStream metadata catalog. Information about it can be used by software centers to display information about the current OS release and also to notify about possible system upgrades. It also serves as a component the software center can use to attribute package updates to that do not have AppStream metadata. The &lt;code&gt;operating-system&lt;/code&gt; component type was designed for this and you can find more information about it &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/sect-Metadata-OS.html&quot;&gt;in the specification documentation&lt;/a&gt;.&lt;/p&gt;



&lt;h3&gt;Icon Theme component type&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.8)&lt;/em&gt; While styles, themes, desktop widgets etc. are already covered in AppStream via the &lt;code&gt;addon&lt;/code&gt; component type as they are specific to the toolkit and desktop environment, there is one exception: Icon themes are &lt;a href=&quot;https://specifications.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html&quot;&gt;described by a Freedesktop specification&lt;/a&gt; and (usually) work independent of the desktop environment. Because of that and on request of desktop environment developers, a new &lt;code&gt;icon-theme&lt;/code&gt; component type was introduced to describe icon themes specifically. From the data I see in the wild and in Debian specifically, this component type appears to be very underutilized. So if you are an icon theme developer, consider adding a metainfo file to make the theme show up in software centers! You can find a full description of this component type &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/sect-Metadata-IconTheme.html&quot;&gt;in the specification&lt;/a&gt;.&lt;/p&gt;



&lt;h3&gt;Runtime component type&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.10)&lt;/em&gt; A &lt;code&gt;runtime&lt;/code&gt; is mainly known in the context of &lt;a href=&quot;https://flatpak.org/&quot;&gt;Flatpak&lt;/a&gt; bundles, but it actually is a more universal concept. A runtime describes a defined collection of software components used to run other applications. To represent runtimes in the software catalog, the new AppStream component type was introduced in the specification, but it has been used by Flatpak for a while already as a nonstandard extension.&lt;/p&gt;



&lt;h3&gt;Release types&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.0)&lt;/em&gt; Not all software releases are created equal. Some may be for general use, others may be development releases on the way to becoming an actual final release. In order to reflect that, AppStream introduced at &lt;code&gt;type&lt;/code&gt; property to the &lt;code&gt;release&lt;/code&gt; tag in a &lt;code&gt;releases&lt;/code&gt; block, which can be either set to &lt;code&gt;stable&lt;/code&gt; or &lt;code&gt;development&lt;/code&gt;. Software centers can then decide to hide or show development releases.&lt;/p&gt;



&lt;h3&gt;End-of-life date for releases&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.5)&lt;/em&gt; Some software releases have an end-of-life date from which onward they will no longer be supported by the developers. This is especially true for Linux distributions which are described in a &lt;code&gt;operating-system&lt;/code&gt; component. To define an end-of-life date, a release in AppStream can now have a &lt;code&gt;date_eol&lt;/code&gt; property using the same syntax as a &lt;code&gt;date&lt;/code&gt; property but defining the date when the release will no longer be supported (refer to the &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/chap-Metadata.html#tag-releases&quot;&gt;releases tag definition&lt;/a&gt;).&lt;/p&gt;



&lt;h3&gt;Details URL for releases&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.5)&lt;/em&gt; The release descriptions are short, text-only summaries of a release, usually only consisting of a few bullet points. They are intended to give users a fast, quick to read overview of a new release that can be displayed directly in the software updater. But sometimes you want more than that. Maybe you are an application like Blender or Krita and have prepared an extensive website with an in-depth overview, images and videos describing the new release. For these cases, AppStream now permits an &lt;code&gt;url&lt;/code&gt; tag in a &lt;code&gt;release&lt;/code&gt; tag pointing to a website that contains more information about a particular release.&lt;/p&gt;



&lt;h3&gt;Release artifacts&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.6)&lt;/em&gt; AppStream limited release descriptions to their version numbers and release notes for a while, without linking the actual released artifacts. This was intentional, as any information how to get or install software should come from the bundling/packaging system that Collection Metadata was generated for.&lt;/p&gt;



&lt;p&gt;But the AppStream metadata has outgrown this more narrowly defined purpose and has since been used for a lot more things, like generating HTML download pages for software, making it the canonical source for all the software metadata in some projects. Coming from Richard Hughes awesome &lt;a href=&quot;https://fwupd.org/&quot;&gt;Fwupd&lt;/a&gt; project was also the need to link to firmware binaries from an AppStream metadata file, as the LVFS/Fwupd use AppStream metadata exclusively to provide metadata for firmware. Therefore, the specification was extended with an artifacts tag for releases, to link to the actual release binaries and tarballs. This replaced the previous makeshift “release location” tag.&lt;/p&gt;



&lt;p&gt;Release artifacts always have to link to releases directly, so the releases can be acquired by machines immediately and without human intervention. A release can have a &lt;code&gt;type&lt;/code&gt; of &lt;code&gt;source&lt;/code&gt; or &lt;code&gt;binary&lt;/code&gt;, indicating whether a source tarball or binary artifact is linked. Each binary release can also have an associated platform triplet for Linux systems, an identifier for firmware, or any other identifier for a platform. Furthermore, we permit &lt;code&gt;sha256&lt;/code&gt; and &lt;code&gt;blake2&lt;/code&gt; checksums for the release artifacts, as well as specifying sizes. Take a look at the example below, or read the &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/chap-Metadata.html#tag-releases&quot;&gt;specification for details&lt;/a&gt;.&lt;/p&gt;


&lt;pre class=&quot;brush: xml; gutter: false; title: ; notranslate&quot;&gt;&amp;lt;releases&amp;gt;
​  &amp;lt;release version=&quot;1.2&quot; date=&quot;2014-04-12&quot; urgency=&quot;high&quot;&amp;gt;
​    [...]
​    &amp;lt;artifacts&amp;gt;
​      &amp;lt;artifact type=&quot;binary&quot; platform=&quot;x86_64-linux-gnu&quot;&amp;gt;
​        &amp;lt;location&amp;gt;https://example.com/mytarball.bin.tar.xz&amp;lt;/location&amp;gt;
​        &amp;lt;checksum type=&quot;blake2&quot;&amp;gt;852ed4aff45e1a9437fe4774b8997e4edfd31b7db2e79b8866832c4ba0ac1ebb7ca96cd7f95da92d8299da8b2b96ba480f661c614efd1069cf13a35191a8ebf1&amp;lt;/checksum&amp;gt;
​        &amp;lt;size type=&quot;download&quot;&amp;gt;12345678&amp;lt;/size&amp;gt;
​        &amp;lt;size type=&quot;installed&quot;&amp;gt;42424242&amp;lt;/size&amp;gt;
​      &amp;lt;/artifact&amp;gt;
​      &amp;lt;artifact type=&quot;source&quot;&amp;gt;
​        &amp;lt;location&amp;gt;https://example.com/mytarball.tar.xz&amp;lt;/location&amp;gt;
​        [...]
​      &amp;lt;/artifact&amp;gt;
​    &amp;lt;/artifacts&amp;gt;
​  &amp;lt;/release&amp;gt;
​&amp;lt;/releases&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;Issue listings for releases&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.9)&lt;/em&gt; Software releases often fix issues, sometimes security relevant ones that have a &lt;a href=&quot;https://cve.mitre.org/&quot;&gt;CVE&lt;/a&gt; ID. AppStream provides a machine-readable way to figure out which components on your system are currently vulnerable to which &lt;a href=&quot;https://cve.mitre.org/&quot;&gt;CVE&lt;/a&gt; registered issues. Additionally, a &lt;code&gt;release&lt;/code&gt; tag can also just contain references to any normal resolved bugs, via bugtracker URLs. Refer to the &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/chap-Metadata.html#tag-releases&quot;&gt;specification for details&lt;/a&gt;. Example for the &lt;code&gt;issues&lt;/code&gt; tag in AppStream Metainfo files:&lt;/p&gt;


&lt;pre class=&quot;brush: xml; gutter: false; title: ; notranslate&quot;&gt;&amp;lt;issues&amp;gt;
​  &amp;lt;issue url=&quot;https://example.com/bugzilla/12345&quot;&amp;gt;bz#12345&amp;lt;/issue&amp;gt;
​  &amp;lt;issue type=&quot;cve&quot;&amp;gt;CVE-2019-123456&amp;lt;/issue&amp;gt;
​&amp;lt;/issues&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;Requires and Recommends relations&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.0)&lt;/em&gt; Sometimes software has certain requirements only justified by some systems, and sometimes it might recommend specific things on the system it will run on in order to run at full performance.&lt;/p&gt;



&lt;p&gt;I was against adding relations to AppStream for quite a while, as doing so would add a more “functional” dimension to it, impacting how and when software is installed, as opposed to being only descriptive and not essential to be read in order to install software correctly. However, AppStream has pretty much outgrown its initial narrow scope and adding relation information to Metainfo files was a natural step to take. For Fwupd it was an essential step, as Fwupd firmware might have certain hard requirements on the system in order to be installed properly. And AppStream requirements and recommendations go way beyond what regular package dependencies could do in Linux distributions so far.&lt;/p&gt;



&lt;p&gt;Requirements and recommendations can be on other software components via their &lt;code&gt;id&lt;/code&gt;, on a &lt;code&gt;modalias&lt;/code&gt;, specific &lt;code&gt;kernel&lt;/code&gt; version, existing &lt;code&gt;firmware&lt;/code&gt; version or for making system &lt;code&gt;memory&lt;/code&gt; recommendations. See the &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/chap-Metadata.html#tag-requires-recommends&quot;&gt;specification&lt;/a&gt; for details on how to use this. Example:&lt;/p&gt;


&lt;pre class=&quot;brush: xml; gutter: false; title: ; notranslate&quot;&gt;&amp;lt;requires&amp;gt;
  &amp;lt;id version=&quot;1.0&quot; compare=&quot;ge&quot;&amp;gt;org.example.MySoftware&amp;lt;/id&amp;gt;
​  &amp;lt;kernel version=&quot;5.6&quot; compare=&quot;ge&quot;&amp;gt;Linux&amp;lt;/kernel&amp;gt;
​&amp;lt;/requires&amp;gt;
&amp;lt;recommends&amp;gt;
​  &amp;lt;memory&amp;gt;2048&amp;lt;/memory&amp;gt; &amp;lt;!-- recommend at least 2GiB of memory --&amp;gt;
​&amp;lt;/recommends&amp;gt;
&lt;/pre&gt;


&lt;p&gt;This means that AppStream currently supported &lt;code&gt;provides&lt;/code&gt;, &lt;code&gt;suggests&lt;/code&gt;, &lt;code&gt;recommends&lt;/code&gt; and &lt;code&gt;requires&lt;/code&gt; relations to refer to other software components or system specifications.&lt;/p&gt;



&lt;h3&gt;Agreements&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.1)&lt;/em&gt; The new &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/chap-Metadata.html#tag-agreement&quot;&gt;agreement&lt;/a&gt; section in AppStream Metainfo files was added to make it easier for software to be compliant to the EU &lt;a href=&quot;https://en.wikipedia.org/wiki/General_Data_Protection_Regulation&quot;&gt;GDPR&lt;/a&gt;. It has since been expanded to be used for EULAs as well, which was a request coming (to no surprise) from people having to deal with corporate and proprietary software components. An agreement consists of individual sections with headers and descriptive texts and should – depending on the type – be shown to the user upon installation or first use of a software component. It can also be very useful in case the software component is a firmware or driver (which often is proprietary – and companies really love their legal documents and EULAs).&lt;/p&gt;



&lt;h3&gt;Contact URL type&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.4)&lt;/em&gt; The contact URL type can be used to simply set a link back to the developer of the software component. This may be an URL to a contact form, their website or even a &lt;code&gt;mailto:&lt;/code&gt; link. See the specification for &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/chap-Metadata.html#tag-url&quot;&gt;all URL types&lt;/a&gt; AppStream supports.&lt;/p&gt;



&lt;h3&gt;Videos as software screenshots&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.8)&lt;/em&gt; This one was quite long in the making – the &lt;a href=&quot;https://github.com/ximion/appstream/issues/175&quot;&gt;feature request&lt;/a&gt; for videos as screenshots had been filed in early 2018. I was a bit wary about adding video, as that lets you run into a codec and container hell as well as requiring software centers to support video and potentially requiring the &lt;a href=&quot;https://github.com/ximion/appstream-generator&quot;&gt;appstream-generator&lt;/a&gt; to get into video transcoding, which I really wanted to avoid. Alternatively, we would have had to make AppStream add support for multiple likely proprietary video hosting platforms, which certainly would have been a bad idea on every level. Additionally, I didn’t want to have people add really long introductory videos to their applications.&lt;/p&gt;



&lt;p&gt;Ultimately, the problem was solved by simplification and reduction: People can add a video as “screenshot” to their software components, as long as it isn’t the first screenshot in the list. We only permit the &lt;code&gt;vp9&lt;/code&gt; and &lt;code&gt;av1&lt;/code&gt; codecs and the &lt;code&gt;webm&lt;/code&gt; and &lt;code&gt;matroska&lt;/code&gt; container formats. Developers should expect the audio of their videos to be muted, but if audio is present, the &lt;code&gt;opus&lt;/code&gt; codec must be used. Videos will be size-limited, for example Debian imposes a 14MiB limit on video filesize. The &lt;a href=&quot;https://github.com/ximion/appstream-generator&quot;&gt;appstream-generator&lt;/a&gt; will check for all of these requirements and reject a video in case it doesn’t pass one of the checks. This should make implementing videos in software centers easy, and also provide the safety guarantees and flexibility we want.&lt;/p&gt;



&lt;p&gt;So far we have not seen many videos used for application screenshots. As always, check the &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/chap-Metadata.html#tag-screenshots&quot;&gt;specification for details&lt;/a&gt; on videos in AppStream. Example use in a &lt;code&gt;screenshots&lt;/code&gt; tag:&lt;/p&gt;


&lt;pre class=&quot;brush: xml; gutter: false; title: ; notranslate&quot;&gt;​&amp;lt;screenshots&amp;gt;
​  &amp;lt;screenshot type=&quot;default&quot;&amp;gt;
​    &amp;lt;image type=&quot;source&quot; width=&quot;1600&quot; height=&quot;900&quot;&amp;gt;https://example.com/foobar/screenshot-1.png&amp;lt;/image&amp;gt;
​  &amp;lt;/screenshot&amp;gt;
​  &amp;lt;screenshot&amp;gt;
​    &amp;lt;video codec=&quot;av1&quot; width=&quot;1600&quot; height=&quot;900&quot;&amp;gt;https://example.com/foobar/screencast.mkv&amp;lt;/video&amp;gt;
​  &amp;lt;/screenshot&amp;gt;
​ &amp;lt;/screenshots&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;Emphasis and code markup in descriptions&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.8)&lt;/em&gt; It has long been requested to have a little bit more expressive markup in descriptions in AppStream, at least more than just lists and paragraphs. That has not happened for a while, as it would be a breaking change to all existing AppStream parsers. Additionally, I didn’t want to let AppStream descriptions become long, general-purpose “how to use this software” documents. They are intended to give a quick overview of the software, and not comprehensive information. However ultimately we decided to add support for at least two more elements to format text: Inline &lt;code&gt;code&lt;/code&gt; elements as well as &lt;code&gt;em&lt;/code&gt; emphases. There may be more to come, but that’s it for now. This change was made about half a year ago, and people are currently advised to use the new styling tags sparingly, as otherwise their software descriptions may look odd when parsed with older AppStream implementation versions.&lt;/p&gt;



&lt;h3&gt;Remove-component merge mode&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.4)&lt;/em&gt; This addition is specified for the Collection Metadata only, as it affects curation. Since AppStream metadata is in one big pool for Linux distributions, and distributions like Debian freeze their repositories, it sometimes is required to merge metadata from different sources on the client system instead of generating it in the right format on the server. This can also be used for curation by vendors of software centers. In order to edit preexisting metadata, special &lt;code&gt;merge&lt;/code&gt; components are created. These can permit appending data, replacing data etc. in existing components in the metadata pool. The one thing that was missing was a mode that permitted the complete removal of a component. This was added via a special &lt;code&gt;remove-component&lt;/code&gt; merge mode. This mode can be used to pull metadata from a software center’s catalog immediately even if the original metadata was frozen in place in a package repository. This can be very useful in case an inappropriate software component is found in the repository of a Linux distribution post-release. Refer &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/chap-CollectionData.html#spec-asxml-tags&quot;&gt;to the specification&lt;/a&gt; for details.&lt;/p&gt;



&lt;h3&gt;Custom metadata&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.1)&lt;/em&gt; The AppStream specification is extensive, but it can not fit every single special usecase. Sometimes requests come up that can’t be generalized easily, and occasionally it is useful to prototype a feature first to see if it is actually used before adding it to the specification properly. For that purpose, the &lt;code&gt;custom&lt;/code&gt; tag exists. The tag defines a simple key-value structure that people can use to inject arbitrary metadata into an AppStream metainfo file. The libappstream library will read this tag by default, providing easy access to the underlying data. Thereby, the data can easily be used by custom applications designed to parse it. It is important to note that the appstream-generator tool will by default strip the custom data from files unless it has been whitelisted explicitly. That way, the creator of a metadata collection for a (package) repository has some control over what data ends up in the resulting Collection Metadata file. See &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/chap-Metadata.html#tag-custom&quot;&gt;the specification&lt;/a&gt; for more details on this tag.&lt;/p&gt;



&lt;h3&gt;Miscellaneous additions&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.9)&lt;/em&gt; Additionally to JPEG and PNG, WebP images are now permitted for screenshots in Metainfo files. These images will – like every image – be converted to PNG images by the tool generating Collection Metadata for a repository though.&lt;/p&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.10)&lt;/em&gt; The specification now contains a new &lt;code&gt;name_variant_suffix&lt;/code&gt; tag, which is a translatable string that software lists may append to the &lt;code&gt;name&lt;/code&gt; of a component in case there are multiple components with the same name. This is intended to be primarily used for firmware in Fwupd, where firmware may have the same name but actually be slightly different (e.g. region-specific). In these cases, the additional name suffix is shown to make it easier to distinguish the different components in case multiple are present.&lt;/p&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.10)&lt;/em&gt; AppStream has an URI format to install applications directly from webpages via the &lt;code&gt;appstream:&lt;/code&gt; scheme. This URI scheme now permits alternative IDs for the same component, in case it switched its ID in the past. Take a look at the specification for &lt;a href=&quot;https://www.freedesktop.org/software/appstream/docs/sect-AppStream-Services-URIHandler.html&quot;&gt;details about the URI format&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.10)&lt;/em&gt; AppStream now supports version 1.1 of the Open Age Rating Service (&lt;a href=&quot;https://hughsie.github.io/oars/index.html&quot;&gt;OARS&lt;/a&gt;), so applications (especially games) can voluntarily age-rate themselves. AppStream does not replace parental guidance here, and all data is purely informational.&lt;/p&gt;



&lt;h2&gt;Library &amp;amp; Implementation Changes&lt;/h2&gt;



&lt;p&gt;Of course, besides changes to the specification, the reference implementation also received a lot of improvements. There are too many to list them all, but a few are noteworthy to mention here.&lt;/p&gt;



&lt;h3&gt;No more automatic desktop-entry file loading&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.3)&lt;/em&gt; By default, libappstream was loading information from local .desktop files into the metadata pool of installed applications. This was done to ensure installed apps were represented in software centers to allow them to be uninstalled. This generated much more pain than it was useful for though, with metadata appearing two to three times in software centers because people didn’t set the &lt;code&gt;X-AppStream-Ignore=true&lt;/code&gt; tag in their desktop-entry files. Also, the generated data was pretty bad. So, newer versions of AppStream will only load data of installed software that doesn’t have an equivalent in the repository metadata if it ships a metainfo file. One more good reason to ship a metainfo file!&lt;/p&gt;



&lt;p&gt;Software centers can override this default behavior change by setting the &lt;code&gt;AS_POOL_FLAG_READ_DESKTOP_FILES&lt;/code&gt; flag for &lt;code&gt;AsPool&lt;/code&gt; instances (which many already did anyway).&lt;/p&gt;



&lt;h3&gt;LMDB caches and other caching improvements&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.7)&lt;/em&gt; One of the biggest pain points in adding new AppStream features was always adjusting the (de)serialization of the new markup: AppStream exists as a YAML version for Debian-based distributions for Collection Metadata, an XML version based on the Metainfo format as default, and a &lt;a href=&quot;https://developer.gnome.org/glib/stable/glib-GVariant.html&quot;&gt;GVariant&lt;/a&gt; binary serialization for on-disk caching. The latter was used to drastically reduce memory consumption and increase speed of software centers: Instead of loading all languages, only the one we currently needed was loaded. The expensive icon-finding logic, building of the token cache for searches and other operations were performed and the result was saved as a binary cache on-disk, so it was instantly ready when the software center was loaded next.&lt;/p&gt;



&lt;p&gt;Adjusting three serialization formats was pretty laborious and a very boring task. And at one point I benchmarked the (de)serialization performance of the different formats and found out the the XML reading/writing was actually massively outperforming that of the GVariant cache. Since the XML parser received much more attention, that was only natural (but there were also other issues with GVariant deserializing large dictionary structures).&lt;/p&gt;



&lt;p&gt;Ultimately, I removed the GVariant serialization and replaced it with a memory-mapped XML-based cache that reuses 99.9% of the existing XML serialization code. The cache uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Lightning_Memory-Mapped_Database&quot;&gt;LMDB&lt;/a&gt;, a small embeddable key-value store. This makes maintaining AppStream much easier, and we are using the same well-tested codepaths for caching now that we also use for normal XML reading/writing. With this change, AppStream also uses even less memory, as we only keep the software components in memory that the software center currently displays. Everything that isn’t directly needed also isn’t in memory. But if we do need the data, it can be pulled from the memory-mapped store very quickly.&lt;/p&gt;



&lt;p&gt;While refactoring the caching code, I also decided to give people using libappstream in their own projects a lot more control over the caching behavior. Previously, libappstream was magically handling the cache behind the back of the application that was using it, guessing which behavior was best for the given usecase. But actually, the application using libappstream knows best how caching should be handled, especially when it creates more than one &lt;code&gt;AsPool&lt;/code&gt; instance to hold and search metadata. Therefore, libappstream will still pick the best defaults it can, but give the application that uses it all control it needs, down to where to place a cache file, to permit more efficient and more explicit management of caches.&lt;/p&gt;



&lt;h3&gt;Validator improvements&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.8)&lt;/em&gt; The AppStream metadata validator, used by running &lt;code&gt;appstreamcli validate &amp;lt;file&amp;gt;&lt;/code&gt;, is the tool that each Metainfo file should run through to ensure it is conformant to the AppStream specification and to give some useful hints to improve the metadata quality. It knows four issue severities: &lt;strong&gt;Pedantic&lt;/strong&gt; issues are hidden by default (show them with the &lt;code&gt;--pedantic&lt;/code&gt; flag) and affect upcoming features or really “nice to have” things that are completely nonessential. &lt;strong&gt;Info&lt;/strong&gt; issues are not directly a problem, but are hints to improve the metadata and get better overall data. Things the specification recommends but doesn’t mandate also fall into this category. &lt;strong&gt;Warnings&lt;/strong&gt; will result in degraded metadata but don’t make the file invalid in its entirety. Yet, they are severe enough that we fail the validation. Things like that are for example a vanishing screenshot from an URL: Most of the data is still valid, but the result may not look as intended. Invalid email addresses, invalid tag properties etc. fall into that category as well: They will all reduce the amount of metadata systems have available. So the metadata should definitely be warning-free in order to be valid. And finally &lt;strong&gt;errors&lt;/strong&gt; are outright violation of the specification that may likely result in the data being ignored in its entirety or large chunks of it being invalid. Malformed XML or invalid SPDX license expressions would fall into that group.&lt;/p&gt;



&lt;p&gt;Previously, the validator would always show very long explanations for all the issues it found, giving detailed information on an issue. While this was nice if there were few issues, it produces very noisy output and makes it harder to quickly spot the actual error. So, the whole validator output was changed to be based on issue tags, a concept that is also known from other lint tools such as Debian’s Lintian: Each error has its own tag string, identifying it. By default, we only show the tag string, line of the issue, severity and component name it affects as well a short repeat of an invalid value (in case that’s applicable to the issue). If people do want to know detailed information, they can get it by passing &lt;code&gt;--explain&lt;/code&gt; to the validation command. This solution has many advantages:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;It makes the output concise and easy to read by humans and is mostly already self-explanatory&lt;/li&gt;&lt;li&gt;Machines can parse the tags easily and identify which issue was emitted, which is very helpful for AppStream’s own testsuite but also for any tool wanting to parse the output&lt;/li&gt;&lt;li&gt;We can now have translators translate the explanatory texts&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;Initially, I didn’t want to have the validator return translated output, as that may be less helpful and harder to search the web for. But now, with the untranslated issue tags and much longer and better explanatory texts, it makes sense to trust the translators to translate the technical explanations well.&lt;/p&gt;



&lt;p&gt;Of course, this change broke any tool that was parsing the old output. I had an old request by people to have &lt;code&gt;appstreamcli&lt;/code&gt; return machine-readable validator output, so they could integrate it better with preexisting CI pipelines and issue reporting software. Therefore, the tool can now return structured, machine-readable output in the YAML format if you pass &lt;code&gt;--format=yaml&lt;/code&gt; to it. That output is guaranteed to be stable and can be parsed by any CI machinery that a project already has running. If needed, other output formats could be added in future, but for now YAML is the only one and people generally seem to be happy with it.&lt;/p&gt;



&lt;h3&gt;Create desktop-entry files from Metainfo&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.9)&lt;/em&gt; As you may have noticed, an AppStream Metainfo file contains some information that a desktop-entry file also contains. Yet, the two file formats serve very different purposes: A desktop file is basically launch instructions for an application, with some information about how it is displayed. A Metainfo file is mostly display information and less to none launch instructions. Admittedly though, there is quite a bit of overlap which may make it useful for some projects to simply generate a desktop-entry file from a Metainfo file. This may not work for all projects, most notably ones where multiple desktop-entry files exists for just one AppStream component. But for the simplest and most common of cases, a direct mapping between Metainfo and desktop-entry file, this option is viable.&lt;/p&gt;



&lt;p&gt;The &lt;code&gt;appstreamcli&lt;/code&gt; tool permits this now, using the &lt;code&gt;appstreamcli make-desktop-file&lt;/code&gt; subcommand. It just needs a Metainfo file as first parameter, and a desktop-entry output file as second parameter. If the desktop-entry file already exists, it will be extended with the new data from tbe Metainfo file. For the &lt;code&gt;Exec&lt;/code&gt; field in a desktop-entry file, &lt;code&gt;appstreamcli&lt;/code&gt; will read the first &lt;code&gt;binary&lt;/code&gt; entry in a &lt;code&gt;provides&lt;/code&gt; tag, or use an explicitly provided line passed via the &lt;code&gt;--exec&lt;/code&gt; parameter.&lt;/p&gt;



&lt;p&gt;Please take a look at the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/unstable/appstream/appstreamcli.1.en.html&quot;&gt;appstreamcli(1)&lt;/a&gt;&lt;/em&gt; manual page for more information on how to use this useful feature.&lt;/p&gt;



&lt;h3&gt;Convert NEWS files to Metainfo and vice versa&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.9)&lt;/em&gt; Writing the XML for release entries in Metainfo files can sometimes be a bit tedious. To make this easier and to integrate better with existing workflows, two new subcommands for &lt;code&gt;appstreamcli&lt;/code&gt; are now available: &lt;code&gt;news-to-metainfo&lt;/code&gt; and &lt;code&gt;metainfo-to-news&lt;/code&gt;. They permit converting a NEWS textfile to Metainfo XML and vice versa, and can be integrated with an application’s build process. Take a look at &lt;a href=&quot;https://github.com/ximion/appstream/blob/master/data/meson.build#L10&quot;&gt;AppStream itself&lt;/a&gt; on how it uses that feature.&lt;/p&gt;



&lt;p&gt;In addition to generating the NEWS output or reading it, there is also a second YAML-based option available. Since YAML is a structured format, more of the features of AppStream release metadata are available in the format, such as marking development releases as such. You can use the &lt;code&gt;--format&lt;/code&gt; flag to switch the output (or input) format to YAML.&lt;/p&gt;



&lt;p&gt;Please take a look at the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/unstable/appstream/appstreamcli.1.en.html&quot;&gt;appstreamcli(1)&lt;/a&gt;&lt;/em&gt; manual page for a bit more information on how to use this feature in your project.&lt;/p&gt;



&lt;h3&gt;Support for recent SPDX syntax&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(Since v0.12.10)&lt;/em&gt; This has been a pain point for quite a while: &lt;a href=&quot;https://spdx.org/specifications&quot;&gt;SPDX&lt;/a&gt; is a project supported by the Linux Foundation to (mainly) provide a unified syntax to identify licenses for Open Source projects. They did change the license syntax twice in incompatible ways though, and AppStream already implemented a previous versions, so we could not simply jump to the latest version without supporting the old one.&lt;/p&gt;



&lt;p&gt;With the latest release of AppStream though, the software should transparently convert between the different version identifiers and also support the most recent SPDX license expressions, including the WITH operator for license exceptions. Please report any issues if you see them!&lt;/p&gt;



&lt;h2&gt;Future Plans?&lt;/h2&gt;



&lt;p&gt;First of all, congratulations for reading this far into the blog post! I hope you liked the new features! In case you skipped here, welcome to one of the most interesting sections of this blog post! &lt;img alt=&quot;😉&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f609.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;



&lt;p&gt;So, what is next for AppStream? The 1.0 release, of course! The project is certainly mature enough to warrant that, and originally I wanted to get the 1.0 release out of the door this February, but it doesn’t look like that date is still realistic. But what does “1.0” actually mean for AppStream? Well, here is a list of the intended changes:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;Removal of almost all deprecated parts of the specification. Some things will remain supported forever though: For example the &lt;code&gt;desktop&lt;/code&gt; component type is technically deprecated for &lt;code&gt;desktop-application&lt;/code&gt; but is so widely used that we will support it forever. Things like the old &lt;code&gt;application&lt;/code&gt; node will certainly go though, and so will the &lt;code&gt;/usr/share/appdata&lt;/code&gt; path as metainfo location, the &lt;code&gt;appcategory&lt;/code&gt; node that nobody uses anymore and all other legacy cruft. I will be mindful about this though: If a feature still has a lot of users, it will stay supported, potentially forever. I am closely monitoring what is used mainly via the information available via the Debian archive. As a general rule of thumb though: A file for which &lt;code&gt;appstreamcli validate&lt;/code&gt; passes today is guaranteed to work and be fine with AppStream 1.0 as well.&lt;/li&gt;&lt;li&gt;Removal of all deprecated API in libappstream. If your application still uses API that is flagged as deprecated, consider migrating to the supported functions and you should be good to go! There are a few bigger refactorings planned for some of the API around releases and data serialization, but in general I don’t expect this to be hard to port.&lt;/li&gt;&lt;li&gt;The 1.0 specification will be covered by an extended stability promise. When a feature is deprecated, there will be no risk that it is removed or become unsupported (so the removal of deprecated stuff in the specification should only happen once). What is in the 1.0 specification will quite likely be supported forever.&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;So, what is holding up the 1.0 release besides the API cleanup work? Well, there are a few more points I want to resolve before releasing the 1.0 release:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;Resolve hosting release information at a remote location, not in the Metainfo file (&lt;a href=&quot;https://github.com/ximion/appstream/issues/240&quot;&gt;#240&lt;/a&gt;): This will be a disruptive change that will need API adjustments in libappstream for sure, and certainly will – if it happens – need the 1.0 release. Fetching release data from remote locations as opposed to having it installed with software makes a lot of sense, and I either want to have this implemented and specified properly for the 1.0 release, or have it explicitly dismissed.&lt;/li&gt;&lt;li&gt;Mobile friendliness / controls metadata (&lt;a href=&quot;https://github.com/ximion/appstream/pull/192&quot;&gt;#192&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/ximion/appstream/issues/55&quot;&gt;#55&lt;/a&gt;): We need some way to identify applications as “works well on mobile”. I also work for a company called Purism which happens to make a Linux-based smartphone, so this is obviously important for us. But it also is very relevant for users and other Linux mobile projects. The main issue here is to define what “mobile” actually means and what information makes sense to have in the Metainfo file to be future-proof. At the moment, I think we should definitely have data on supported input controls for a GUI application (touch vs mouse), but for this the discussion is still not done.&lt;/li&gt;&lt;li&gt;Resolving &lt;code&gt;addon&lt;/code&gt; component type complexity (lots of issue reports): At the moment, an &lt;code&gt;addon&lt;/code&gt; component can be created to extend an existing application by &lt;em&gt;$whatever&lt;/em&gt; thing This can be a plugin, a theme, a wallpaper, extra content, etc. This is all running in the &lt;code&gt;addon&lt;/code&gt; supergroup of components. This makes it difficult for applications and software centers to occasionally group addons into useful groups  – a plugin is functionally very different from a theme. Therefore I intend to possibly allow components to name “addon classes” they support and that addons can sort themselves into, allowing easy grouping and sorting of addons. This would of course add extra complexity. So this feature will either go into the 1.0 release, or be rejected.&lt;/li&gt;&lt;li&gt;Zero pending feature requests for the specification: Any remaining open feature request for the specification itself in AppStream’s issue tracker should either be accepted &amp;amp; implemented, or explicitly deferred or rejected.&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;I am not sure yet when the todo list will be completed, but I am certain that the 1.0  release of AppStream will happen this year, most likely before summer. Any input, especially from users of the format, is highly appreciated.&lt;/p&gt;



&lt;p&gt;Thanks a lot to everyone who contributed or is contributing to the AppStream implementation or specification, you are great! Also, thanks to you, the reader, for using AppStream in your project &lt;img alt=&quot;😉&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f609.png&quot; style=&quot;height: 1em;&quot; /&gt;. I definitely will give a bit more frequent and certainly shorter updates on the project’s progress from now on. Enjoy your rich software metadata, firmware updates and screenshot videos meanwhile! &lt;img alt=&quot;😀&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f600.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;</description>
	<pubDate>Mon, 27 Jan 2020 14:48:00 +0000</pubDate>
</item>
<item>
	<title>Simos Xenitellis: How to use virtual machines in LXD</title>
	<guid isPermaLink="false">https://blog.simos.info/?p=4394</guid>
	<link>https://blog.simos.info/how-to-use-virtual-machines-in-lxd/</link>
	<description>&lt;p&gt;Traditionally, &lt;a href=&quot;https://linuxcontainers.org/lxd/introduction/&quot;&gt;LXD&lt;/a&gt; is used to create &lt;strong&gt;&lt;em&gt;system containers&lt;/em&gt;&lt;/strong&gt;, light-weight virtual machines that use Linux Container features and not hardware virtualization.&lt;/p&gt;



&lt;p&gt;However, starting from &lt;a href=&quot;https://discuss.linuxcontainers.org/t/lxd-3-19-has-been-released/6529&quot;&gt;LXD 3.19&lt;/a&gt;, it is possible to create virtual machines as well. That is, &lt;strong&gt;&lt;em&gt;now with LXD you can create both system containers and virtual machines&lt;/em&gt;&lt;/strong&gt;. &lt;/p&gt;



&lt;p&gt;In the following we see how to setup LXD for virtual machines, then start a virtual machine and use it. Finally, we go through some troubleshooting. &lt;/p&gt;



&lt;h2&gt;How to setup LXD for virtual machines&lt;/h2&gt;



&lt;p&gt;Launching LXD virtual machines requires some preparation. We need to pass some information to the virtual machine so that we can then be able to connect to it as soon as it boots up. We pass the necessary information to the virtual machine using a&lt;a href=&quot;https://linuxcontainers.org/lxd/docs/master/profiles&quot;&gt; LXD profile&lt;/a&gt;, through &lt;a href=&quot;https://cloudinit.readthedocs.io/en/latest/&quot;&gt;cloud-init&lt;/a&gt;.&lt;/p&gt;



&lt;h4&gt;Creating a LXD profile for virtual machines&lt;/h4&gt;



&lt;p&gt;Here is such a profile. There is a &lt;code&gt;cloud-init&lt;/code&gt; configuration that essentially has all the information that is passed to the virtual machine. Then, there is a &lt;strong&gt;&lt;em&gt;config&lt;/em&gt;&lt;/strong&gt; device that makes available a disk device to the virtual machine, and from there it can setup a VM-specific LXD component.&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;config:
   user.user-data: |
     #cloud-config
     ssh_pwauth: yes
     
     users:
       - name: ubuntu
         passwd: &quot;$6$iBF0eT1/6UPE2u$V66Rk2BMkR09pHTzW2F.4GHYp3Mb8eu81Sy9srZf5sVzHRNpHP99JhdXEVeN0nvjxXVmoA6lcVEhOOqWEd3Wm0&quot;
         lock_passwd: false
         groups: lxd
         shell: /bin/bash
         sudo: ALL=(ALL) NOPASSWD:ALL
description: LXD profile for virtual machines
devices:
  config:
    source: cloud-init:config
    type: disk
name: vm
used_by:

&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;This profile&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;Enables password authentication in SSH (&lt;strong&gt;&lt;em&gt;ssh_pwauth: yes&lt;/em&gt;&lt;/strong&gt;)&lt;/li&gt;&lt;li&gt;Adds a non-root user &lt;strong&gt;&lt;em&gt;ubuntu&lt;/em&gt;&lt;/strong&gt; with password &lt;strong&gt;&lt;em&gt;ubuntu&lt;/em&gt;&lt;/strong&gt;. See &lt;strong&gt;&lt;em&gt;Troubleshooting&lt;/em&gt;&lt;/strong&gt; below on how to change this.&lt;/li&gt;&lt;li&gt;The password is not in a locked state.&lt;/li&gt;&lt;li&gt;The user account belongs to the &lt;strong&gt;&lt;em&gt;lxd&lt;/em&gt;&lt;/strong&gt; group, in case we want to run LXD inside the LXD virtual machine.&lt;/li&gt;&lt;li&gt;The shell is &lt;strong&gt;&lt;em&gt;/bin/bash&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Can &lt;strong&gt;&lt;em&gt;sudo&lt;/em&gt;&lt;/strong&gt; to all without requiring a password. &lt;/li&gt;&lt;li&gt;Some extra configuration will be passed to the virtual machine through an ISO image named &lt;strong&gt;&lt;em&gt;config.iso&lt;/em&gt;&lt;/strong&gt;. Once you get a shell in the virtual machine, you can install the rest of the support by mounting this ISO image and running the installer. &lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;We now need to create a profile with the above content. Here is how we do this. You first create an empty profile called &lt;strong&gt;&lt;em&gt;vm&lt;/em&gt;&lt;/strong&gt;. Then, you run the &lt;strong&gt;&lt;em&gt;cat | lxc profile edit vm&lt;/em&gt;&lt;/strong&gt; command which allows you to paste the above profile configuration and finally hit Control+D to have it saved. Alternatively, you can run &lt;code&gt;lxc profile edit vm&lt;/code&gt; and then paste in there the following text. The profile was adapted from &lt;a href=&quot;https://discuss.linuxcontainers.org/t/lxd-3-19-has-been-released/6529&quot;&gt;the LXD 3.19 announcement page&lt;/a&gt;.&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;$ &lt;strong&gt;lxc profile create vm&lt;/strong&gt;
$&lt;strong&gt; cat | lxc profile edit vm&lt;/strong&gt;
&lt;strong&gt;config:
   user.user-data: |
     #cloud-config
     ssh_pwauth: yes
     
     users:
       - name: ubuntu
         passwd: &quot;$6$iBF0eT1/6UPE2u$V66Rk2BMkR09pHTzW2F.4GHYp3Mb8eu81Sy9srZf5sVzHRNpHP99JhdXEVeN0nvjxXVmoA6lcVEhOOqWEd3Wm0&quot;
         lock_passwd: false
         groups: lxd
         shell: /bin/bash
         sudo: ALL=(ALL) NOPASSWD:ALL
description: LXD profile for virtual machines
devices:
  config:
    source: cloud-init:config
    type: disk
name: vm
used_by:&lt;/strong&gt;

&lt;strong&gt;Ctrl^D&lt;/strong&gt;
$ &lt;strong&gt;lxc profile show vm&lt;/strong&gt;&lt;/pre&gt;



&lt;p&gt;We have created the profile with the virtual machine-specific. We have now the pieces in place to launch a LXD virtual machine. &lt;/p&gt;



&lt;h2&gt;Launching a LXD virtual machine&lt;/h2&gt;



&lt;p&gt;We launch a LXD virtual machine with the following command. It is the standard &lt;code&gt;lxc launch&lt;/code&gt; command, with the addition of the &lt;code&gt;--vm&lt;/code&gt; option to create a virtual machine (instead of a system container). We specify the &lt;code&gt;default&lt;/code&gt; profile (whichever base configuration you use in your LXD installation) and on top of that we add our VM-specific configuration with &lt;code&gt;--profile vm&lt;/code&gt;. Depending on your computer’s specifications, it takes a few seconds to launch the container, and then less than 10 seconds for the VM to boot up and receive the IP address from your network.&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;$ &lt;strong&gt;lxc launch ubuntu:18.04 vm1 --vm --profile default --profile vm&lt;/strong&gt;
Creating vm1
Starting vm1
$ &lt;strong&gt;lxc list vm1&lt;/strong&gt;
+------+---------+------+------+-----------------+-----------+
| NAME |  STATE  | IPV4 | IPV6 |      TYPE       | SNAPSHOTS |
+------+---------+------+------+-----------------+-----------+
| vm1  | RUNNING |      |      | VIRTUAL-MACHINE | 0         |
+------+---------+------+------+-----------------+-----------+
$ &lt;strong&gt;lxc list vm1&lt;/strong&gt;
+------+---------+--------------------+------+-----------------+-----------+
| NAME |  STATE  |        IPV4        | IPV6 |      TYPE       | SNAPSHOTS |
+------+---------+--------------------+------+-----------------+-----------+
| vm1  | RUNNING | 10.10.10.20 (eth0) |      | VIRTUAL-MACHINE | 0         |
+------+---------+--------------------+------+-----------------+-----------+
$ &lt;/pre&gt;



&lt;p&gt;We have enabled password authentication for SSH, which means that we can connect to the VM straight away with the following command. &lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;$ &lt;strong&gt;ssh ubuntu@10.10.10.20&lt;/strong&gt;
Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-74-generic x86_64)

* Documentation:  https://help.ubuntu.com
* Management:     https://landscape.canonical.com
* Support:        https://ubuntu.com/advantage 

System information as of Fri Jan 24 09:22:19 UTC 2020 
 System load:  0.03              Processes:             100
 Usage of /:   10.9% of 8.68GB   Users logged in:       0
 Memory usage: 15%               IP address for enp3s5: 10.10.10.20
 Swap usage:   0%

0 packages can be updated.
0 updates are security updates.

The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

ubuntu@vm1:~$ &lt;/pre&gt;



&lt;h2&gt;Using the console in a LXD VM&lt;/h2&gt;



&lt;p&gt;LXD has the &lt;code&gt;lxc console&lt;/code&gt; command to give you &lt;a href=&quot;https://en.wikipedia.org/wiki/Linux_console&quot;&gt;a console&lt;/a&gt; to a running system container and virtual machine. You can use the console to view the boot messages as they appear, and also log in using a username and password. In the LXD profile we set up a password primarily to be able to connect through the &lt;code&gt;lxc console&lt;/code&gt;. Let’s get a shell through the console.&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;$ &lt;strong&gt;lxc console vm1&lt;/strong&gt;
To detach from the console, press: +a q                      [NOTE: Press &lt;strong&gt;&lt;em&gt;Enter&lt;/em&gt;&lt;/strong&gt; at this point]

Ubuntu 18.04.3 LTS vm1 ttyS0

vm1 login: &lt;strong&gt;ubuntu&lt;/strong&gt;
Password: &lt;strong&gt;**********&lt;/strong&gt;
Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-74-generic x86_64)

* Documentation:  https://help.ubuntu.com
* Management:     https://landscape.canonical.com
* Support:        https://ubuntu.com/advantage 

System information as of Fri Jan 24 09:22:19 UTC 2020 
 System load:  0.03              Processes:             100
 Usage of /:   10.9% of 8.68GB   Users logged in:       0
 Memory usage: 15%               IP address for enp3s5: 10.10.10.20
 Swap usage:   0%

0 packages can be updated.
0 updates are security updates.

The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

ubuntu@vm1:~$  &lt;/pre&gt;



&lt;p&gt;To exit from the console, logout from the shell first, then press &lt;strong&gt;Ctrl+A q&lt;/strong&gt;.&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;ubuntu@vm1:~$ &lt;strong&gt;logout&lt;/strong&gt;

Ubuntu 18.04.3 LTS vm1 ttyS0

vm1 login:                                               [Press &lt;strong&gt;Ctrl+A q&lt;/strong&gt;]
$ &lt;/pre&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Bonus tip&lt;/em&gt;&lt;/strong&gt;: When you launch a LXD VM, you can run straight away &lt;code&gt;lxc console vm1&lt;/code&gt; and you get the chance to view the boot up messages of the Linux kernel in the VM as they appear. &lt;/p&gt;



&lt;h2&gt;Setting up the LXD agent inside the VM&lt;/h2&gt;



&lt;p&gt;In any VM environment the VM is separated from the host. For usability purposes, we often add a service in the VM so that it makes it easier to access the VM resources from your host. This service is available in the config device that was made available to the VM through cloud-init. At some point in the future, the LXD virtual machine images will be adapted so that they automatically setup the configuration from the config device. But for now, we do this manually by setting up the LXD agent service. First, get a shell into the virtual machine either through SSH or &lt;code&gt;lxc console&lt;/code&gt;. We become &lt;em&gt;root&lt;/em&gt; and perform the &lt;em&gt;mount&lt;/em&gt; of the config device. We can see the exact files of the config device. We run &lt;code&gt;./install.sh&lt;/code&gt; and make the LXD Agent service run automatically in the VM. Finally, we reboot the VM so that the changes take effect. &lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;ubuntu@vm1:~$ &lt;strong&gt;sudo -i&lt;/strong&gt;
root@vm1:~# &lt;strong&gt;mount -t 9p config /mnt/&lt;/strong&gt;
root@vm1:~# &lt;strong&gt;cd /mnt/&lt;/strong&gt;
root@vm1:/mnt# &lt;strong&gt;ls -l&lt;/strong&gt;
total 6390
-r-------- 1 999 root      745 Jan 24 09:18 agent.crt
-r-------- 1 999 root      288 Jan 24 09:18 agent.key
dr-x------ 2 999 root        5 Jan 24 09:18 cloud-init
-rwx------ 1 999 root      595 Jan 24 09:18 install.sh
-r-x------ 1 999 root 11495360 Jan 24 09:18 lxd-agent
-r-------- 1 999 root      713 Jan 24 09:18 server.crt
dr-x------ 2 999 root        4 Jan 24 09:18 systemd
root@vm1:/mnt# &lt;strong&gt;./install.sh &lt;/strong&gt;
Created symlink /etc/systemd/system/multi-user.target.wants/lxd-agent.service → /lib/systemd/system/lxd-agent.service.
Created symlink /etc/systemd/system/multi-user.target.wants/lxd-agent-9p.service → /lib/systemd/system/lxd-agent-9p.service.

LXD agent has been installed, reboot to confirm setup.
To start it now, unmount this filesystem and run: systemctl start lxd-agent-9p lxd-agent
root@vm1:/mnt# &lt;strong&gt;reboot&lt;/strong&gt;&lt;/pre&gt;



&lt;p&gt;Now the LXD Agent service is running in the VM. We are ready to use the LXD VM just like a LXD system container. &lt;/p&gt;



&lt;h2&gt;Using a LXD virtual machine&lt;/h2&gt;



&lt;p&gt;By installing the LXD agent inside the LXD VM, we can run the usual LXD commands such as &lt;code&gt;lxc exec&lt;/code&gt;, &lt;code&gt;lxc file&lt;/code&gt;, etc. Here is how to get a shell, either using the built-in alias &lt;code&gt;lxc shell&lt;/code&gt;, or &lt;code&gt;lxc exec&lt;/code&gt; to get a shell with the non-root account of the Ubuntu container images (from the repository &lt;code&gt;ubuntu:&lt;/code&gt;).&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;$ &lt;strong&gt;lxc shell vm1&lt;/strong&gt;
root@vm1:~# logout
$ &lt;strong&gt;lxc exec vm1 -- sudo --user ubuntu --login&lt;/strong&gt;
ubuntu@vm1:~$&lt;/pre&gt;



&lt;p&gt;We can transfer files between the host and the LXD virtual machine. We create a file &lt;code&gt;mytest.txt&lt;/code&gt; on the host. We push that file to the virtual machine &lt;code&gt;vm1&lt;/code&gt;. The destination of the &lt;em&gt;push&lt;/em&gt; is &lt;code&gt;vm1/home/ubuntu/&lt;/code&gt;, where &lt;code&gt;vm1&lt;/code&gt; is the name of the virtual machine (or system container). It is a bit weird that we do not use &lt;code&gt;:&lt;/code&gt; to separate the name from the path, just like in SSH and elsewhere. The reason is that &lt;code&gt;:&lt;/code&gt; is used to specify a remote LXD server, so it cannot be used to separate the name from the path. We then perform a recursive pull of the &lt;code&gt;ubuntu&lt;/code&gt; home directory and place it in &lt;code&gt;/tmp&lt;/code&gt;. Finally, we have a look at the retrieved directory. &lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;$ &lt;strong&gt;echo &quot;This is a test&quot; &amp;gt; mytest.txt&lt;/strong&gt;
$ &lt;strong&gt;lxc file push mytest.txt vm1/home/ubuntu/&lt;/strong&gt;
$ &lt;strong&gt;lxc file pull --recursive vm1/home/ubuntu/ /tmp/&lt;/strong&gt;
$ &lt;strong&gt;ls -ld /tmp/ubuntu/&lt;/strong&gt;
drwxr-xr-x 4 myusername myusername 4096 Jan  28 01:00 /tmp/ubuntu/
$ &lt;/pre&gt;



&lt;p&gt;We can view the &lt;code&gt;lxc info&lt;/code&gt; of the virtual machine.&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;$ &lt;strong&gt;lxc info vm1 &lt;/strong&gt;
Name: vm1
Location: none
Remote: unix://
Architecture: x86_64
Created: 2020/01/27 20:20 UTC
Status: Stopped
Type: virtual-machine
Profiles: default, vm&lt;/pre&gt;



&lt;p&gt;Other functionality that is available to system containers should be made also available to virtual machines in the following months. &lt;/p&gt;



&lt;h2&gt;Troubleshooting&lt;/h2&gt;



&lt;h3&gt;Error: unknown flag: –vm&lt;/h3&gt;



&lt;p&gt;You will get this error message when you try to launch a virtual machine while your version of LXD is 3.18 or lower. VM support has been added to LXD 3.19, therefore the version should be either 3.19 or newer. &lt;/p&gt;



&lt;h3&gt;Error: Failed to connect to lxd-agent&lt;/h3&gt;



&lt;p&gt;You can launched a LXD VM and you are trying to connect to it using &lt;code&gt;lxc exec&lt;/code&gt; and get a shell (or run other commands). The LXD VM needs to have a service running inside the VM that will receive the &lt;code&gt;lxc exec&lt;/code&gt; commands. This service has not been installed yet into the LXD VM, or for some reason it is not running. &lt;/p&gt;



&lt;h3&gt;Error: The LXD VM does not get automatically an IP address&lt;/h3&gt;



&lt;p&gt;The LXD virtual machine should be able to get an IP address from LXD’s &lt;code&gt;dnsmasq&lt;/code&gt; without issues. &lt;/p&gt;



&lt;p&gt;&lt;code&gt;macvlan&lt;/code&gt; works as well but would not show up in &lt;code&gt;lxc list vm1&lt;/code&gt; until you setup the LXD Agent. &lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;$ &lt;strong&gt;lxc list vm1
&lt;/strong&gt;+------+---------+----------------------+------+-----------------+-----------+
| NAME |  STATE  |         IPV4         | IPV6 |      TYPE       | SNAPSHOTS |
+------+---------+----------------------+------+-----------------+-----------+
| vm1  | RUNNING | 192.168.1.9 (enp3s5) |      | VIRTUAL-MACHINE | 0         |
+------+---------+----------------------+------+-----------------+-----------+&lt;/pre&gt;



&lt;h3&gt;I created a LXD VM and did not have to do any preparation at all!&lt;/h3&gt;



&lt;p&gt;When you &lt;code&gt;lxc launch&lt;/code&gt;or &lt;code&gt;lxc init&lt;/code&gt; with the aim to create a LXD VM, you need to remember to pass the &lt;code&gt;--vm&lt;/code&gt; option in order to create a virtual machine instead of a container. To verify whether your newly created machine is a &lt;em&gt;system container&lt;/em&gt; or a &lt;em&gt;virtual machine&lt;/em&gt;, run &lt;code&gt;lxc list&lt;/code&gt; and it should show you the type under the &lt;strong&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/strong&gt; column.&lt;/p&gt;



&lt;h3&gt;How do I change the VM password in the LXD profile?&lt;/h3&gt;



&lt;p&gt;You can generate a new password using the following command. We are not required to &lt;strong&gt;&lt;em&gt;echo -n&lt;/em&gt;&lt;/strong&gt; in this case because &lt;strong&gt;&lt;em&gt;mkpasswd&lt;/em&gt;&lt;/strong&gt; with take care of the newline for us. We use the &lt;strong&gt;&lt;em&gt;SHA-512&lt;/em&gt;&lt;/strong&gt; method, because this is &lt;a href=&quot;https://wiki.ubuntu.com/Security/Features&quot;&gt;the password hashing algorithm since Ubuntu 16.04&lt;/a&gt;.&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;$  &lt;strong&gt;echo &quot;mynewpassword&quot; | &lt;code&gt;mkpasswd --method=SHA-512 --stdin&lt;/code&gt;&lt;/strong&gt;
$6$BzEIxmCSyPK7$GQgw5i7SIIY0k2Oa/YmBVzmDZ4/zaxx/qJVzKBfG6uaaPYfb2efJGmJ8xxRsCaxxrYzO2NuPawrPd1DD/DsPk/
$ &lt;/pre&gt;



&lt;p&gt;Then, run &lt;code&gt;lxc profile edit vm&lt;/code&gt; and replace the old password field with your new one. &lt;/p&gt;



&lt;h3&gt;How do I set my public key instead of a password?&lt;/h3&gt;



&lt;p&gt;Instead of &lt;code&gt;passwd&lt;/code&gt;, use &lt;code&gt;ssh-authorized-keys&lt;/code&gt;. See &lt;a href=&quot;https://cloudinit.readthedocs.io/en/19.4/topics/examples.html?highlight=ssh_authorized_keys&quot;&gt;the cloud-init example on ssh-authorized-keys&lt;/a&gt;. &lt;/p&gt;



&lt;h2&gt;Discussion&lt;/h2&gt;



&lt;p&gt;In LXD 3.19 there is initial support for virtual machines. As new versions of LXD are being developed, more features from system containers will get implemented into virtual machines as well. In April 2020 we will be getting LXD 4.0, long-term support for five to ten years. There is ongoing work to add as much functionality for virtual machines in order to make it into the feature freeze for LXD 4.0. If you are affected, it makes sense to follow closely the development of virtual machine support in LXD towards the LXD 4.0 feature freeze.&lt;/p&gt;
&lt;div class=&quot;saboxplugin-wrap&quot;&gt;&lt;div class=&quot;saboxplugin-gravatar&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;avatar avatar-100 photo&quot; height=&quot;100&quot; src=&quot;https://secure.gravatar.com/avatar/5c04c6b5f513d926ea9d77782a3843a1?s=100&amp;amp;d=wavatar&amp;amp;r=g&quot; width=&quot;100&quot; /&gt;&lt;/div&gt;&lt;div class=&quot;saboxplugin-authorname&quot;&gt;&lt;a class=&quot;vcard author&quot; href=&quot;https://blog.simos.info/author/simos/&quot; rel=&quot;author&quot;&gt;&lt;span class=&quot;fn&quot;&gt;Simos Xenitellis&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;saboxplugin-desc&quot;&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;saboxplugin-web &quot;&gt;&lt;a href=&quot;https://blog.simos.info/&quot; target=&quot;_self&quot;&gt;blog.simos.info/&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Fri, 24 Jan 2020 10:08:24 +0000</pubDate>
</item>
<item>
	<title>Raphaël Hertzog: Freexian’s report about Debian Long Term Support, December 2019</title>
	<guid isPermaLink="false">https://raphaelhertzog.com/?p=3863</guid>
	<link>https://raphaelhertzog.com/2020/01/23/freexians-report-about-debian-long-term-support-december-2019/</link>
	<description>&lt;p&gt;
 &lt;img alt=&quot;A Debian LTS logo&quot; class=&quot;alignright size-full wp-image-3226&quot; height=&quot;128&quot; src=&quot;https://raphaelhertzog.com/files/2015/03/Debian-LTS-2-small.png&quot; width=&quot;128&quot; /&gt;

 Like &lt;a href=&quot;https://raphaelhertzog.com/tag/Freexian+LTS/&quot;&gt;each month&lt;/a&gt;, here comes a report about the work of &lt;a href=&quot;http://www.freexian.com/services/debian-lts.html&quot;&gt;paid contributors&lt;/a&gt; to &lt;a href=&quot;https://wiki.debian.org/LTS&quot;&gt;Debian LTS&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
        Individual reports
&lt;/h3&gt;

In December, 208.00 work hours have been dispatched among 14 paid contributors. Their reports are available:
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://lists.debian.org/debian-lts/2020/01/msg00011.html&quot;&gt;Abhijith PA&lt;/a&gt; did 10.0h (out of 10h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://lists.debian.org/debian-lts/2020/01/msg00018.html&quot;&gt;Adrian Bunk&lt;/a&gt; did 4.5h (out of 16.5h assigned), thus carrying over 12h to January.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.decadent.org.uk/ben/blog/debian-lts-work-december-2019.html&quot;&gt;Ben Hutchings&lt;/a&gt; did 20.25h (out of 16.5h assigned and 3.75h from November).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://linuxpenguins.xyz/brian/debian_lts/2018/12/29/Debian_LTS_report/&quot;&gt;Brian May&lt;/a&gt; did 10h (out of 10h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://chris-lamb.co.uk/posts/free-software-activities-in-december-2019#debian-lts&quot;&gt;Chris Lamb&lt;/a&gt; did 16.5h (out of 16.5h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://lists.debian.org/debian-lts/2020/01/msg00021.html&quot;&gt;Emilio Pozuelo Monfort&lt;/a&gt; did 16.5h (out of 16.5h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://lists.debian.org/debian-lts/2019/12/msg00085.html&quot;&gt;Hugo Lefeuvre&lt;/a&gt; did 12h (out of 16.5h assigned), thus carrying over 4.5h to January.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://gambaru.de/blog/2020/01/11/my-free-software-activities-in-december-2019/&quot;&gt;Markus Koschany&lt;/a&gt; did 16.5h (out of 16.5h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://sunweavers.net/blog/node/106&quot;&gt;Mike Gabriel&lt;/a&gt; did 15h (out of 15h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://inguza.com/report/debian-long-term-support-work-2019-december&quot;&gt;Ola Lundqvist&lt;/a&gt; did 5.5h (out of 8h assigned, so he gave 3.5h back to the pool).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://lists.debian.org/debian-lts/2020/01/msg00000.html&quot;&gt;Roberto C. Sánchez&lt;/a&gt; did 16.5h (out of 16.5h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://blog.beuc.net/posts/Debian_LTS_and_ELTS_-_December_2019/&quot;&gt;Sylvain Beucler&lt;/a&gt; did 16.5h (out of 16.5h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.alteholz.eu/2020/01/my-debian-activities-in-december-2019/&quot;&gt;Thorsten Alteholz&lt;/a&gt; did 16.5h (out of 16.5h assigned).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://utkarsh2102.tk/debian/2020/01/01/debian-activities-for-december-2019.html&quot;&gt;Utkarsh Gupta&lt;/a&gt; did 16.5h (out of 16.5h assigned).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
        Evolution of the situation
&lt;/h3&gt;

&lt;p&gt;

	 Though December was as quiet as to be expected due to the holiday season, the usual amount of security
	updates were still released by our contributors.
&lt;br /&gt;
	We currently have  59 LTS sponsors each month sponsoring  219h. Still, as always we are welcoming &lt;a href=&quot;https://www.freexian.com/services/debian-lts.html&quot;&gt;new LTS sponsors&lt;/a&gt;! 
&lt;br /&gt;

&lt;/p&gt;

&lt;p&gt;
        The &lt;a href=&quot;https://security-tracker.debian.org/tracker/status/release/oldoldstable&quot;&gt;security tracker&lt;/a&gt; currently lists 34 packages with a known CVE and the &lt;a href=&quot;https://salsa.debian.org/security-tracker-team/security-tracker/raw/master/data/dla-needed.txt&quot;&gt;dla-needed.txt file&lt;/a&gt; has 33 packages needing an update.
&lt;/p&gt;

&lt;h3&gt;
        Thanks to our sponsors
&lt;/h3&gt;

&lt;p&gt;New sponsors are in bold.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Platinum sponsors:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.toshiba.co.jp/worldwide/index.html&quot;&gt;TOSHIBA&lt;/a&gt; (for 52 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt; (for 42 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cip-project.org&quot;&gt;Civil Infrastructure Platform (CIP)&lt;/a&gt; (for 20 months)&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Gold sponsors:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.blablacar.fr&quot;&gt;Blablacar&lt;/a&gt; (for 67 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.roche.com/about/business/diagnostics.htm&quot;&gt;Roche Diagnostics International AG&lt;/a&gt; (for 63 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.linode.com&quot;&gt;Linode&lt;/a&gt; (for 57 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.babiel.com&quot;&gt;Babiel GmbH&lt;/a&gt; (for 46 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.plathome.com&quot;&gt;Plat’Home&lt;/a&gt; (for 45 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ox.ac.uk&quot;&gt;University of Oxford&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Silver sponsors:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.positive-internet.com&quot;&gt;The Positive Internet Company&lt;/a&gt; (for 68 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.domainnameshop.com&quot;&gt;Domeneshop AS&lt;/a&gt; (for 67 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.nantesmetropole.fr/&quot;&gt;Nantes Métropole&lt;/a&gt; (for 61 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.dalenys.com&quot;&gt;Dalenys&lt;/a&gt; (for 57 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.univention.de&quot;&gt;Univention GmbH&lt;/a&gt; (for 53 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://portail.univ-st-etienne.fr/&quot;&gt;Université Jean Monnet de St Etienne&lt;/a&gt; (for 53 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ribboncommunications.com/&quot;&gt;Ribbon Communications, Inc.&lt;/a&gt; (for 47 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.exonet.nl&quot;&gt;Exonet B.V.&lt;/a&gt; (for 36 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.lrz.de&quot;&gt;Leibniz Rechenzentrum&lt;/a&gt; (for 30 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cineca.it&quot;&gt;CINECA&lt;/a&gt; (for 20 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.diplomatie.gouv.fr&quot;&gt;Ministère de l’Europe et des Affaires Étrangères&lt;/a&gt; (for 14 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cloudways.com&quot;&gt;Cloudways Ltd&lt;/a&gt; (for 3 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dinahosting.com&quot;&gt;Dinahosting SL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Bronze sponsors:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.seznam.cz&quot;&gt;Seznam.cz, a.s.&lt;/a&gt; (for 68 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.evolix.fr&quot;&gt;Evolix&lt;/a&gt; (for 67 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mytux.fr&quot;&gt;MyTux&lt;/a&gt; (for 67 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://linuxhotel.de&quot;&gt;Linuxhotel GmbH&lt;/a&gt; (for 65 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://intevation.de&quot;&gt;Intevation GmbH&lt;/a&gt; (for 64 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://daevel.fr&quot;&gt;Daevel SARL&lt;/a&gt; (for 63 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bitfolk.com&quot;&gt;Bitfolk LTD&lt;/a&gt; (for 62 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.megaspace.de&quot;&gt;Megaspace Internet Services GmbH&lt;/a&gt; (for 62 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.greenbone.net&quot;&gt;Greenbone Networks GmbH&lt;/a&gt; (for 61 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://numlog.fr&quot;&gt;NUMLOG&lt;/a&gt; (for 61 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wingo.ch/&quot;&gt;WinGo AG&lt;/a&gt; (for 60 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lheea.ec-nantes.fr&quot;&gt;Ecole Centrale de Nantes – LHEEA&lt;/a&gt; (for 57 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sig-io.nl&quot;&gt;Sig-I/O&lt;/a&gt; (for 54 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.entrouvert.com/&quot;&gt;Entr’ouvert&lt;/a&gt; (for 52 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://adfinis-sygroup.ch&quot;&gt;Adfinis SyGroup AG&lt;/a&gt; (for 49 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.tesorion.nl/&quot;&gt;Tesorion&lt;/a&gt; (for 44 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.allogarage.fr&quot;&gt;GNI MEDIA&lt;/a&gt; (for 43 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.legi.grenoble-inp.fr&quot;&gt;Laboratoire LEGI – UMR 5519 / CNRS&lt;/a&gt; (for 43 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bearstech.com&quot;&gt;Bearstech&lt;/a&gt; (for 35 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lihas.de&quot;&gt;LiHAS&lt;/a&gt; (for 35 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.people-doc.com&quot;&gt;People Doc&lt;/a&gt; (for 31 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.catalyst.net.nz&quot;&gt;Catalyst IT Ltd&lt;/a&gt; (for 29 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.supagro.fr&quot;&gt;Supagro&lt;/a&gt; (for 25 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://demarcq.net&quot;&gt;Demarcq SAS&lt;/a&gt; (for 23 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://trapx.com/&quot;&gt;TrapX Security&lt;/a&gt; (for 20 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.univ-grenoble-alpes.fr&quot;&gt;Université Grenoble Alpes&lt;/a&gt; (for 10 months)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.touchweb.fr&quot;&gt;TouchWeb SAS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;p style=&quot;font-size: smaller;&quot;&gt;&lt;a href=&quot;https://raphaelhertzog.com/2020/01/23/freexians-report-about-debian-long-term-support-december-2019/#comments&quot;&gt;No comment&lt;/a&gt; | Liked this article? &lt;a href=&quot;http://raphaelhertzog.com/support-my-work/&quot;&gt;Click here&lt;/a&gt;. | My blog is &lt;a href=&quot;http://flattr.com/thing/26545/apt-get-install-debian-wizard&quot;&gt;Flattr-enabled&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Thu, 23 Jan 2020 18:19:28 +0000</pubDate>
</item>
<item>
	<title>Ubuntu Studio: Ubuntu Studio 19.04 reaches End Of Life</title>
	<guid isPermaLink="false">http://ubuntustudio.org/?p=1718</guid>
	<link>http://ubuntustudio.org/2020/01/ubuntu-studio-19-04-reaches-end-of-life/</link>
	<description>Our favorite Disco Dingo, Ubuntu Studio 19.04, has reached end-of-life and will no longer receive any updates. If you have not yet upgraded, please do so now or forever lose the ability to upgrade! Ubuntu Studio 20.04 LTS is scheduled for April of 2020. The transition from 19.10 to 20.04... &lt;a class=&quot;moretag&quot; href=&quot;http://ubuntustudio.org/2020/01/ubuntu-studio-19-04-reaches-end-of-life/&quot;&gt;Continue reading&lt;/a&gt;</description>
	<pubDate>Thu, 23 Jan 2020 00:00:03 +0000</pubDate>
</item>
<item>
	<title>Kubuntu General News: Plasma 5.18 LTS Beta (5.17.90) Available for Testing</title>
	<guid isPermaLink="false">https://kubuntu.org/?p=4323</guid>
	<link>https://kubuntu.org/news/plasma-5-18-lts-beta-5-17-90-available-for-testing/</link>
	<description>&lt;p&gt;Are you using Kubuntu 19.10 Eoan Ermine, our current Stable release? Or are you already running our development builds of the upcoming 20.04 LTS Focal Fossa?&lt;/p&gt;



&lt;p&gt;We currently have &lt;a href=&quot;https://kde.org/announcements/plasma-5.17.90.php&quot;&gt;Plasma 5.17.90&lt;/a&gt; (Plasma 5.18 Beta)  available in our &lt;a href=&quot;https://launchpad.net/~kubuntu-ppa/+archive/ubuntu/beta&quot;&gt;Beta PPA&lt;/a&gt; for Kubuntu 19.10.&lt;/p&gt;



&lt;p&gt;The 5.18 beta is also available in the main Ubuntu archive for the 20.04 development release, and can be found on our &lt;a href=&quot;http://cdimage.ubuntu.com/kubuntu/daily-live/current/&quot;&gt;daily ISO images&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;This is a Beta Plasma release, so testers should be aware that bugs and issues may exist.&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;



&lt;p&gt;If you are prepared to test, then…..&lt;/p&gt;



&lt;div class=&quot;wp-block-spacer&quot; style=&quot;height: 23px;&quot;&gt;&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;For 19.10 add the PPA and then upgrade&lt;/strong&gt;&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;sudo add-apt-repository ppa:kubuntu-ppa/beta &amp;amp;&amp;amp; sudo apt update &amp;amp;&amp;amp; sudo apt full-upgrade -y&lt;/pre&gt;



&lt;p&gt;Then reboot. If you cannot reboot from the application launcher,&lt;/p&gt;



&lt;pre class=&quot;wp-block-preformatted&quot;&gt;systemctl reboot&lt;/pre&gt;



&lt;p&gt;from the terminal.&lt;/p&gt;



&lt;blockquote class=&quot;wp-block-quote&quot;&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;In case of issues, testers should be prepare to use ppa-purge to remove the PPA and revert/downgrade packages. &lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;



&lt;div class=&quot;wp-block-spacer&quot; style=&quot;height: 23px;&quot;&gt;&lt;/div&gt;



&lt;p&gt;Kubuntu is part of the &lt;a href=&quot;https://www.kde.org/community/whatiskde/&quot;&gt;KDE community&lt;/a&gt;, so this testing will benefit both Kubuntu as well as upstream KDE Plasma software, which is used by many other distributions too.&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;If you believe you might have found a packaging bug, you can use a  &lt;a href=&quot;https://launchpad.net/&quot;&gt;launchpad.net&lt;/a&gt; to post testing feedback to the Kubuntu team as a bug, or give feedback on IRC [1], Telegram [2] or mailing lists [3]. &lt;/li&gt;&lt;li&gt;If you believe you have found a bug in the underlying software, then &lt;a href=&quot;https://bugs.kde.org&quot;&gt;bugs.kde.org&lt;/a&gt; is the best place to file your bug report.&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;Please review the &lt;a href=&quot;https://kde.org/announcements/plasma-5.17.90.php&quot;&gt;release announcement&lt;/a&gt; and  &lt;a href=&quot;https://kde.org/announcements/plasma-5.17.5-5.17.90-changelog.php&quot;&gt;changelog.&lt;/a&gt;&lt;/p&gt;



&lt;blockquote class=&quot;wp-block-quote&quot;&gt;&lt;p&gt;[Test Case]&lt;/p&gt;&lt;p&gt;* General tests:&lt;br /&gt;– Does plasma desktop start as normal with no apparent regressions over 5.16 or 5.17?&lt;br /&gt;– General workflow – testers should carry out their normal tasks, using the plasma features they normally do, and test common subsystems such as audio, settings changes, compositing, desktop affects, suspend etc.&lt;/p&gt;&lt;p&gt;* Specific tests:&lt;br /&gt;– Check the changelog:&lt;br /&gt;– Identify items with front/user facing changes capable of specific testing. e.g. “clock combobox instead of tri-state checkbox for 12/24 hour display.”&lt;br /&gt;– Test the ‘fixed’ functionality or ‘new’ feature.&lt;/p&gt;&lt;/blockquote&gt;



&lt;p&gt;Testing involves some technical set up to do, so while you do not need to be a highly advanced K/Ubuntu user, some proficiently in apt-based package management is advisable.&lt;/p&gt;



&lt;p&gt;Testing is very important to the quality of the software Ubuntu and Kubuntu developers package and release.&lt;/p&gt;



&lt;p&gt;We need your help to get this important beta release in shape for Kubuntu and the KDE community as a whole.&lt;/p&gt;



&lt;p&gt;Thanks!&lt;/p&gt;



&lt;p&gt;Please stop by the &lt;a href=&quot;irc://irc.freenode.net/kubuntu-devel&quot;&gt;Kubuntu-devel IRC channel&lt;/a&gt; or &lt;a href=&quot;https://t.me/kubuntu_support&quot;&gt;Telegram group&lt;/a&gt; if you need clarification of any of the steps to follow.&lt;/p&gt;



&lt;p&gt;[1] – irc://irc.freenode.net/kubuntu-devel&lt;br /&gt;[2] – https://t.me/kubuntu_support&lt;br /&gt;[3] – https://lists.ubuntu.com/mailman/listinfo/kubuntu-devel&lt;br /&gt;&lt;/p&gt;</description>
	<pubDate>Fri, 17 Jan 2020 09:48:36 +0000</pubDate>
</item>
<item>
	<title>Jonathan Riddell: KUserFeedback 0.9.90 Beta Release</title>
	<guid isPermaLink="false">https://jriddell.org/?p=1135</guid>
	<link>https://jriddell.org/2020/01/15/kuserfeedback-0-9-90-beta-release/</link>
	<description>&lt;p&gt;KUserFeedback is a framework for collecting user feedback for applications via telemetry and surveys.&lt;/p&gt;
&lt;p&gt;The library comes with an accompanying control and result UI tool.&lt;/p&gt;
&lt;p&gt;https://download.kde.org/unstable/kuserfeedback/&lt;/p&gt;
&lt;p&gt;Signed by &lt;a href=&quot;https://sks-keyservers.net/pks/lookup?op=vindex&amp;amp;search=0xEC94D18F7F05997E&quot;&gt;Jonathan Riddell &amp;lt;jr@jriddell.org&amp;gt; 2D1D5B0588357787DE9EE225EC94D18F7F05997E&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jriddell.org/wp-content/uploads/2020/01/kuserfeedback.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-1136&quot; height=&quot;494&quot; src=&quot;https://jriddell.org/wp-content/uploads/2020/01/kuserfeedback.png&quot; width=&quot;827&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;KUserFeedback as it will be used in Plasma 5.18 LTS&lt;/p&gt;</description>
	<pubDate>Wed, 15 Jan 2020 16:15:17 +0000</pubDate>
</item>
<item>
	<title>Dmitry Shachnev: Qt packages built with OpenGL ES support are now available</title>
	<guid isPermaLink="false">tag:mitya57.me,2020-01-15:/weblog/2020/01/qt-opengl-es-packages-available.html</guid>
	<link>https://mitya57.me/weblog/2020/01/qt-opengl-es-packages-available.html</link>
	<description>&lt;p&gt;Some time ago, there was a &lt;a href=&quot;https://lists.debian.org/debian-devel/2018/11/msg00457.html&quot;&gt;thread&lt;/a&gt; on debian-devel where we discussed how to
make Qt packages work on hardware that supports &lt;a href=&quot;https://www.khronos.org/opengles/&quot;&gt;OpenGL ES&lt;/a&gt;, but not the
desktop OpenGL.&lt;/p&gt;
&lt;p&gt;My first proposal was to switch to OpenGL ES by default on ARM64, as that is
the main affected architecture. After a lengthy discussion, it was decided to
ship two versions of Qt packages instead, to support more (OpenGL variant,
architecture) configurations.&lt;/p&gt;
&lt;p&gt;So now I am announcing that we finally have the versions of &lt;a href=&quot;https://packages.debian.org/sid/libqt5gui5-gles&quot;&gt;Qt GUI&lt;/a&gt; and
&lt;a href=&quot;https://packages.debian.org/sid/libqt5quick5-gles&quot;&gt;Qt Quick&lt;/a&gt; libraries that are &lt;em&gt;built against OpenGL ES&lt;/em&gt;, and the release
team helped us to rebuild the archive for compatibility with them.
These packages are &lt;em&gt;not co-installable&lt;/em&gt; together with the regular
(desktop OpenGL) Qt packages, as they provide the same set of shared
libraries. So most packages now have an alternative dependency like
&lt;code&gt;libqt5gui5 (&amp;gt;= 5.x) | libqt5gui5-gles (&amp;gt;= 5.x)&lt;/code&gt;. Packages get such a
dependency automatically if they are using &lt;code&gt;${shlibs:Depends}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;These Qt packages will be mostly needed by ARM64 users, however they may
be also useful on other architectures too. Note that &lt;em&gt;armel and armhf are
not affected&lt;/em&gt;, because there Qt was built against OpenGL ES from the very
beginning. So far there are no plans to make two versions of Qt on these
architectures, however we are open to bug reports.&lt;/p&gt;
&lt;p&gt;To try that on your system (running Bullseye or Sid), just run this command:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# apt install libqt5gui5-gles libqt5quick5-gles
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The other Qt submodule packages do not need a second variant, because
they do not use any OpenGL API directly. Most of the Qt applications are
installable with these packages. At the moment, Plasma is not installable
because &lt;a href=&quot;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=948908&quot;&gt;plasma-desktop FTBFS&lt;/a&gt;, but that will be fixed sooner or later.&lt;/p&gt;
&lt;p&gt;One major missing thing is PyQt5. It is linking against some Qt helper
functions that only exist for desktop OpenGL build, so we will probably
need to &lt;a href=&quot;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=948112#15&quot;&gt;build a special version of PyQt5&lt;/a&gt; for OpenGL ES.&lt;/p&gt;
&lt;p&gt;If you want to use any OpenGL ES specific API in your package, build it
against qtbase5-gles-dev package instead of qtbase5-dev. There is no
qtdeclarative5-gles-dev so far, however if you need it, please let us know.&lt;/p&gt;
&lt;p&gt;In case you have any questions, please feel free to file a bug against
one of the new packages, or contact us at the &lt;a href=&quot;mailto:pkg-kde-talk@alioth-lists.debian.net&quot;&gt;pkg-kde-talk&lt;/a&gt; mailing list.&lt;/p&gt;</description>
	<pubDate>Wed, 15 Jan 2020 14:55:00 +0000</pubDate>
</item>
<item>
	<title>Lubuntu Blog: Lubuntu 19.04 End of Life and Current Support Statuses</title>
	<guid isPermaLink="false">https://lubuntu.me/?p=3464</guid>
	<link>https://lubuntu.me/lubuntu-19-04-end-of-life-and-current-support-statuses/</link>
	<description>Lubuntu 19.04 (Disco Dingo) will reach End of Life on Thursday, January 23, 2020. This means that after that date there will be no further security updates or bugfixes released. We highly recommend that you update to 19.10 as soon as possible if you are still running 19.04. After January 23rd, the only supported releases […]</description>
	<pubDate>Sun, 12 Jan 2020 18:50:08 +0000</pubDate>
</item>
<item>
	<title>Costales: Podcast Ubuntu Y Otras Hierbas S04E03: Privacidad en la Red y entrevista Paco Molinero por traducciones Ubuntu</title>
	<guid isPermaLink="true">https://costales.github.io/posts/podcast-ubuntu-y-otras-hierbas-s04-e03/</guid>
	<link>https://costales.github.io/posts/podcast-ubuntu-y-otras-hierbas-s04-e03/</link>
	<description>&lt;p&gt;&lt;a href=&quot;https://twitter.com/ferlanero&quot;&gt;Fernando Lanero&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/fmolinero&quot;&gt;Paco Molinero&lt;/a&gt; y &lt;a href=&quot;https://twitter.com/costalesdev&quot;&gt;Marcos Costales&lt;/a&gt; analizamos la privacidad en la red de redes: Internet.
Además entrevistamos a &lt;a href=&quot;https://twitter.com/fmolinero&quot;&gt;Paco Molinero&lt;/a&gt; como responsable del grupo de traductores de Ubuntu al Español en Launchpad &lt;a href=&quot;https://translations.launchpad.net/ubuntu&quot;&gt;URL de traducción&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLrtOacI496LQE-2js3gwgv2upN72zJpO8&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://3.bp.blogspot.com/-pqRTouOwi80/XOAuxqZSCNI/AAAAAAAASk0/3dTw3jV8w4YNNYXTgnlMd1mdBRuUVudrQCLcBGAs/s1600/Screenshot%2Bfrom%2B2019-05-18%2B18%253A11%253A31.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Escúchanos en:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ivoox.com/podcast-ubuntu-otras-hierbas_sq_f1412582_1.html&quot;&gt;Ivoox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://t.me/UbuntuYOtrasHierbas&quot;&gt;Telegram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLrtOacI496LQE-2js3gwgv2upN72zJpO8&quot;&gt;Youtube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Y en tu cliente de podcast habitual con el &lt;a href=&quot;https://www.ivoox.com//ubuntu-otras-hierbas_fg_f1412582_filtro_1.xml&quot;&gt;RSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
	<pubDate>Sat, 11 Jan 2020 15:56:09 +0000</pubDate>
</item>
<item>
	<title>Eric Hammond: Creating AWS IAM Access Analyzers In All Regions Of All Accounts</title>
	<guid isPermaLink="false">https://alestic.com/2020/01/aws-iam-access-analyzer/</guid>
	<link>http://feeds.alestic.com/~r/alestic-planetubuntu/~3/qjS0yu0PH70/</link>
	<description>&lt;p&gt;Amazon recently announced the &lt;a href=&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html&quot;&gt;AWS IAM Access Analyzer&lt;/a&gt;,
a useful tool to help discover if you have granted unintended access
to specific types of resources in your AWS account.&lt;/p&gt;

&lt;p&gt;At the moment, an Access Analyzer needs to be created in each region
of each account where you want to run it.&lt;/p&gt;

&lt;p&gt;Since this manual requirement can be a lot of work, it is a common
complaint from customers. Given that Amazon listens to customer
feedback and since we currently have to specify a “type” of “ACCOUNT”,
I expect at some point Amazon may make it easier to run Access
Analyzer across all regions and maybe in all accounts in an AWS
Organization. Until then…&lt;/p&gt;

&lt;p&gt;This article shows how I created an AWS IAM Access Analyzer in all
regions of all accounts in my AWS Organization using the aws-cli.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;To make this easy, I use the bash helper functions that I defined
in last week’s blog post here:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://alestic.com/2019/12/aws-cli-across-organization-accounts/&quot;&gt;Running AWS CLI Commands Across All Accounts In An AWS Organization&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Please read the blog post to see what assumptions I make about the AWS
Organization and account setup. You may need to tweak things if your
setup differs from mine.&lt;/p&gt;

&lt;p&gt;Here is my GitHub repo that makes it more convenient for me to install
the bash functions. If your AWS account structure matches mine
sufficiently, it might work for you, too:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/alestic/aws-cli-multi-account-sessions&quot;&gt;https://github.com/alestic/aws-cli-multi-account-sessions&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;iam-access-analyzer-in-all-regions-of-single-account&quot;&gt;IAM Access Analyzer In All Regions Of Single Account&lt;/h2&gt;

&lt;p&gt;To start, let’s show how to create an IAM Access Analyzer in all
regions of a single account.&lt;/p&gt;

&lt;p&gt;Here’s a simple command to get all the regions in the current AWS
account:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aws ec2 describe-regions \
  --output text \
  --query 'Regions[][RegionName]'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command creates an IAM Access Analyzer in a specific
region. We’ll tack on a UUID because that’s what Amazon does, though I
suspect it’s not really necessary.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;region=us-east-1
uuid=$(uuid -v4 -FSIV || echo &quot;1&quot;) # may need to install &quot;uuid&quot; command
analyzer=&quot;accessanalyzer-$uuid&quot;
aws accessanalyzer create-analyzer \
   --region &quot;$region&quot; \
   --analyzer-name &quot;$analyzer&quot; \
   --type ACCOUNT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By default, there is a limit of a single IAM Access Analyzer per
account region. The fact that this is a “default limit” implies that
it may be increased by request, but for this guide, we’ll just not
create an IAM Access Analyzer if one already exists.&lt;/p&gt;

&lt;p&gt;This command lists the name of any IAM Access Analyzers that might
already have been created in a region:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;region=us-east-1
aws accessanalyzer list-analyzers \
  --region &quot;$region&quot; \
  --output text \
  --query 'analyzers[][name]'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can put the above together, iterating over the regions, checking to
see if an IAM Access Analyzer already exists, and creating one if it
doesn’t:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;regions=$(aws ec2 describe-regions \
  --output text \
  --query 'Regions[][RegionName]' |
  sort)

for region in $regions; do
  analyzer=$(aws accessanalyzer list-analyzers \
    --region &quot;$region&quot; \
    --output text \
    --query 'analyzers[][name]')
  if [ -n &quot;$analyzer&quot; ]; then
    echo &quot;$region: EXISTING: $analyzer&quot;
  else
    uuid=$(uuid -v4 -FSIV || echo &quot;1&quot;) # may need to install &quot;uuid&quot; command
    analyzer=&quot;accessanalyzer-$uuid&quot;
    echo &quot;$region: CREATING: $analyzer&quot;
    aws accessanalyzer create-analyzer \
       --region &quot;$region&quot; \
       --analyzer-name &quot;$analyzer&quot; \
       --type ACCOUNT \
       &amp;gt; /dev/null # only show errors
  fi
done
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;creating-iam-access-analyzers-in-all-regions-of-all-accounts&quot;&gt;Creating IAM Access Analyzers In All Regions Of All Accounts&lt;/h2&gt;

&lt;p&gt;Now let’s prepare to run the above in multiple accounts using the
aws-cli-multi-account-sessions bash helper functions from last week’s
article:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:alestic/aws-cli-multi-account-sessions.git
source aws-cli-multi-account-sessions/functions.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Specify the values for &lt;code&gt;source_profile&lt;/code&gt; and &lt;code&gt;mfa_serial&lt;/code&gt; from your
aws-cli config file. You can leave the &lt;code&gt;mfa_serial&lt;/code&gt; empty if you
aren’t using MFA:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source_profile=your_aws_cli_source_profile
mfa_serial=arn:aws:iam::YOUR_ACCOUNT:mfa/YOUR_USER
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Specify the role you can assume in all accounts:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;role=&quot;admin&quot; # Yours might be called &quot;OrganizationAccountAccessRole&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Get a list of all accounts in the AWS Organization, and a list of all
regions:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;accounts=$(aws organizations list-accounts \
             --output text \
             --query 'Accounts[].[JoinedTimestamp,Status,Id,Email,Name]' |
           grep ACTIVE |
           sort |
           cut -f3) # just the ids

regions=$(aws ec2 describe-regions \
            --output text \
            --query 'Regions[][RegionName]' |
          sort)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run this once to create temporary session credentials with MFA:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aws-session-init $source_profile $mfa_serial
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Iterate through AWS accounts, running the necessary AWS CLI commands
to create an AIM Access Analyzer in each account/role and each region:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;for account in $accounts; do
  echo &quot;Visiting account: $account&quot;
  aws-session-set $account $role || continue

  for region in $regions; do
    # Run the aws-cli commands using the assume role credentials
    analyzers=$(aws-session-run \
                  aws accessanalyzer list-analyzers \
                    --region &quot;$region&quot; \
                    --output text \
                    --query 'analyzers[][name]')
    if [ -n &quot;$analyzers&quot; ]; then
      echo &quot;$account/$region: EXISTING: $analyzers&quot;
    else
      uuid=$(uuid -v4 -FSIV || echo &quot;1&quot;)
      analyzer=&quot;accessanalyzer-$uuid&quot;
      echo &quot;$account/$region: CREATING: $analyzer&quot;
      aws-session-run \
        aws accessanalyzer create-analyzer \
          --region &quot;$region&quot; \
          --analyzer-name &quot;$analyzer&quot; \
          --type ACCOUNT \
          &amp;gt; /dev/null # only show errors
    fi
  done
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Clear out bash variables holding temporary AWS credentials:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aws-session-cleanup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In a bit, you can go to the &lt;a href=&quot;https://us-west-2.console.aws.amazon.com/access-analyzer/&quot;&gt;AWS IAM Console&lt;/a&gt; and view what
the Access Analyzers found.&lt;/p&gt;

&lt;p&gt;Yep, you have to look at the Access Analyzer findings in each account
and each region. Wouldn’t it be nice if we had some way to collect all
this centrally? I think so, too, so I’m looking into what can be done
there. Thoughts welcome in the comments below or on Twitter.&lt;/p&gt;

&lt;h2 id=&quot;cleanup&quot;&gt;Cleanup&lt;/h2&gt;

&lt;p&gt;The following deletes all IAM Access Analyzers in all regions in the
current account. You don’t need to do this if you want to leave the
IAM Access Analyzers running, especially since there is no additional
cost for keeping them.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# WARNING! DESTRUCTIVE!

source_profile=[as above]
mfa_serial=[as above]
role=[as above]

accounts=$(aws organizations list-accounts \
             --output text \
             --query 'Accounts[].[JoinedTimestamp,Status,Id,Email,Name]' |
           grep ACTIVE |
           sort |
           cut -f3) # just the ids

regions=$(aws ec2 describe-regions \
            --profile &quot;$source_profile&quot; \
            --output text \
            --query 'Regions[][RegionName]' |
          sort)

aws-session-init $source_profile $mfa_serial

for account in $accounts; do
  echo &quot;Visiting account: $account&quot;
  aws-session-set $account $role || continue

  for region in $regions; do
    # Run the aws-cli commands using the assume role credentials
    analyzers=$(aws-session-run \
                  aws accessanalyzer list-analyzers \
                    --region &quot;$region&quot; \
                    --output text \
                    --query 'analyzers[][name]')
    for analyzer in $analyzers; do
      echo &quot;$account/$region: DELETING: $analyzer&quot;
      aws-session-run \
        aws accessanalyzer delete-analyzer \
          --region &quot;$region&quot; \
          --analyzer-name &quot;$analyzer&quot;
    done
  done
done

aws-session-cleanup
&lt;/code&gt;&lt;/pre&gt;
        &lt;p&gt;Original article and comments: &lt;a href=&quot;https://alestic.com/2020/01/aws-iam-access-analyzer/&quot;&gt;https://alestic.com/2020/01/aws-iam-access-analyzer/&lt;/a&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/alestic-planetubuntu/~4/qjS0yu0PH70&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 06 Jan 2020 08:01:00 +0000</pubDate>
</item>
<item>
	<title>Sean Davis: Catfish 1.4.12 Released</title>
	<guid isPermaLink="false">https://bluesabre.org/tag/xubuntu/rss/5e0ce8c520e37e725f3aefd1</guid>
	<link>https://bluesabre.org/2020/01/01/catfish-1-4-12-released/</link>
	<description>&lt;img alt=&quot;Catfish 1.4.12 Released&quot; src=&quot;https://bluesabre.org/content/images/2020/01/catfish-1.4.12-home.png&quot; /&gt;&lt;p&gt;Welcome to 2020! Let's ring in the new year with a brand new Catfish release.&lt;/p&gt;&lt;h2 id=&quot;what-s-new&quot;&gt;What's New&lt;/h2&gt;&lt;h3 id=&quot;wayland-support&quot;&gt;Wayland Support&lt;/h3&gt;&lt;p&gt;Catfish 1.4.12 adds support for running on Wayland. Before now, there were some X-specific dependencies related to handling display sizes. These have now been resolved, and Catfish should run smoothly and consistently everywhere.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img alt=&quot;Catfish 1.4.12 Released&quot; class=&quot;kg-image&quot; src=&quot;https://bluesabre.org/content/images/2020/01/catfish-on-wayland.png&quot; /&gt;Catfish 1.4.12 on Wayland on Ubuntu 19.10&lt;/figure&gt;&lt;h3 id=&quot;dialog-improvements&quot;&gt;Dialog Improvements&lt;/h3&gt;&lt;p&gt;All dialogs now utilize client-side decorations (CSD) and are modal. The main window will continue to respect the window layout setting introduced in the 1.4.10 release.&lt;/p&gt;&lt;p&gt;I also applied a number of fixes to the new Preferences and Search Index dialogs, so they should behave more consistently and work well with keyboard navigation.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-gallery-card kg-width-wide kg-card-hascaption&quot;&gt;&lt;div class=&quot;kg-gallery-container&quot;&gt;&lt;div class=&quot;kg-gallery-row&quot;&gt;&lt;div class=&quot;kg-gallery-image&quot;&gt;&lt;img alt=&quot;Catfish 1.4.12 Released&quot; height=&quot;561&quot; src=&quot;https://bluesabre.org/content/images/2020/01/catfish-about-ss.png&quot; width=&quot;871&quot; /&gt;&lt;/div&gt;&lt;div class=&quot;kg-gallery-image&quot;&gt;&lt;img alt=&quot;Catfish 1.4.12 Released&quot; height=&quot;561&quot; src=&quot;https://bluesabre.org/content/images/2020/01/catfish-prefs-ss.png&quot; width=&quot;871&quot; /&gt;&lt;/div&gt;&lt;div class=&quot;kg-gallery-image&quot;&gt;&lt;img alt=&quot;Catfish 1.4.12 Released&quot; height=&quot;561&quot; src=&quot;https://bluesabre.org/content/images/2020/01/catfish-search-index-ss.png&quot; width=&quot;871&quot; /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;The new dialogs are more streamlined and standardized.&lt;/figure&gt;&lt;h3 id=&quot;release-process-updates&quot;&gt;Release Process Updates&lt;/h3&gt;&lt;p&gt;I've improved the release process to make it easier for maintainers and to ensure builds are free of temporary files. This helps ensure a faster delivery to package maintainers, and therefore to distributions.&lt;/p&gt;&lt;h3 id=&quot;translation-updates&quot;&gt;Translation Updates&lt;/h3&gt;&lt;p&gt;Albanian, Catalan, Chinese (China), Chinese (Taiwan), Czech, Danish, Dutch, French, Galician, German, Italian, Japanese, Norwegian Bokmål, Russian, Serbian, Spanish, Turkish&lt;/p&gt;&lt;h2 id=&quot;downloads&quot;&gt;Downloads&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://archive.xfce.org/src/apps/catfish/1.4/catfish-1.4.12.tar.bz2&quot;&gt;Source tarball&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ md5sum catfish-1.4.12.tar.bz2 
9aad6a0bc695ec8793d4294880974cb2

$ sha1sum catfish-1.4.12.tar.bz2 
4e78e291a2f17c85122a85049bdc837b49afdd66

$ sha256sum catfish-1.4.12.tar.bz2 
c3fb30e02b217752aa493b49769be1a5fc2adde70b22aef381e6c67d5227134a&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Catfish 1.4.12 will be included in Xubuntu 20.04 &quot;Focal Fossa&quot;, available in April.&lt;/p&gt;</description>
	<pubDate>Wed, 01 Jan 2020 21:57:51 +0000</pubDate>
        <enclosure url="https://archive.xfce.org/src/apps/catfish/1.4/catfish-1.4.12.tar.bz2" length="" type="text/html"/>
</item>
<item>
	<title>Eric Hammond: Running AWS CLI Commands Across All Accounts In An AWS Organization</title>
	<guid isPermaLink="false">https://alestic.com/2019/12/aws-cli-across-organization-accounts/</guid>
	<link>http://feeds.alestic.com/~r/alestic-planetubuntu/~3/iLI7JZQkPK8/</link>
	<description>&lt;p&gt;&lt;em&gt;by generating a temporary IAM STS session with MFA then assuming
 cross-account IAM roles&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I recently had the need to run some AWS commands across all AWS
accounts in my AWS Organization. This was a bit more difficult to
accomplish cleanly than I had assumed it might be, so I present the
steps here for me to find when I search the Internet for it in the
future.&lt;/p&gt;

&lt;p&gt;You are also welcome to try out this approach, though if your account
structure doesn’t match mine, it might require some tweaking.&lt;/p&gt;

&lt;h2 id=&quot;assumptions-and-background&quot;&gt;Assumptions And Background&lt;/h2&gt;

&lt;p&gt;(Almost) all of my AWS accounts are in a single AWS Organization. This
allows me to ask the Organization for the list of account ids.&lt;/p&gt;

&lt;p&gt;I have a role named “admin” in each of my AWS accounts. It has a lot
of power to do things. The default cross-account admin role name for
accounts created in AWS Organizations is “&lt;a href=&quot;https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html&quot;&gt;OrganizationAccountAccessRole&lt;/a&gt;”.&lt;/p&gt;

&lt;p&gt;I start with an IAM principal (IAM user or IAM role) that the aws-cli
can access through a “source profile”. This principal has the power to
assume the “admin” role in other AWS accounts. In fact, that principal
has almost no other permissions.&lt;/p&gt;

&lt;p&gt;I require MFA whenever a cross-account IAM role is assumed.&lt;/p&gt;

&lt;p&gt;You can read about how I set up AWS accounts here, including the above
configuration:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://alestic.com/2017/09/aws-organizations-cli/&quot;&gt;Creating AWS Accounts From The Command Line With AWS Organizations&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I use and love the aws-cli and bash. You should, too, especially if
you want to use the instructions in this guide.&lt;/p&gt;

&lt;p&gt;I jump through some hoops in this article to make sure that AWS
credentials never appear in command lines, in the shell history, or in
files, and are not passed as environment variables to processes that
don’t need them (no &lt;code&gt;export&lt;/code&gt;).&lt;/p&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;

&lt;p&gt;For convenience, we can define some bash functions that will improve
clarity when we want to run commands in AWS accounts. These freely use
bash variables to pass information between functions.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;aws-session-init&lt;/code&gt; function obtains temporary session credentials
using MFA (optional). These are used to generate temporary assume-role
credentials for each account without having to re-enter an MFA token
for each account. This function will accept optional MFA serial number
and source profile name. This is run once.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aws-session-init() {
  # Sets: source_access_key_id source_secret_access_key source_session_token
  local source_profile=${1:-${AWS_SESSION_SOURCE_PROFILE:?source profile must be specified}}
  local mfa_serial=${2:-$AWS_SESSION_MFA_SERIAL}
  local token_code=
  local mfa_options=
  if [ -n &quot;$mfa_serial&quot; ]; then
    read -s -p &quot;Enter MFA code for $mfa_serial: &quot; token_code
    echo
    mfa_options=&quot;--serial-number $mfa_serial --token-code $token_code&quot;
  fi
  read -r source_access_key_id \
          source_secret_access_key \
          source_session_token \
    &amp;lt;&amp;lt;&amp;lt;$(aws sts get-session-token \
           --profile $source_profile \
           $mfa_options \
           --output text \
           --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]')
  test -n &quot;$source_access_key_id&quot; &amp;amp;&amp;amp; return 0 || return 1
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;aws-session-set&lt;/code&gt; function obtains temporary assume-role
credentials for the specified AWS account and IAM role. This is run
once for each account before commands are run in that account.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aws-session-set() {
  # Sets: aws_access_key_id aws_secret_access_key aws_session_token
  local account=$1
  local role=${2:-$AWS_SESSION_ROLE}
  local name=${3:-aws-session-access}
  read -r aws_access_key_id \
          aws_secret_access_key \
          aws_session_token \
    &amp;lt;&amp;lt;&amp;lt;$(AWS_ACCESS_KEY_ID=$source_access_key_id \
         AWS_SECRET_ACCESS_KEY=$source_secret_access_key \
         AWS_SESSION_TOKEN=$source_session_token \
         aws sts assume-role \
           --role-arn arn:aws:iam::$account:role/$role \
           --role-session-name &quot;$name&quot; \
           --output text \
           --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]')
  test -n &quot;$aws_access_key_id&quot; &amp;amp;&amp;amp; return 0 || return 1
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;aws-session-run&lt;/code&gt; function runs a provided command, passing in AWS
credentials in environment variables for that process to use. Use this
function to prefix each command that needs to run in the currently set
AWS account/role.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aws-session-run() {
  AWS_ACCESS_KEY_ID=$aws_access_key_id \
  AWS_SECRET_ACCESS_KEY=$aws_secret_access_key \
  AWS_SESSION_TOKEN=$aws_session_token \
    &quot;$@&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;aws-session-cleanup&lt;/code&gt; function should be run once at the end, to
make sure that no AWS credentials are left lying around in bash
variables.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aws-session-cleanup() {
  unset source_access_key_id source_secret_access_key source_session_token
  unset    aws_access_key_id    aws_secret_access_key    aws_session_token
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;running-aws-cli-commands-in-multiple-aws-accounts&quot;&gt;Running aws-cli Commands In Multiple AWS Accounts&lt;/h2&gt;

&lt;p&gt;After you have defined the above bash functions in your current
shell, here’s an example for how to use them to run aws-cli commands
across AWS accounts.&lt;/p&gt;

&lt;p&gt;As mentioned in the assumptions, I have a role named “admin” in each
account. If your role names are less consistent, you’ll need to do
extra work to automate commands.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;role=&quot;admin&quot; # Yours might be called &quot;OrganizationAccountAccessRole&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command gets all of the account ids in the AWS Organization. You
can use whatever accounts and roles you wish, as long as you are
allowed to assume-role into them from the source profile.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;accounts=$(aws organizations list-accounts \
             --output text \
             --query 'Accounts[].[JoinedTimestamp,Status,Id,Email,Name]' |
           grep ACTIVE |
           sort |
           cut -f3) # just the ids
echo &quot;$accounts&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run the initialization function, specifying the aws-cli source profile
for assuming roles, and the MFA device serial number or ARN. These are
the same values as you would use for &lt;code&gt;source_profile&lt;/code&gt; and &lt;code&gt;mfa_serial&lt;/code&gt;
in the aws-cli config file for a &lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-role.html&quot;&gt;profile that assumes an IAM
role&lt;/a&gt;.  Your “source_profile” is probably “default”. If you
don’t use MFA for assuming a cross-account IAM role, then you may
leave MFA serial empty.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source_profile=default # The &quot;source_profile&quot; in your aws-cli config
mfa_serial=arn:aws:iam::YOUR_ACCOUNTID:mfa/YOUR_USER # Your &quot;mfa_serial&quot;

aws-session-init $source_profile $mfa_serial
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, let’s iterate through the AWS accounts, running simple AWS CLI
commands in each account. This example will output each AWS account id
followed by the list of S3 buckets in that account.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;for account in $accounts; do
  # Set up temporary assume-role credentials for an account/role
  # Skip to next account if there was an error.
  aws-session-set $account $role || continue

  # Sample command 1: Get the current account id (should match)
  this_account=$(aws-session-run \
                   aws sts get-caller-identity \
                     --output text \
                     --query 'Account')
  echo &quot;Account: $account ($this_account)&quot;

  # Sample command 2: List the S3 buckets in the account
  aws-session-run aws s3 ls
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Wrap up by clearing out the bash variables holding temporary
credentials.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aws-session-cleanup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: The credentials used by this approach are all temporary and use
the default expiration. If any expire before you complete your tasks,
you may need to adjust some of the commands and limits in your
accounts.&lt;/p&gt;

&lt;h2 id=&quot;credits&quot;&gt;Credits&lt;/h2&gt;

&lt;p&gt;Thanks to my role model, &lt;a href=&quot;https://twitter.com/jt7d&quot;&gt;Jennine Townsend&lt;/a&gt;, the above code
uses a special bash syntax to set the AWS environment variables for
the aws-cli commands without an &lt;code&gt;export&lt;/code&gt;, which would have made the
sensitive environment variables available to other commands we might
need to run. I guess nothing makes you as (justifiably) paranoid as
deep sysadmin experience.&lt;/p&gt;

&lt;p&gt;Jennine also wrote code that demonstrates the same approach of STS
get-session-token with MFA followed by STS assume-role for multiple
roles, but I never quite understood what she was trying to explain to
me until I tried to accomplish the same result. Now I see the light.&lt;/p&gt;

&lt;h2 id=&quot;github-repo&quot;&gt;GitHub Repo&lt;/h2&gt;

&lt;p&gt;For my convenience, I’ve added the above functions into a GitHub repo,
so I can easily add them to my &lt;code&gt;$HOME/.bashrc&lt;/code&gt; and use them in my
regular work.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/alestic/aws-cli-multi-account-sessions&quot;&gt;https://github.com/alestic/aws-cli-multi-account-sessions&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Perhaps you may find it convenient as well. The README provides
instructions for how I set it up, but again, your environment may need
tailoring.&lt;/p&gt;
        &lt;p&gt;Original article and comments: &lt;a href=&quot;https://alestic.com/2019/12/aws-cli-across-organization-accounts/&quot;&gt;https://alestic.com/2019/12/aws-cli-across-organization-accounts/&lt;/a&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/alestic-planetubuntu/~4/iLI7JZQkPK8&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 30 Dec 2019 09:00:00 +0000</pubDate>
</item>
<item>
	<title>Rhonda D&amp;#39;Vine: Puberty</title>
	<guid isPermaLink="true">https://rhonda.deb.at/blog/2019/12/28#puberty</guid>
	<link>https://rhonda.deb.at/blog/2019/12/28#puberty</link>
	<description>&lt;p&gt;I was musing about writing about this publicly. For the first time in all these years of writing pretty personal stuff about my feelings, my way of becoming more honest with myself and a more authentic person through that I was thinking about letting you in on this is a good idea.&lt;/p&gt;

&lt;p&gt;You see, people have used information from my personal blog in the past, and tried to use it against me. Needless to say they failed with it, and it only showed their true face. So why does it feel different this time?&lt;/p&gt;

&lt;p&gt;Thing is, I'm in the midst of my second puberty, and the hormones are kicking in in complete hardcore mode. And it doesn't help at all that there is trans antagonist crap from the past and also from the present popping up left and right at a pace and a concentrated amount that is hard to swallow on its own without the puberty.&lt;/p&gt;

&lt;p&gt;Yes, I used to be able to take those things with a much more stable state. But every. Single. Of. These. Issues is draining all the energy out of myself. And even though I'm aware that I'm not the only one trying to fix all of those, even though for some spots I'm the only one doing the work, it's easier said than done that I don't have to fix the world, when the areas involved mean the world to me. Are areas that support me in so many ways. Are places that I need. And on top of that, the hormones are multiplying the energy drain of those.&lt;/p&gt;

&lt;p&gt;So ... I know it's not that common. I know you are not used to a grown up person to go through puberty. But for god's sake. Don't make it harder than it has to be. I know it's hard to deal with a 46 year old teenager, so to say, I'm just trying to survive in this world of systematic oppression of trans people.&lt;/p&gt;

&lt;p&gt;It would be nice to go for a week without having to cry your eyes out because another hostile event happened that directly affects your existence. The existence of trans lives aren't a matter of different opinions or different points of view, so don't treat it like that, if you want me to believe that you are a person able of empathy and basic respect.&lt;/p&gt;

&lt;p&gt;Sidenote: Finishing to write this at this year's &lt;a href=&quot;https://events.ccc.de/congress/2019/wiki/index.php/Main_Page&quot;&gt;#36c3&lt;/a&gt; is quite interesting because of the conference title: &lt;em&gt;Resource Exhaution&lt;/em&gt;. Oh the irony.&lt;/p&gt;

&lt;p align=&quot;right&quot;&gt;
  &lt;i&gt;&lt;a href=&quot;https://rhonda.deb.at/blog/personal&quot;&gt;/personal&lt;/a&gt; | 
    &lt;a href=&quot;https://rhonda.deb.at/blog/personal/puberty.html&quot;&gt;permanent link&lt;/a&gt; |
    &lt;a href=&quot;https://rhonda.deb.at/blog/personal/puberty.html&quot;&gt;Comments: 14&lt;/a&gt; |
    &lt;a href=&quot;http://flattr.com/thing/46312/Rhondas-Blog&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Flattr this&quot; border=&quot;0&quot; src=&quot;http://api.flattr.com/button/button-compact-static-100x17.png&quot; title=&quot;Flattr this&quot; /&gt;&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;</description>
	<pubDate>Sat, 28 Dec 2019 22:22:00 +0000</pubDate>
</item>

</channel>
</rss>
